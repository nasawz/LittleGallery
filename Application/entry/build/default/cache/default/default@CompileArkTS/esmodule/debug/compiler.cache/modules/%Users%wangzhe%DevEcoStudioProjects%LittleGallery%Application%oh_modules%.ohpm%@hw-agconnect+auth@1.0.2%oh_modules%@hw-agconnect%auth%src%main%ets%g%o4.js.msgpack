‘r@ü™assertions§code¥customTransformCache¨dependencies¢id§meta±moduleSideEffects¨originalCode±originalSourcemap´resolvedIdsÆsourcemapChainµsyntheticNamedExportsµtransformDependenciesÆtransformFiles®cacheAst‘rAê⁄HÊimport { UserExtraRequest } from "../e/i/x3";
import { UserExtraResponse } from "../e/m/h4";
import { PhoneUtil } from "../k/l";
import { UpdatePasswordResponse } from "../e/m/e4";
import { UpdatePasswordRequest } from "../e/i/u3";
import { UpdatePhoneRequest } from "../e/i/v3";
import { UpdatePhoneResponse } from "../e/m/f4";
import { UpdateEmailRequest } from "../e/i/t3";
import { UpdateEmailResponse } from "../e/m/d4";
import { SignInResultImpl } from "../o/t";
import { UserLinkRequest } from "../e/i/y3";
import { ReauthenticateResponse } from "../e/m/a4";
import { ReauthenticateRequest } from "../e/i/p3";
import { UpdateProfileRequest } from "../e/i/w3";
import { UpdateProfileResponse } from "../e/m/g4";
import { UserLinkResponse } from "../e/m/i4";
import { UserUnlinkRequest } from "../e/i/z3";
import { UserUnlinkResponse } from "../e/m/j4";
import { PhoneAuthProvider } from "../x/y";
import { EmailAuthProvider } from "../x/z";
import { AuthBackend } from "../e/f";
import { TokenImpl } from "../o/x2";
import { RefreshTokenResponse } from "../e/m/b4";
import { RefreshTokenRequest } from "../e/i/q3";
import { AGConnectAuthCredentialProvider } from "../r";
import { AuthTokenInterceptor } from "../k/n4";
import List from '@ohos.util.List';
import { AGCAuthError } from "../c/d";
import { AGCAuthErrorCode } from "../c/l1";
import { Logger } from "../e1/f1/g1";
import { HwIdAuthProvider } from "../s1/x/t1";
import { HwIdAuthManager } from "../s1/u1";
const TAG = 'AGConnectDefaultUser';
export class AuthDefaultUser {
    constructor() {
        this.anonymous = false;
        this.uid = '';
        this.displayName = '';
        this.photoUrl = '';
        this.email = '';
        this.phone = '';
        this.providerId = '';
        this.emailVerified = 0;
        this.passwordSetted = 0;
        this.providerService = new r7();
        this.tokenService = new q7();
    }
    static fromRawData(info) {
        let user = new AuthDefaultUser();
        user.anonymous = info.anonymous;
        user.uid = info.uid;
        user.displayName = info.displayName;
        user.photoUrl = info.photoUrl;
        user.email = info.email;
        user.phone = info.phone;
        user.providerId = info.providerId;
        user.emailVerified = info.emailVerified;
        user.passwordSetted = info.passwordSetted;
        user.providerService.providerInfo = info.providerInfo;
        user.tokenService.accessToken = info.accessToken;
        user.tokenService.accessTokenValidPeriod = info.accessTokenValidPeriod;
        user.tokenService.refreshToken = info.refreshToken;
        user.tokenService.startTime = info.startTime;
        return user;
    }
    setStoreManager(v9) {
        this.storeManager = v9;
    }
    setAuthBackend(u9) {
        this.authBackend = u9;
    }
    toRawData() {
        let info = {
            anonymous: this.anonymous,
            uid: this.uid,
            displayName: this.displayName,
            photoUrl: this.photoUrl,
            email: this.email,
            phone: this.phone,
            providerId: this.providerId,
            emailVerified: this.emailVerified,
            passwordSetted: this.passwordSetted,
            providerInfo: this.providerService.providerInfo,
            accessToken: this.tokenService.accessToken,
            accessTokenValidPeriod: this.tokenService.accessTokenValidPeriod,
            refreshToken: this.tokenService.refreshToken,
            startTime: this.tokenService.startTime
        };
        return info;
    }
    getUid() {
        return this.uid;
    }
    getEmail() {
        return this.email;
    }
    getPhone() {
        return this.phone;
    }
    getDisplayName() {
        return this.displayName;
    }
    getPhotoUrl() {
        return this.photoUrl;
    }
    getProviderId() {
        return this.providerId;
    }
    isAnonymous() {
        return this.anonymous;
    }
    getProviderInfo() {
        let p9 = [];
        for (let q9 = 0; q9 < this.providerService.providerInfo?.length; q9++) {
            let r9 = new Map();
            let s9 = Object.keys(this.providerService.providerInfo[q9]);
            for (let t9 = 0; s9 && t9 < s9.length; t9++) {
                r9.set(s9[t9], this.providerService.providerInfo[q9][s9[t9]]);
            }
            p9.push(r9);
        }
        return p9;
    }
    async getToken(o9) {
        if (!o9 && this.tokenService.j()) {
            return Promise.resolve(this.tokenService.m());
        }
        await this.tokenService.o();
        await this.syncToStorage();
        return Promise.resolve(this.tokenService.m());
    }
    async getUserExtra() {
        let l9 = new UserExtraRequest();
        let m9 = new List();
        m9.add(this.createTokenInterceptor());
        let n9 = await this.authBackend.get(l9, new UserExtraResponse(), m9);
        this.displayName = n9.displayName;
        this.photoUrl = n9.photoUrl;
        this.emailVerified = n9.emailVerified;
        this.passwordSetted = n9.passwordSetted;
        this.email = n9.email;
        this.phone = n9.phone;
        await this.syncToStorage();
        return Promise.resolve(n9.userExtra);
    }
    getAccessToken() {
        return this.tokenService.getAccessToken();
    }
    getRefreshToken() {
        return this.tokenService.getRefreshToken();
    }
    getEmailVerified() {
        return this.emailVerified === 1;
    }
    getPasswordSetted() {
        return this.passwordSetted === 1;
    }
    async updateProfile(userProfile) {
        if (!userProfile.displayName || !userProfile.photoUrl) {
            return Promise.reject(new AGCAuthError(AGCAuthErrorCode.FAIL_TO_UPDATE_PROFILE));
        }
        let j9 = new UpdateProfileRequest();
        j9.setDisplayName(userProfile.displayName);
        j9.setPhotoUrl(userProfile.photoUrl);
        let k9 = new List();
        k9.add(this.createTokenInterceptor());
        await this.authBackend.put(j9, new UpdateProfileResponse(), k9);
        this.displayName = userProfile.displayName;
        this.photoUrl = userProfile.photoUrl;
        await this.syncToStorage();
        return Promise.resolve();
    }
    async userReauthenticate(param) {
        let d9 = { 'autoCreateUser': false, 'credentialInfo': param.credentialInfo };
        let credentialInfo = d9.credentialInfo;
        if (!credentialInfo) {
            return Promise.reject(new AGCAuthError(AGCAuthErrorCode.CREDENTIAL_INVALID));
        }
        let e9 = {
            'phone': () => {
                let req = new ReauthenticateRequest();
                let i9 = credentialInfo;
                let credential = PhoneAuthProvider.credentialWithPasswordAndVerifyCode(i9.countryCode, i9.phoneNumber, i9.password, i9.verifyCode);
                credential.prepareUserReauthRequest(req);
                return req;
            },
            'email': () => {
                let req = new ReauthenticateRequest();
                let h9 = credentialInfo;
                let credential = EmailAuthProvider.credentialWithPasswordAndVerifyCode(h9.email, h9.password, h9.verifyCode);
                credential.prepareUserReauthRequest(req);
                return req;
            }
        };
        let f9 = e9[d9.credentialInfo.kind]();
        f9.setAutoCreateUser(d9.autoCreateUser);
        let g9 = new List();
        g9.add(this.createTokenInterceptor());
        let response = await this.authBackend.post(f9, new ReauthenticateResponse(), g9);
        this.reConfigUserFrom(response);
        await this.syncToStorage();
        return Promise.resolve(new SignInResultImpl(this));
    }
    reConfigUserFrom(response) {
        this.anonymous = false;
        this.uid = response.getUserInfo().getUid();
        this.displayName = response.getUserInfo().getDisplayName();
        this.photoUrl = response.getUserInfo().getPhotoUrl();
        this.email = response.getUserInfo().getEmail();
        this.emailVerified = response.getUserInfo().getEmailVerified();
        this.passwordSetted = response.getUserInfo().getPasswordSetted();
        this.phone = response.getUserInfo().getPhone();
        this.providerId = response.getUserInfo().getProvider().toString();
        this.tokenService.accessToken = response.getAccessToken().getToken();
        this.tokenService.accessTokenValidPeriod = response.getAccessToken().getValidPeriod();
        this.tokenService.refreshToken = response.getRefreshToken().getToken();
        this.tokenService.startTime = new Date().getTime();
        this.providerService.providerInfo = response.getProviders();
    }
    async link(credentialInfo) {
        let s8 = {
            'phone': () => {
                let c9 = credentialInfo;
                return PhoneAuthProvider.credentialWithPasswordAndVerifyCode(c9.countryCode, c9.phoneNumber, c9.password, c9.verifyCode);
            },
            'email': () => {
                let b9 = credentialInfo;
                return EmailAuthProvider.credentialWithPasswordAndVerifyCode(b9.email, b9.password, b9.verifyCode);
            },
            'hwid': async () => {
                let authCode = await HwIdAuthManager.getAuthCode(false);
                return HwIdAuthProvider.credentialWithToken(authCode);
            }
        };
        let credential = await s8[credentialInfo.kind]();
        if (!credential) {
            return Promise.reject(new AGCAuthError(AGCAuthErrorCode.USER_LINK_FAILED));
        }
        let t8 = new UserLinkRequest();
        let u8 = credential.getProvider();
        if (u8 === AGConnectAuthCredentialProvider.Email_Provider ||
            u8 === AGConnectAuthCredentialProvider.Phone_Provider) {
            Logger.info(TAG, 'credential is AccountCredential');
            credential.prepareUserLinkRequest(t8);
        }
        else {
            Logger.info(TAG, 'credential is Oauth2Credential');
            credential.prepareUserLinkRequest(t8);
        }
        let self = this;
        let v8 = new List();
        v8.add(this.createTokenInterceptor());
        let w8 = await this.authBackend.post(t8, new UserLinkResponse(), v8);
        let userInfo = w8.getProviderUserInfo();
        if (userInfo) {
            let map = new Map();
            self.userInfoToMap(userInfo, map);
            if (self.anonymous) {
                self.updateAnonymousUserInfo(map);
            }
            self.providerService.t(map);
            if (map["provider"]) {
                let x8 = map["provider"];
                if (AGConnectAuthCredentialProvider.Email_Provider.toString() === x8) {
                    let a9 = map["email"];
                    if (a9) {
                        self.email = a9;
                        self.emailVerified = 1;
                    }
                }
                else if (AGConnectAuthCredentialProvider.Phone_Provider.toString() === x8) {
                    let z8 = map["phone"];
                    if (z8) {
                        self.phone = z8;
                    }
                }
                if (u8 === AGConnectAuthCredentialProvider.Email_Provider ||
                    u8 === AGConnectAuthCredentialProvider.Phone_Provider) {
                    let y8 = credential;
                    if (y8.password !== undefined && y8.password != null && y8.password !== '') {
                        self.passwordSetted = 1;
                    }
                }
            }
        }
        await this.syncToStorage();
        return Promise.resolve(new SignInResultImpl(this));
    }
    async unlink(type) {
        let p8 = this.convertProvider(type);
        if (!p8) {
            return Promise.reject(new AGCAuthError(AGCAuthErrorCode.USER_UNLINK_FAILED));
        }
        let q8 = new UserUnlinkRequest();
        q8.setProvider(p8);
        let r8 = new List();
        r8.add(this.createTokenInterceptor());
        await this.authBackend.post(q8, new UserUnlinkResponse(), r8);
        this.providerService.u(p8.toString());
        if (p8 === AGConnectAuthCredentialProvider.Email_Provider) {
            this.email = '';
            this.emailVerified = 0;
        }
        if (p8 === AGConnectAuthCredentialProvider.Phone_Provider) {
            this.phone = '';
        }
        if (this.providerService.a1(AGConnectAuthCredentialProvider.Email_Provider.toString()) === undefined &&
            this.providerService.a1(AGConnectAuthCredentialProvider.Phone_Provider.toString()) === undefined) {
            this.passwordSetted = 0;
        }
        await this.syncToStorage();
        return Promise.resolve(new SignInResultImpl(this));
    }
    async updateEmail(m8) {
        if (!m8.email || !m8.verifyCode) {
            return Promise.reject(new AGCAuthError(AGCAuthErrorCode.FAIL_TO_UPDATE_EMAIL));
        }
        let n8 = new UpdateEmailRequest();
        n8.setNewEmail(m8.email);
        n8.setNewVerifyCode(m8.verifyCode);
        n8.setLang(m8.lang);
        let o8 = new List();
        o8.add(this.createTokenInterceptor());
        await this.authBackend.put(n8, new UpdateEmailResponse(), o8);
        this.email = m8.email;
        this.providerService.updateEmail(m8.email);
        await this.syncToStorage();
        return Promise.resolve();
    }
    async updatePhone(i8) {
        let j8 = new UpdatePhoneRequest();
        j8.countryCode = i8.countryCode;
        j8.newPhone = i8.phoneNumber;
        j8.newVerifyCode = i8.verifyCode;
        j8.lang = i8.lang;
        let k8 = new List();
        k8.add(this.createTokenInterceptor());
        await this.authBackend.put(j8, new UpdatePhoneResponse(), k8);
        let l8 = PhoneUtil.combinatePhone(i8.countryCode, i8.phoneNumber);
        this.phone = l8;
        this.providerService.updatePhone(l8);
        await this.syncToStorage();
        return Promise.resolve();
    }
    async updatePassword(e8) {
        let f8 = this.convertProvider(e8.providerType);
        let g8 = new UpdatePasswordRequest();
        g8.setProvider(f8);
        g8.setNewPassword(e8.password);
        g8.setNewverifyCode(e8.verifyCode);
        let h8 = new List();
        h8.add(this.createTokenInterceptor());
        await this.authBackend.put(g8, new UpdatePasswordResponse(), h8);
        if (this.passwordSetted === 0) {
            this.passwordSetted = 1;
        }
        return Promise.resolve();
    }
    async dispose() {
        await this.storeManager?.saveUser(null);
        await this.storeManager.deleteUserInfo();
    }
    async syncToStorage() {
        let info = this.toRawData();
        let d8 = JSON.stringify(info);
        await this.storeManager.saveUser(d8);
    }
    createTokenInterceptor() {
        return new AuthTokenInterceptor(this);
    }
    updateAnonymousUserInfo(info) {
        this.anonymous = false;
        this.displayName = info["displayName"]
            ? info["displayName"]
            : '';
        this.photoUrl = info["photoUrl"] ? info["photoUrl"] : '';
        this.email = info["email"] ? info["email"] : '';
        this.phone = info["phone"] ? info["phone"] : '';
        this.providerId = info["provider"] ? info["provider"] : '';
    }
    userInfoToMap(userInfo, map) {
        if (userInfo.getUid()) {
            map["uid"] = userInfo.getUid().toString();
        }
        if (userInfo.getDisplayName()) {
            map["displayName"] = userInfo.getDisplayName().toString();
        }
        if (userInfo.getPhotoUrl()) {
            map["photoUrl"] = userInfo.getPhotoUrl().toString();
        }
        if (userInfo.getEmail()) {
            map["email"] = userInfo.getEmail().toString();
        }
        if (userInfo.getPhone()) {
            map["phone"] = userInfo.getPhone().toString();
        }
        if (userInfo.getProvider()) {
            map["provider"] = userInfo.getProvider().toString();
        }
        if (userInfo.getOpenId()) {
            map["openId"] = userInfo.getOpenId().toString();
        }
    }
    convertProvider(b8) {
        let c8 = {
            'phone': AGConnectAuthCredentialProvider.Phone_Provider,
            'email': AGConnectAuthCredentialProvider.Email_Provider,
            'hwid': AGConnectAuthCredentialProvider.HMS_Provider
        };
        return c8[b8];
    }
}
class q7 {
    constructor() {
        this.accessToken = '';
        this.accessTokenValidPeriod = -1;
        this.refreshToken = '';
        this.b1 = -1;
        this.startTime = -1;
        this.c1 = 5 * 60 * 1000;
    }
    getAccessToken() {
        return this.accessToken;
    }
    getRefreshToken() {
        return this.refreshToken;
    }
    j() {
        if (!this.accessToken) {
            return false;
        }
        let a8 = this.startTime + this.accessTokenValidPeriod * 1000 - this.c1;
        return new Date().getTime() < a8;
    }
    m() {
        return new TokenImpl(this.accessTokenValidPeriod, this.accessToken);
    }
    async o() {
        if (!this.accessToken || !this.refreshToken) {
            return Promise.reject(new AGCAuthError(AGCAuthErrorCode.NULL_TOKEN));
        }
        let y7 = new RefreshTokenRequest(this.refreshToken);
        let z7 = await new AuthBackend().post(y7, new RefreshTokenResponse());
        this.accessToken = z7.accessToken.getToken();
        this.accessTokenValidPeriod = z7.accessToken.getValidPeriod();
        this.startTime = new Date().getTime();
        return Promise.resolve();
    }
}
class r7 {
    constructor() {
        this.providerInfo = [];
    }
    t(info) {
        if (info && this.providerInfo) {
            let providerId = info["provider"];
            if (providerId) {
                this.u(providerId);
            }
            this.providerInfo.push(info);
        }
    }
    d1(x7, key, value) {
        let index = this.a1(x7.toString());
        if (index !== undefined) {
            this.providerInfo[index][key] = value;
        }
    }
    updateEmail(w7) {
        this.d1(AGConnectAuthCredentialProvider.Email_Provider, "email", w7);
    }
    updatePhone(v7) {
        this.d1(AGConnectAuthCredentialProvider.Phone_Provider, "phone", v7);
    }
    u(u7) {
        let index = this.a1(u7);
        if (!this.providerInfo || index === undefined) {
            return;
        }
        this.providerInfo.splice(index, 1);
    }
    a1(s7) {
        let index = undefined;
        if (s7 && this.providerInfo) {
            for (let t7 = 0; t7 < this.providerInfo.length; t7++) {
                let info = this.providerInfo[t7];
                if (info && s7 === info["provider"]) {
                    index = t7;
                    break;
                }
            }
        }
        return index;
    }
}
¬‹  Ÿú/Users/wangzhe/DevEcoStudioProjects/LittleGallery/Application/oh_modules/.ohpm/@hw-agconnect+auth@1.0.2/oh_modules/@hw-agconnect/auth/src/main/ets/e/i/x3.jsŸú/Users/wangzhe/DevEcoStudioProjects/LittleGallery/Application/oh_modules/.ohpm/@hw-agconnect+auth@1.0.2/oh_modules/@hw-agconnect/auth/src/main/ets/e/m/h4.jsŸô/Users/wangzhe/DevEcoStudioProjects/LittleGallery/Application/oh_modules/.ohpm/@hw-agconnect+auth@1.0.2/oh_modules/@hw-agconnect/auth/src/main/ets/k/l.jsŸú/Users/wangzhe/DevEcoStudioProjects/LittleGallery/Application/oh_modules/.ohpm/@hw-agconnect+auth@1.0.2/oh_modules/@hw-agconnect/auth/src/main/ets/e/m/e4.jsŸú/Users/wangzhe/DevEcoStudioProjects/LittleGallery/Application/oh_modules/.ohpm/@hw-agconnect+auth@1.0.2/oh_modules/@hw-agconnect/auth/src/main/ets/e/i/u3.jsŸú/Users/wangzhe/DevEcoStudioProjects/LittleGallery/Application/oh_modules/.ohpm/@hw-agconnect+auth@1.0.2/oh_modules/@hw-agconnect/auth/src/main/ets/e/i/v3.jsŸú/Users/wangzhe/DevEcoStudioProjects/LittleGallery/Application/oh_modules/.ohpm/@hw-agconnect+auth@1.0.2/oh_modules/@hw-agconnect/auth/src/main/ets/e/m/f4.jsŸú/Users/wangzhe/DevEcoStudioProjects/LittleGallery/Application/oh_modules/.ohpm/@hw-agconnect+auth@1.0.2/oh_modules/@hw-agconnect/auth/src/main/ets/e/i/t3.jsŸú/Users/wangzhe/DevEcoStudioProjects/LittleGallery/Application/oh_modules/.ohpm/@hw-agconnect+auth@1.0.2/oh_modules/@hw-agconnect/auth/src/main/ets/e/m/d4.jsŸô/Users/wangzhe/DevEcoStudioProjects/LittleGallery/Application/oh_modules/.ohpm/@hw-agconnect+auth@1.0.2/oh_modules/@hw-agconnect/auth/src/main/ets/o/t.jsŸú/Users/wangzhe/DevEcoStudioProjects/LittleGallery/Application/oh_modules/.ohpm/@hw-agconnect+auth@1.0.2/oh_modules/@hw-agconnect/auth/src/main/ets/e/i/y3.jsŸú/Users/wangzhe/DevEcoStudioProjects/LittleGallery/Application/oh_modules/.ohpm/@hw-agconnect+auth@1.0.2/oh_modules/@hw-agconnect/auth/src/main/ets/e/m/a4.jsŸú/Users/wangzhe/DevEcoStudioProjects/LittleGallery/Application/oh_modules/.ohpm/@hw-agconnect+auth@1.0.2/oh_modules/@hw-agconnect/auth/src/main/ets/e/i/p3.jsŸú/Users/wangzhe/DevEcoStudioProjects/LittleGallery/Application/oh_modules/.ohpm/@hw-agconnect+auth@1.0.2/oh_modules/@hw-agconnect/auth/src/main/ets/e/i/w3.jsŸú/Users/wangzhe/DevEcoStudioProjects/LittleGallery/Application/oh_modules/.ohpm/@hw-agconnect+auth@1.0.2/oh_modules/@hw-agconnect/auth/src/main/ets/e/m/g4.jsŸú/Users/wangzhe/DevEcoStudioProjects/LittleGallery/Application/oh_modules/.ohpm/@hw-agconnect+auth@1.0.2/oh_modules/@hw-agconnect/auth/src/main/ets/e/m/i4.jsŸú/Users/wangzhe/DevEcoStudioProjects/LittleGallery/Application/oh_modules/.ohpm/@hw-agconnect+auth@1.0.2/oh_modules/@hw-agconnect/auth/src/main/ets/e/i/z3.jsŸú/Users/wangzhe/DevEcoStudioProjects/LittleGallery/Application/oh_modules/.ohpm/@hw-agconnect+auth@1.0.2/oh_modules/@hw-agconnect/auth/src/main/ets/e/m/j4.jsŸô/Users/wangzhe/DevEcoStudioProjects/LittleGallery/Application/oh_modules/.ohpm/@hw-agconnect+auth@1.0.2/oh_modules/@hw-agconnect/auth/src/main/ets/x/y.jsŸô/Users/wangzhe/DevEcoStudioProjects/LittleGallery/Application/oh_modules/.ohpm/@hw-agconnect+auth@1.0.2/oh_modules/@hw-agconnect/auth/src/main/ets/x/z.jsŸô/Users/wangzhe/DevEcoStudioProjects/LittleGallery/Application/oh_modules/.ohpm/@hw-agconnect+auth@1.0.2/oh_modules/@hw-agconnect/auth/src/main/ets/e/f.jsŸö/Users/wangzhe/DevEcoStudioProjects/LittleGallery/Application/oh_modules/.ohpm/@hw-agconnect+auth@1.0.2/oh_modules/@hw-agconnect/auth/src/main/ets/o/x2.jsŸú/Users/wangzhe/DevEcoStudioProjects/LittleGallery/Application/oh_modules/.ohpm/@hw-agconnect+auth@1.0.2/oh_modules/@hw-agconnect/auth/src/main/ets/e/m/b4.jsŸú/Users/wangzhe/DevEcoStudioProjects/LittleGallery/Application/oh_modules/.ohpm/@hw-agconnect+auth@1.0.2/oh_modules/@hw-agconnect/auth/src/main/ets/e/i/q3.jsŸó/Users/wangzhe/DevEcoStudioProjects/LittleGallery/Application/oh_modules/.ohpm/@hw-agconnect+auth@1.0.2/oh_modules/@hw-agconnect/auth/src/main/ets/r.jsŸö/Users/wangzhe/DevEcoStudioProjects/LittleGallery/Application/oh_modules/.ohpm/@hw-agconnect+auth@1.0.2/oh_modules/@hw-agconnect/auth/src/main/ets/k/n4.jsŸl hvigor_ignore__Applications_DevEco-Studio.app_Contents_sdk_default_openharmony_ets_api_@ohos.util.List.d.tsŸô/Users/wangzhe/DevEcoStudioProjects/LittleGallery/Application/oh_modules/.ohpm/@hw-agconnect+auth@1.0.2/oh_modules/@hw-agconnect/auth/src/main/ets/c/d.jsŸö/Users/wangzhe/DevEcoStudioProjects/LittleGallery/Application/oh_modules/.ohpm/@hw-agconnect+auth@1.0.2/oh_modules/@hw-agconnect/auth/src/main/ets/c/l1.jsŸû/Users/wangzhe/DevEcoStudioProjects/LittleGallery/Application/oh_modules/.ohpm/@hw-agconnect+auth@1.0.2/oh_modules/@hw-agconnect/auth/src/main/ets/e1/f1/g1.jsŸù/Users/wangzhe/DevEcoStudioProjects/LittleGallery/Application/oh_modules/.ohpm/@hw-agconnect+auth@1.0.2/oh_modules/@hw-agconnect/auth/src/main/ets/s1/x/t1.jsŸõ/Users/wangzhe/DevEcoStudioProjects/LittleGallery/Application/oh_modules/.ohpm/@hw-agconnect+auth@1.0.2/oh_modules/@hw-agconnect/auth/src/main/ets/s1/u1.jsŸö/Users/wangzhe/DevEcoStudioProjects/LittleGallery/Application/oh_modules/.ohpm/@hw-agconnect+auth@1.0.2/oh_modules/@hw-agconnect/auth/src/main/ets/g/o4.js‘rBô±isLocalDependencyØisNodeEntryFileßpkgPathßpkgName™pkgVersion±belongProjectPath±dependencyPkgInfo®commonjsØhostModulesInfo¬¬ŸÖ/Users/wangzhe/DevEcoStudioProjects/LittleGallery/Application/oh_modules/.ohpm/@hw-agconnect+auth@1.0.2/oh_modules/@hw-agconnect/auth≤@hw-agconnect/auth•1.0.2Ÿ=/Users/wangzhe/DevEcoStudioProjects/LittleGallery/Application‘rCíßpkgName™pkgVersion≤@hw-agconnect/auth•1.0.2‘rDíØhasNamedExports™isCommonJS√¬ê√⁄HÊimport { UserExtraRequest } from "../e/i/x3";
import { UserExtraResponse } from "../e/m/h4";
import { PhoneUtil } from "../k/l";
import { UpdatePasswordResponse } from "../e/m/e4";
import { UpdatePasswordRequest } from "../e/i/u3";
import { UpdatePhoneRequest } from "../e/i/v3";
import { UpdatePhoneResponse } from "../e/m/f4";
import { UpdateEmailRequest } from "../e/i/t3";
import { UpdateEmailResponse } from "../e/m/d4";
import { SignInResultImpl } from "../o/t";
import { UserLinkRequest } from "../e/i/y3";
import { ReauthenticateResponse } from "../e/m/a4";
import { ReauthenticateRequest } from "../e/i/p3";
import { UpdateProfileRequest } from "../e/i/w3";
import { UpdateProfileResponse } from "../e/m/g4";
import { UserLinkResponse } from "../e/m/i4";
import { UserUnlinkRequest } from "../e/i/z3";
import { UserUnlinkResponse } from "../e/m/j4";
import { PhoneAuthProvider } from "../x/y";
import { EmailAuthProvider } from "../x/z";
import { AuthBackend } from "../e/f";
import { TokenImpl } from "../o/x2";
import { RefreshTokenResponse } from "../e/m/b4";
import { RefreshTokenRequest } from "../e/i/q3";
import { AGConnectAuthCredentialProvider } from "../r";
import { AuthTokenInterceptor } from "../k/n4";
import List from '@ohos.util.List';
import { AGCAuthError } from "../c/d";
import { AGCAuthErrorCode } from "../c/l1";
import { Logger } from "../e1/f1/g1";
import { HwIdAuthProvider } from "../s1/x/t1";
import { HwIdAuthManager } from "../s1/u1";
const TAG = 'AGConnectDefaultUser';
export class AuthDefaultUser {
    constructor() {
        this.anonymous = false;
        this.uid = '';
        this.displayName = '';
        this.photoUrl = '';
        this.email = '';
        this.phone = '';
        this.providerId = '';
        this.emailVerified = 0;
        this.passwordSetted = 0;
        this.providerService = new r7();
        this.tokenService = new q7();
    }
    static fromRawData(info) {
        let user = new AuthDefaultUser();
        user.anonymous = info.anonymous;
        user.uid = info.uid;
        user.displayName = info.displayName;
        user.photoUrl = info.photoUrl;
        user.email = info.email;
        user.phone = info.phone;
        user.providerId = info.providerId;
        user.emailVerified = info.emailVerified;
        user.passwordSetted = info.passwordSetted;
        user.providerService.providerInfo = info.providerInfo;
        user.tokenService.accessToken = info.accessToken;
        user.tokenService.accessTokenValidPeriod = info.accessTokenValidPeriod;
        user.tokenService.refreshToken = info.refreshToken;
        user.tokenService.startTime = info.startTime;
        return user;
    }
    setStoreManager(v9) {
        this.storeManager = v9;
    }
    setAuthBackend(u9) {
        this.authBackend = u9;
    }
    toRawData() {
        let info = {
            anonymous: this.anonymous,
            uid: this.uid,
            displayName: this.displayName,
            photoUrl: this.photoUrl,
            email: this.email,
            phone: this.phone,
            providerId: this.providerId,
            emailVerified: this.emailVerified,
            passwordSetted: this.passwordSetted,
            providerInfo: this.providerService.providerInfo,
            accessToken: this.tokenService.accessToken,
            accessTokenValidPeriod: this.tokenService.accessTokenValidPeriod,
            refreshToken: this.tokenService.refreshToken,
            startTime: this.tokenService.startTime
        };
        return info;
    }
    getUid() {
        return this.uid;
    }
    getEmail() {
        return this.email;
    }
    getPhone() {
        return this.phone;
    }
    getDisplayName() {
        return this.displayName;
    }
    getPhotoUrl() {
        return this.photoUrl;
    }
    getProviderId() {
        return this.providerId;
    }
    isAnonymous() {
        return this.anonymous;
    }
    getProviderInfo() {
        let p9 = [];
        for (let q9 = 0; q9 < this.providerService.providerInfo?.length; q9++) {
            let r9 = new Map();
            let s9 = Object.keys(this.providerService.providerInfo[q9]);
            for (let t9 = 0; s9 && t9 < s9.length; t9++) {
                r9.set(s9[t9], this.providerService.providerInfo[q9][s9[t9]]);
            }
            p9.push(r9);
        }
        return p9;
    }
    async getToken(o9) {
        if (!o9 && this.tokenService.j()) {
            return Promise.resolve(this.tokenService.m());
        }
        await this.tokenService.o();
        await this.syncToStorage();
        return Promise.resolve(this.tokenService.m());
    }
    async getUserExtra() {
        let l9 = new UserExtraRequest();
        let m9 = new List();
        m9.add(this.createTokenInterceptor());
        let n9 = await this.authBackend.get(l9, new UserExtraResponse(), m9);
        this.displayName = n9.displayName;
        this.photoUrl = n9.photoUrl;
        this.emailVerified = n9.emailVerified;
        this.passwordSetted = n9.passwordSetted;
        this.email = n9.email;
        this.phone = n9.phone;
        await this.syncToStorage();
        return Promise.resolve(n9.userExtra);
    }
    getAccessToken() {
        return this.tokenService.getAccessToken();
    }
    getRefreshToken() {
        return this.tokenService.getRefreshToken();
    }
    getEmailVerified() {
        return this.emailVerified === 1;
    }
    getPasswordSetted() {
        return this.passwordSetted === 1;
    }
    async updateProfile(userProfile) {
        if (!userProfile.displayName || !userProfile.photoUrl) {
            return Promise.reject(new AGCAuthError(AGCAuthErrorCode.FAIL_TO_UPDATE_PROFILE));
        }
        let j9 = new UpdateProfileRequest();
        j9.setDisplayName(userProfile.displayName);
        j9.setPhotoUrl(userProfile.photoUrl);
        let k9 = new List();
        k9.add(this.createTokenInterceptor());
        await this.authBackend.put(j9, new UpdateProfileResponse(), k9);
        this.displayName = userProfile.displayName;
        this.photoUrl = userProfile.photoUrl;
        await this.syncToStorage();
        return Promise.resolve();
    }
    async userReauthenticate(param) {
        let d9 = { 'autoCreateUser': false, 'credentialInfo': param.credentialInfo };
        let credentialInfo = d9.credentialInfo;
        if (!credentialInfo) {
            return Promise.reject(new AGCAuthError(AGCAuthErrorCode.CREDENTIAL_INVALID));
        }
        let e9 = {
            'phone': () => {
                let req = new ReauthenticateRequest();
                let i9 = credentialInfo;
                let credential = PhoneAuthProvider.credentialWithPasswordAndVerifyCode(i9.countryCode, i9.phoneNumber, i9.password, i9.verifyCode);
                credential.prepareUserReauthRequest(req);
                return req;
            },
            'email': () => {
                let req = new ReauthenticateRequest();
                let h9 = credentialInfo;
                let credential = EmailAuthProvider.credentialWithPasswordAndVerifyCode(h9.email, h9.password, h9.verifyCode);
                credential.prepareUserReauthRequest(req);
                return req;
            }
        };
        let f9 = e9[d9.credentialInfo.kind]();
        f9.setAutoCreateUser(d9.autoCreateUser);
        let g9 = new List();
        g9.add(this.createTokenInterceptor());
        let response = await this.authBackend.post(f9, new ReauthenticateResponse(), g9);
        this.reConfigUserFrom(response);
        await this.syncToStorage();
        return Promise.resolve(new SignInResultImpl(this));
    }
    reConfigUserFrom(response) {
        this.anonymous = false;
        this.uid = response.getUserInfo().getUid();
        this.displayName = response.getUserInfo().getDisplayName();
        this.photoUrl = response.getUserInfo().getPhotoUrl();
        this.email = response.getUserInfo().getEmail();
        this.emailVerified = response.getUserInfo().getEmailVerified();
        this.passwordSetted = response.getUserInfo().getPasswordSetted();
        this.phone = response.getUserInfo().getPhone();
        this.providerId = response.getUserInfo().getProvider().toString();
        this.tokenService.accessToken = response.getAccessToken().getToken();
        this.tokenService.accessTokenValidPeriod = response.getAccessToken().getValidPeriod();
        this.tokenService.refreshToken = response.getRefreshToken().getToken();
        this.tokenService.startTime = new Date().getTime();
        this.providerService.providerInfo = response.getProviders();
    }
    async link(credentialInfo) {
        let s8 = {
            'phone': () => {
                let c9 = credentialInfo;
                return PhoneAuthProvider.credentialWithPasswordAndVerifyCode(c9.countryCode, c9.phoneNumber, c9.password, c9.verifyCode);
            },
            'email': () => {
                let b9 = credentialInfo;
                return EmailAuthProvider.credentialWithPasswordAndVerifyCode(b9.email, b9.password, b9.verifyCode);
            },
            'hwid': async () => {
                let authCode = await HwIdAuthManager.getAuthCode(false);
                return HwIdAuthProvider.credentialWithToken(authCode);
            }
        };
        let credential = await s8[credentialInfo.kind]();
        if (!credential) {
            return Promise.reject(new AGCAuthError(AGCAuthErrorCode.USER_LINK_FAILED));
        }
        let t8 = new UserLinkRequest();
        let u8 = credential.getProvider();
        if (u8 === AGConnectAuthCredentialProvider.Email_Provider ||
            u8 === AGConnectAuthCredentialProvider.Phone_Provider) {
            Logger.info(TAG, 'credential is AccountCredential');
            credential.prepareUserLinkRequest(t8);
        }
        else {
            Logger.info(TAG, 'credential is Oauth2Credential');
            credential.prepareUserLinkRequest(t8);
        }
        let self = this;
        let v8 = new List();
        v8.add(this.createTokenInterceptor());
        let w8 = await this.authBackend.post(t8, new UserLinkResponse(), v8);
        let userInfo = w8.getProviderUserInfo();
        if (userInfo) {
            let map = new Map();
            self.userInfoToMap(userInfo, map);
            if (self.anonymous) {
                self.updateAnonymousUserInfo(map);
            }
            self.providerService.t(map);
            if (map["provider"]) {
                let x8 = map["provider"];
                if (AGConnectAuthCredentialProvider.Email_Provider.toString() === x8) {
                    let a9 = map["email"];
                    if (a9) {
                        self.email = a9;
                        self.emailVerified = 1;
                    }
                }
                else if (AGConnectAuthCredentialProvider.Phone_Provider.toString() === x8) {
                    let z8 = map["phone"];
                    if (z8) {
                        self.phone = z8;
                    }
                }
                if (u8 === AGConnectAuthCredentialProvider.Email_Provider ||
                    u8 === AGConnectAuthCredentialProvider.Phone_Provider) {
                    let y8 = credential;
                    if (y8.password !== undefined && y8.password != null && y8.password !== '') {
                        self.passwordSetted = 1;
                    }
                }
            }
        }
        await this.syncToStorage();
        return Promise.resolve(new SignInResultImpl(this));
    }
    async unlink(type) {
        let p8 = this.convertProvider(type);
        if (!p8) {
            return Promise.reject(new AGCAuthError(AGCAuthErrorCode.USER_UNLINK_FAILED));
        }
        let q8 = new UserUnlinkRequest();
        q8.setProvider(p8);
        let r8 = new List();
        r8.add(this.createTokenInterceptor());
        await this.authBackend.post(q8, new UserUnlinkResponse(), r8);
        this.providerService.u(p8.toString());
        if (p8 === AGConnectAuthCredentialProvider.Email_Provider) {
            this.email = '';
            this.emailVerified = 0;
        }
        if (p8 === AGConnectAuthCredentialProvider.Phone_Provider) {
            this.phone = '';
        }
        if (this.providerService.a1(AGConnectAuthCredentialProvider.Email_Provider.toString()) === undefined &&
            this.providerService.a1(AGConnectAuthCredentialProvider.Phone_Provider.toString()) === undefined) {
            this.passwordSetted = 0;
        }
        await this.syncToStorage();
        return Promise.resolve(new SignInResultImpl(this));
    }
    async updateEmail(m8) {
        if (!m8.email || !m8.verifyCode) {
            return Promise.reject(new AGCAuthError(AGCAuthErrorCode.FAIL_TO_UPDATE_EMAIL));
        }
        let n8 = new UpdateEmailRequest();
        n8.setNewEmail(m8.email);
        n8.setNewVerifyCode(m8.verifyCode);
        n8.setLang(m8.lang);
        let o8 = new List();
        o8.add(this.createTokenInterceptor());
        await this.authBackend.put(n8, new UpdateEmailResponse(), o8);
        this.email = m8.email;
        this.providerService.updateEmail(m8.email);
        await this.syncToStorage();
        return Promise.resolve();
    }
    async updatePhone(i8) {
        let j8 = new UpdatePhoneRequest();
        j8.countryCode = i8.countryCode;
        j8.newPhone = i8.phoneNumber;
        j8.newVerifyCode = i8.verifyCode;
        j8.lang = i8.lang;
        let k8 = new List();
        k8.add(this.createTokenInterceptor());
        await this.authBackend.put(j8, new UpdatePhoneResponse(), k8);
        let l8 = PhoneUtil.combinatePhone(i8.countryCode, i8.phoneNumber);
        this.phone = l8;
        this.providerService.updatePhone(l8);
        await this.syncToStorage();
        return Promise.resolve();
    }
    async updatePassword(e8) {
        let f8 = this.convertProvider(e8.providerType);
        let g8 = new UpdatePasswordRequest();
        g8.setProvider(f8);
        g8.setNewPassword(e8.password);
        g8.setNewverifyCode(e8.verifyCode);
        let h8 = new List();
        h8.add(this.createTokenInterceptor());
        await this.authBackend.put(g8, new UpdatePasswordResponse(), h8);
        if (this.passwordSetted === 0) {
            this.passwordSetted = 1;
        }
        return Promise.resolve();
    }
    async dispose() {
        await this.storeManager?.saveUser(null);
        await this.storeManager.deleteUserInfo();
    }
    async syncToStorage() {
        let info = this.toRawData();
        let d8 = JSON.stringify(info);
        await this.storeManager.saveUser(d8);
    }
    createTokenInterceptor() {
        return new AuthTokenInterceptor(this);
    }
    updateAnonymousUserInfo(info) {
        this.anonymous = false;
        this.displayName = info["displayName"]
            ? info["displayName"]
            : '';
        this.photoUrl = info["photoUrl"] ? info["photoUrl"] : '';
        this.email = info["email"] ? info["email"] : '';
        this.phone = info["phone"] ? info["phone"] : '';
        this.providerId = info["provider"] ? info["provider"] : '';
    }
    userInfoToMap(userInfo, map) {
        if (userInfo.getUid()) {
            map["uid"] = userInfo.getUid().toString();
        }
        if (userInfo.getDisplayName()) {
            map["displayName"] = userInfo.getDisplayName().toString();
        }
        if (userInfo.getPhotoUrl()) {
            map["photoUrl"] = userInfo.getPhotoUrl().toString();
        }
        if (userInfo.getEmail()) {
            map["email"] = userInfo.getEmail().toString();
        }
        if (userInfo.getPhone()) {
            map["phone"] = userInfo.getPhone().toString();
        }
        if (userInfo.getProvider()) {
            map["provider"] = userInfo.getProvider().toString();
        }
        if (userInfo.getOpenId()) {
            map["openId"] = userInfo.getOpenId().toString();
        }
    }
    convertProvider(b8) {
        let c8 = {
            'phone': AGConnectAuthCredentialProvider.Phone_Provider,
            'email': AGConnectAuthCredentialProvider.Email_Provider,
            'hwid': AGConnectAuthCredentialProvider.HMS_Provider
        };
        return c8[b8];
    }
}
class q7 {
    constructor() {
        this.accessToken = '';
        this.accessTokenValidPeriod = -1;
        this.refreshToken = '';
        this.b1 = -1;
        this.startTime = -1;
        this.c1 = 5 * 60 * 1000;
    }
    getAccessToken() {
        return this.accessToken;
    }
    getRefreshToken() {
        return this.refreshToken;
    }
    j() {
        if (!this.accessToken) {
            return false;
        }
        let a8 = this.startTime + this.accessTokenValidPeriod * 1000 - this.c1;
        return new Date().getTime() < a8;
    }
    m() {
        return new TokenImpl(this.accessTokenValidPeriod, this.accessToken);
    }
    async o() {
        if (!this.accessToken || !this.refreshToken) {
            return Promise.reject(new AGCAuthError(AGCAuthErrorCode.NULL_TOKEN));
        }
        let y7 = new RefreshTokenRequest(this.refreshToken);
        let z7 = await new AuthBackend().post(y7, new RefreshTokenResponse());
        this.accessToken = z7.accessToken.getToken();
        this.accessTokenValidPeriod = z7.accessToken.getValidPeriod();
        this.startTime = new Date().getTime();
        return Promise.resolve();
    }
}
class r7 {
    constructor() {
        this.providerInfo = [];
    }
    t(info) {
        if (info && this.providerInfo) {
            let providerId = info["provider"];
            if (providerId) {
                this.u(providerId);
            }
            this.providerInfo.push(info);
        }
    }
    d1(x7, key, value) {
        let index = this.a1(x7.toString());
        if (index !== undefined) {
            this.providerInfo[index][key] = value;
        }
    }
    updateEmail(w7) {
        this.d1(AGConnectAuthCredentialProvider.Email_Provider, "email", w7);
    }
    updatePhone(v7) {
        this.d1(AGConnectAuthCredentialProvider.Phone_Provider, "phone", v7);
    }
    u(u7) {
        let index = this.a1(u7);
        if (!this.providerInfo || index === undefined) {
            return;
        }
        this.providerInfo.splice(index, 1);
    }
    a1(s7) {
        let index = undefined;
        if (s7 && this.providerInfo) {
            for (let t7 = 0; t7 < this.providerInfo.length; t7++) {
                let info = this.providerInfo[t7];
                if (info && s7 === info["provider"]) {
                    index = t7;
                    break;
                }
            }
        }
        return index;
    }
}
‘rEïßversion®mappings•namesßsourcesÆsourcesContent‹ëî    ëî   ëî   ëî   ëî   ëî   ëî   ëî   ëî   ëî  	 ëî  
 ëî   ëî   ëî   ëî   ëî   ëî   ëî   ëî   ëî   ëî   ëî   ëî   ëî   ëî   ëî   ëî   ëî   ëî   ëî   ëî   ëî   ëî    ëî  ! ëî  " ëî  # ëî  $ ëî  % ëî  & ëî  ' ëî  ( ëî  ) ëî  * ëî  + ëî  , ëî  - ëî  . ëî  / ëî  0 ëî  1 ëî  2 ëî  3 ëî  4 ëî  5 ëî  6 ëî  7 ëî  8 ëî  9 ëî  : ëî  ; ëî  < ëî  = ëî  > ëî  ? ëî  Ã@ ëî  ÃA ëî  ÃB ëî  ÃC ëî  ÃD ëî  ÃE ëî  ÃF ëî  ÃG ëî  ÃH ëî  ÃI ëî  ÃJ ëî  ÃK ëî  ÃL ëî  ÃM ëî  ÃN ëî  ÃO ëî  ÃP ëî  ÃQ ëî  ÃR ëî  ÃS ëî  ÃT ëî  ÃU ëî  ÃV ëî  ÃW ëî  ÃX ëî  ÃY ëî  ÃZ ëî  Ã[ ëî  Ã\ ëî  Ã] ëî  Ã^ ëî  Ã_ ëî  Ã` ëî  Ãa ëî  Ãb ëî  Ãc ëî  Ãd ëî  Ãe ëî  Ãf ëî  Ãg ëî  Ãh ëî  Ãi ëî  Ãj ëî  Ãk ëî  Ãl ëî  Ãm ëî  Ãn ëî  Ão ëî  Ãp ëî  Ãq ëî  Ãr ëî  Ãs ëî  Ãt ëî  Ãu ëî  Ãv ëî  Ãw ëî  Ãx ëî  Ãy ëî  Ãz ëî  Ã{ ëî  Ã| ëî  Ã} ëî  Ã~ ëî  Ã ëî  ÃÄ ëî  ÃÅ ëî  ÃÇ ëî  ÃÉ ëî  ÃÑ ëî  ÃÖ ëî  ÃÜ ëî  Ãá ëî  Ãà ëî  Ãâ ëî  Ãä ëî  Ãã ëî  Ãå ëî  Ãç ëî  Ãé ëî  Ãè ëî  Ãê ëî  Ãë ëî  Ãí ëî  Ãì ëî  Ãî ëî  Ãï ëî  Ãñ ëî  Ãó ëî  Ãò ëî  Ãô ëî  Ãö ëî  Ãõ ëî  Ãú ëî  Ãù ëî  Ãû ëî  Ãü ëî  Ã† ëî  Ã° ëî  Ã¢ ëî  Ã£ ëî  Ã§ ëî  Ã• ëî  Ã¶ ëî  Ãß ëî  Ã® ëî  Ã© ëî  Ã™ ëî  Ã´ ëî  Ã¨ ëî  Ã≠ ëî  ÃÆ ëî  ÃØ ëî  Ã∞ ëî  Ã± ëî  Ã≤ ëî  Ã≥ ëî  Ã¥ ëî  Ãµ ëî  Ã∂ ëî  Ã∑ ëî  Ã∏ ëî  Ãπ ëî  Ã∫ ëî  Ãª ëî  Ãº ëî  ÃΩ ëî  Ãæ ëî  Ãø ëî  Ã¿ ëî  Ã¡ ëî  Ã¬ ëî  Ã√ ëî  Ãƒ ëî  Ã≈ ëî  Ã∆ ëî  Ã« ëî  Ã» ëî  Ã… ëî  Ã  ëî  ÃÀ ëî  ÃÃ ëî  ÃÕ ëî  ÃŒ ëî  Ãœ ëî  Ã– ëî  Ã— ëî  Ã“ ëî  Ã” ëî  Ã‘ ëî  Ã’ ëî  Ã÷ ëî  Ã◊ ëî  Ãÿ ëî  ÃŸ ëî  Ã⁄ ëî  Ã€ ëî  Ã‹ ëî  Ã› ëî  Ãﬁ ëî  Ãﬂ ëî  Ã‡ ëî  Ã· ëî  Ã‚ ëî  Ã„ ëî  Ã‰ ëî  ÃÂ ëî  ÃÊ ëî  ÃÁ ëî  ÃË ëî  ÃÈ ëî  ÃÍ ëî  ÃÎ ëî  ÃÏ ëî  ÃÌ ëî  ÃÓ ëî  ÃÔ ëî  Ã ëî  ÃÒ ëî  ÃÚ ëî  ÃÛ ëî  ÃÙ ëî  Ãı ëî  Ãˆ ëî  Ã˜ ëî  Ã¯ ëî  Ã˘ ëî  Ã˙ ëî  Ã˚ ëî  Ã¸ ëî  Ã˝ ëî  Ã˛ ëî  Ãˇ ëî  Õ  ëî  Õ ëî  Õ ëî  Õ ëî  Õ ëî  Õ ëî  Õ ëî  Õ ëî  Õ ëî  Õ	 ëî  Õ
 ëî  Õ ëî  Õ ëî  Õ ëî  Õ ëî  Õ ëî  Õ ëî  Õ ëî  Õ ëî  Õ ëî  Õ ëî  Õ ëî  Õ ëî  Õ ëî  Õ ëî  Õ ëî  Õ ëî  Õ ëî  Õ ëî  Õ ëî  Õ ëî  Õ ëî  Õ  ëî  Õ! ëî  Õ" ëî  Õ# ëî  Õ$ ëî  Õ% ëî  Õ& ëî  Õ' ëî  Õ( ëî  Õ) ëî  Õ* ëî  Õ+ ëî  Õ, ëî  Õ- ëî  Õ. ëî  Õ/ ëî  Õ0 ëî  Õ1 ëî  Õ2 ëî  Õ3 ëî  Õ4 ëî  Õ5 ëî  Õ6 ëî  Õ7 ëî  Õ8 ëî  Õ9 ëî  Õ: ëî  Õ; ëî  Õ< ëî  Õ= ëî  Õ> ëî  Õ? ëî  Õ@ ëî  ÕA ëî  ÕB ëî  ÕC ëî  ÕD ëî  ÕE ëî  ÕF ëî  ÕG ëî  ÕH ëî  ÕI ëî  ÕJ ëî  ÕK ëî  ÕL ëî  ÕM ëî  ÕN ëî  ÕO ëî  ÕP ëî  ÕQ ëî  ÕR ëî  ÕS ëî  ÕT ëî  ÕU ëî  ÕV ëî  ÕW ëî  ÕX ëî  ÕY ëî  ÕZ ëî  Õ[ ëî  Õ\ ëî  Õ] ëî  Õ^ ëî  Õ_ ëî  Õ` ëî  Õa ëî  Õb ëî  Õc ëî  Õd ëî  Õe ëî  Õf ëî  Õg ëî  Õh ëî  Õi ëî  Õj ëî  Õk ëî  Õl ëî  Õm ëî  Õn ëî  Õo ëî  Õp ëî  Õq ëî  Õr ëî  Õs ëî  Õt ëî  Õu ëî  Õv ëî  Õw ëî  Õx ëî  Õy ëî  Õz ëî  Õ{ ëî  Õ| ëî  Õ} ëî  Õ~ ëî  Õ ëî  ÕÄ ëî  ÕÅ ëî  ÕÇ ëî  ÕÉ ëî  ÕÑ ëî  ÕÖ ëî  ÕÜ ëî  Õá ëî  Õà ëî  Õâ ëî  Õä ëî  Õã ëî  Õå ëî  Õç ëî  Õé ëî  Õè ëî  Õê ëî  Õë ëî  Õí ëî  Õì ëî  Õî ëî  Õï ëî  Õñ ëî  Õó ëî  Õò ëî  Õô ëî  Õö ëî  Õõ ëî  Õú ëî  Õù ëî  Õû ëî  Õü ëî  Õ† ëî  Õ° ëî  Õ¢ ëî  Õ£ ëî  Õ§ ëî  Õ• ëî  Õ¶ ëî  Õß ëî  Õ® ëî  Õ© ëî  Õ™ ëî  Õ´ ëî  Õ¨ ëî  Õ≠ ëî  ÕÆ ëî  ÕØ ëî  Õ∞ ëî  Õ± ëî  Õ≤ ëî  Õ≥ ëî  Õ¥ ëî  Õµ ëî  Õ∂ ëî  Õ∑ ëî  Õ∏ ëî  Õπ ëî  Õ∫ ëî  Õª ëî  Õº ëî  ÕΩ ëî  Õæ ëî  Õø ëî  Õ¿ ëî  Õ¡ ëî  Õ¬ ëî  Õ√ ëî  Õƒ ëî  Õ≈ ëî  Õ∆ ëî  Õ« ëî  Õ» ëî  Õ… ëî  Õ  ëî  ÕÀ ëî  ÕÃ ëî  ÕÕ ëî  ÕŒ ëî  Õœ ëî  Õ– ëî  Õ— ëî  Õ“ ëî  Õ” ëî  Õ‘ ëî  Õ’ ëî  Õ÷ ëî  Õ◊ ëî  Õÿ ëî  ÕŸ ëî  Õ⁄ ëî  Õ€ ëî  Õ‹ ëî  Õ› ëî  Õﬁ ëî  Õﬂ ëî  Õ‡ ëî  Õ· ëî  Õ‚ ëî  Õ„ ëî  Õ‰ ëî  ÕÂ ëî  ÕÊ ëî  ÕÁ ëî  ÕË ëî  ÕÈ ëî  ÕÍ ëî  ÕÎ ëî  ÕÏ ëî  ÕÌ ëî  ÕÓ êêëŸö/Users/wangzhe/DevEcoStudioProjects/LittleGallery/Application/oh_modules/.ohpm/@hw-agconnect+auth@1.0.2/oh_modules/@hw-agconnect/auth/src/main/ets/g/o4.jsë⁄HÊimport { UserExtraRequest } from "../e/i/x3";
import { UserExtraResponse } from "../e/m/h4";
import { PhoneUtil } from "../k/l";
import { UpdatePasswordResponse } from "../e/m/e4";
import { UpdatePasswordRequest } from "../e/i/u3";
import { UpdatePhoneRequest } from "../e/i/v3";
import { UpdatePhoneResponse } from "../e/m/f4";
import { UpdateEmailRequest } from "../e/i/t3";
import { UpdateEmailResponse } from "../e/m/d4";
import { SignInResultImpl } from "../o/t";
import { UserLinkRequest } from "../e/i/y3";
import { ReauthenticateResponse } from "../e/m/a4";
import { ReauthenticateRequest } from "../e/i/p3";
import { UpdateProfileRequest } from "../e/i/w3";
import { UpdateProfileResponse } from "../e/m/g4";
import { UserLinkResponse } from "../e/m/i4";
import { UserUnlinkRequest } from "../e/i/z3";
import { UserUnlinkResponse } from "../e/m/j4";
import { PhoneAuthProvider } from "../x/y";
import { EmailAuthProvider } from "../x/z";
import { AuthBackend } from "../e/f";
import { TokenImpl } from "../o/x2";
import { RefreshTokenResponse } from "../e/m/b4";
import { RefreshTokenRequest } from "../e/i/q3";
import { AGConnectAuthCredentialProvider } from "../r";
import { AuthTokenInterceptor } from "../k/n4";
import List from '@ohos.util.List';
import { AGCAuthError } from "../c/d";
import { AGCAuthErrorCode } from "../c/l1";
import { Logger } from "../e1/f1/g1";
import { HwIdAuthProvider } from "../s1/x/t1";
import { HwIdAuthManager } from "../s1/u1";
const TAG = 'AGConnectDefaultUser';
export class AuthDefaultUser {
    constructor() {
        this.anonymous = false;
        this.uid = '';
        this.displayName = '';
        this.photoUrl = '';
        this.email = '';
        this.phone = '';
        this.providerId = '';
        this.emailVerified = 0;
        this.passwordSetted = 0;
        this.providerService = new r7();
        this.tokenService = new q7();
    }
    static fromRawData(info) {
        let user = new AuthDefaultUser();
        user.anonymous = info.anonymous;
        user.uid = info.uid;
        user.displayName = info.displayName;
        user.photoUrl = info.photoUrl;
        user.email = info.email;
        user.phone = info.phone;
        user.providerId = info.providerId;
        user.emailVerified = info.emailVerified;
        user.passwordSetted = info.passwordSetted;
        user.providerService.providerInfo = info.providerInfo;
        user.tokenService.accessToken = info.accessToken;
        user.tokenService.accessTokenValidPeriod = info.accessTokenValidPeriod;
        user.tokenService.refreshToken = info.refreshToken;
        user.tokenService.startTime = info.startTime;
        return user;
    }
    setStoreManager(v9) {
        this.storeManager = v9;
    }
    setAuthBackend(u9) {
        this.authBackend = u9;
    }
    toRawData() {
        let info = {
            anonymous: this.anonymous,
            uid: this.uid,
            displayName: this.displayName,
            photoUrl: this.photoUrl,
            email: this.email,
            phone: this.phone,
            providerId: this.providerId,
            emailVerified: this.emailVerified,
            passwordSetted: this.passwordSetted,
            providerInfo: this.providerService.providerInfo,
            accessToken: this.tokenService.accessToken,
            accessTokenValidPeriod: this.tokenService.accessTokenValidPeriod,
            refreshToken: this.tokenService.refreshToken,
            startTime: this.tokenService.startTime
        };
        return info;
    }
    getUid() {
        return this.uid;
    }
    getEmail() {
        return this.email;
    }
    getPhone() {
        return this.phone;
    }
    getDisplayName() {
        return this.displayName;
    }
    getPhotoUrl() {
        return this.photoUrl;
    }
    getProviderId() {
        return this.providerId;
    }
    isAnonymous() {
        return this.anonymous;
    }
    getProviderInfo() {
        let p9 = [];
        for (let q9 = 0; q9 < this.providerService.providerInfo?.length; q9++) {
            let r9 = new Map();
            let s9 = Object.keys(this.providerService.providerInfo[q9]);
            for (let t9 = 0; s9 && t9 < s9.length; t9++) {
                r9.set(s9[t9], this.providerService.providerInfo[q9][s9[t9]]);
            }
            p9.push(r9);
        }
        return p9;
    }
    async getToken(o9) {
        if (!o9 && this.tokenService.j()) {
            return Promise.resolve(this.tokenService.m());
        }
        await this.tokenService.o();
        await this.syncToStorage();
        return Promise.resolve(this.tokenService.m());
    }
    async getUserExtra() {
        let l9 = new UserExtraRequest();
        let m9 = new List();
        m9.add(this.createTokenInterceptor());
        let n9 = await this.authBackend.get(l9, new UserExtraResponse(), m9);
        this.displayName = n9.displayName;
        this.photoUrl = n9.photoUrl;
        this.emailVerified = n9.emailVerified;
        this.passwordSetted = n9.passwordSetted;
        this.email = n9.email;
        this.phone = n9.phone;
        await this.syncToStorage();
        return Promise.resolve(n9.userExtra);
    }
    getAccessToken() {
        return this.tokenService.getAccessToken();
    }
    getRefreshToken() {
        return this.tokenService.getRefreshToken();
    }
    getEmailVerified() {
        return this.emailVerified === 1;
    }
    getPasswordSetted() {
        return this.passwordSetted === 1;
    }
    async updateProfile(userProfile) {
        if (!userProfile.displayName || !userProfile.photoUrl) {
            return Promise.reject(new AGCAuthError(AGCAuthErrorCode.FAIL_TO_UPDATE_PROFILE));
        }
        let j9 = new UpdateProfileRequest();
        j9.setDisplayName(userProfile.displayName);
        j9.setPhotoUrl(userProfile.photoUrl);
        let k9 = new List();
        k9.add(this.createTokenInterceptor());
        await this.authBackend.put(j9, new UpdateProfileResponse(), k9);
        this.displayName = userProfile.displayName;
        this.photoUrl = userProfile.photoUrl;
        await this.syncToStorage();
        return Promise.resolve();
    }
    async userReauthenticate(param) {
        let d9 = { 'autoCreateUser': false, 'credentialInfo': param.credentialInfo };
        let credentialInfo = d9.credentialInfo;
        if (!credentialInfo) {
            return Promise.reject(new AGCAuthError(AGCAuthErrorCode.CREDENTIAL_INVALID));
        }
        let e9 = {
            'phone': () => {
                let req = new ReauthenticateRequest();
                let i9 = credentialInfo;
                let credential = PhoneAuthProvider.credentialWithPasswordAndVerifyCode(i9.countryCode, i9.phoneNumber, i9.password, i9.verifyCode);
                credential.prepareUserReauthRequest(req);
                return req;
            },
            'email': () => {
                let req = new ReauthenticateRequest();
                let h9 = credentialInfo;
                let credential = EmailAuthProvider.credentialWithPasswordAndVerifyCode(h9.email, h9.password, h9.verifyCode);
                credential.prepareUserReauthRequest(req);
                return req;
            }
        };
        let f9 = e9[d9.credentialInfo.kind]();
        f9.setAutoCreateUser(d9.autoCreateUser);
        let g9 = new List();
        g9.add(this.createTokenInterceptor());
        let response = await this.authBackend.post(f9, new ReauthenticateResponse(), g9);
        this.reConfigUserFrom(response);
        await this.syncToStorage();
        return Promise.resolve(new SignInResultImpl(this));
    }
    reConfigUserFrom(response) {
        this.anonymous = false;
        this.uid = response.getUserInfo().getUid();
        this.displayName = response.getUserInfo().getDisplayName();
        this.photoUrl = response.getUserInfo().getPhotoUrl();
        this.email = response.getUserInfo().getEmail();
        this.emailVerified = response.getUserInfo().getEmailVerified();
        this.passwordSetted = response.getUserInfo().getPasswordSetted();
        this.phone = response.getUserInfo().getPhone();
        this.providerId = response.getUserInfo().getProvider().toString();
        this.tokenService.accessToken = response.getAccessToken().getToken();
        this.tokenService.accessTokenValidPeriod = response.getAccessToken().getValidPeriod();
        this.tokenService.refreshToken = response.getRefreshToken().getToken();
        this.tokenService.startTime = new Date().getTime();
        this.providerService.providerInfo = response.getProviders();
    }
    async link(credentialInfo) {
        let s8 = {
            'phone': () => {
                let c9 = credentialInfo;
                return PhoneAuthProvider.credentialWithPasswordAndVerifyCode(c9.countryCode, c9.phoneNumber, c9.password, c9.verifyCode);
            },
            'email': () => {
                let b9 = credentialInfo;
                return EmailAuthProvider.credentialWithPasswordAndVerifyCode(b9.email, b9.password, b9.verifyCode);
            },
            'hwid': async () => {
                let authCode = await HwIdAuthManager.getAuthCode(false);
                return HwIdAuthProvider.credentialWithToken(authCode);
            }
        };
        let credential = await s8[credentialInfo.kind]();
        if (!credential) {
            return Promise.reject(new AGCAuthError(AGCAuthErrorCode.USER_LINK_FAILED));
        }
        let t8 = new UserLinkRequest();
        let u8 = credential.getProvider();
        if (u8 === AGConnectAuthCredentialProvider.Email_Provider ||
            u8 === AGConnectAuthCredentialProvider.Phone_Provider) {
            Logger.info(TAG, 'credential is AccountCredential');
            credential.prepareUserLinkRequest(t8);
        }
        else {
            Logger.info(TAG, 'credential is Oauth2Credential');
            credential.prepareUserLinkRequest(t8);
        }
        let self = this;
        let v8 = new List();
        v8.add(this.createTokenInterceptor());
        let w8 = await this.authBackend.post(t8, new UserLinkResponse(), v8);
        let userInfo = w8.getProviderUserInfo();
        if (userInfo) {
            let map = new Map();
            self.userInfoToMap(userInfo, map);
            if (self.anonymous) {
                self.updateAnonymousUserInfo(map);
            }
            self.providerService.t(map);
            if (map["provider"]) {
                let x8 = map["provider"];
                if (AGConnectAuthCredentialProvider.Email_Provider.toString() === x8) {
                    let a9 = map["email"];
                    if (a9) {
                        self.email = a9;
                        self.emailVerified = 1;
                    }
                }
                else if (AGConnectAuthCredentialProvider.Phone_Provider.toString() === x8) {
                    let z8 = map["phone"];
                    if (z8) {
                        self.phone = z8;
                    }
                }
                if (u8 === AGConnectAuthCredentialProvider.Email_Provider ||
                    u8 === AGConnectAuthCredentialProvider.Phone_Provider) {
                    let y8 = credential;
                    if (y8.password !== undefined && y8.password != null && y8.password !== '') {
                        self.passwordSetted = 1;
                    }
                }
            }
        }
        await this.syncToStorage();
        return Promise.resolve(new SignInResultImpl(this));
    }
    async unlink(type) {
        let p8 = this.convertProvider(type);
        if (!p8) {
            return Promise.reject(new AGCAuthError(AGCAuthErrorCode.USER_UNLINK_FAILED));
        }
        let q8 = new UserUnlinkRequest();
        q8.setProvider(p8);
        let r8 = new List();
        r8.add(this.createTokenInterceptor());
        await this.authBackend.post(q8, new UserUnlinkResponse(), r8);
        this.providerService.u(p8.toString());
        if (p8 === AGConnectAuthCredentialProvider.Email_Provider) {
            this.email = '';
            this.emailVerified = 0;
        }
        if (p8 === AGConnectAuthCredentialProvider.Phone_Provider) {
            this.phone = '';
        }
        if (this.providerService.a1(AGConnectAuthCredentialProvider.Email_Provider.toString()) === undefined &&
            this.providerService.a1(AGConnectAuthCredentialProvider.Phone_Provider.toString()) === undefined) {
            this.passwordSetted = 0;
        }
        await this.syncToStorage();
        return Promise.resolve(new SignInResultImpl(this));
    }
    async updateEmail(m8) {
        if (!m8.email || !m8.verifyCode) {
            return Promise.reject(new AGCAuthError(AGCAuthErrorCode.FAIL_TO_UPDATE_EMAIL));
        }
        let n8 = new UpdateEmailRequest();
        n8.setNewEmail(m8.email);
        n8.setNewVerifyCode(m8.verifyCode);
        n8.setLang(m8.lang);
        let o8 = new List();
        o8.add(this.createTokenInterceptor());
        await this.authBackend.put(n8, new UpdateEmailResponse(), o8);
        this.email = m8.email;
        this.providerService.updateEmail(m8.email);
        await this.syncToStorage();
        return Promise.resolve();
    }
    async updatePhone(i8) {
        let j8 = new UpdatePhoneRequest();
        j8.countryCode = i8.countryCode;
        j8.newPhone = i8.phoneNumber;
        j8.newVerifyCode = i8.verifyCode;
        j8.lang = i8.lang;
        let k8 = new List();
        k8.add(this.createTokenInterceptor());
        await this.authBackend.put(j8, new UpdatePhoneResponse(), k8);
        let l8 = PhoneUtil.combinatePhone(i8.countryCode, i8.phoneNumber);
        this.phone = l8;
        this.providerService.updatePhone(l8);
        await this.syncToStorage();
        return Promise.resolve();
    }
    async updatePassword(e8) {
        let f8 = this.convertProvider(e8.providerType);
        let g8 = new UpdatePasswordRequest();
        g8.setProvider(f8);
        g8.setNewPassword(e8.password);
        g8.setNewverifyCode(e8.verifyCode);
        let h8 = new List();
        h8.add(this.createTokenInterceptor());
        await this.authBackend.put(g8, new UpdatePasswordResponse(), h8);
        if (this.passwordSetted === 0) {
            this.passwordSetted = 1;
        }
        return Promise.resolve();
    }
    async dispose() {
        await this.storeManager?.saveUser(null);
        await this.storeManager.deleteUserInfo();
    }
    async syncToStorage() {
        let info = this.toRawData();
        let d8 = JSON.stringify(info);
        await this.storeManager.saveUser(d8);
    }
    createTokenInterceptor() {
        return new AuthTokenInterceptor(this);
    }
    updateAnonymousUserInfo(info) {
        this.anonymous = false;
        this.displayName = info["displayName"]
            ? info["displayName"]
            : '';
        this.photoUrl = info["photoUrl"] ? info["photoUrl"] : '';
        this.email = info["email"] ? info["email"] : '';
        this.phone = info["phone"] ? info["phone"] : '';
        this.providerId = info["provider"] ? info["provider"] : '';
    }
    userInfoToMap(userInfo, map) {
        if (userInfo.getUid()) {
            map["uid"] = userInfo.getUid().toString();
        }
        if (userInfo.getDisplayName()) {
            map["displayName"] = userInfo.getDisplayName().toString();
        }
        if (userInfo.getPhotoUrl()) {
            map["photoUrl"] = userInfo.getPhotoUrl().toString();
        }
        if (userInfo.getEmail()) {
            map["email"] = userInfo.getEmail().toString();
        }
        if (userInfo.getPhone()) {
            map["phone"] = userInfo.getPhone().toString();
        }
        if (userInfo.getProvider()) {
            map["provider"] = userInfo.getProvider().toString();
        }
        if (userInfo.getOpenId()) {
            map["openId"] = userInfo.getOpenId().toString();
        }
    }
    convertProvider(b8) {
        let c8 = {
            'phone': AGConnectAuthCredentialProvider.Phone_Provider,
            'email': AGConnectAuthCredentialProvider.Email_Provider,
            'hwid': AGConnectAuthCredentialProvider.HMS_Provider
        };
        return c8[b8];
    }
}
class q7 {
    constructor() {
        this.accessToken = '';
        this.accessTokenValidPeriod = -1;
        this.refreshToken = '';
        this.b1 = -1;
        this.startTime = -1;
        this.c1 = 5 * 60 * 1000;
    }
    getAccessToken() {
        return this.accessToken;
    }
    getRefreshToken() {
        return this.refreshToken;
    }
    j() {
        if (!this.accessToken) {
            return false;
        }
        let a8 = this.startTime + this.accessTokenValidPeriod * 1000 - this.c1;
        return new Date().getTime() < a8;
    }
    m() {
        return new TokenImpl(this.accessTokenValidPeriod, this.accessToken);
    }
    async o() {
        if (!this.accessToken || !this.refreshToken) {
            return Promise.reject(new AGCAuthError(AGCAuthErrorCode.NULL_TOKEN));
        }
        let y7 = new RefreshTokenRequest(this.refreshToken);
        let z7 = await new AuthBackend().post(y7, new RefreshTokenResponse());
        this.accessToken = z7.accessToken.getToken();
        this.accessTokenValidPeriod = z7.accessToken.getValidPeriod();
        this.startTime = new Date().getTime();
        return Promise.resolve();
    }
}
class r7 {
    constructor() {
        this.providerInfo = [];
    }
    t(info) {
        if (info && this.providerInfo) {
            let providerId = info["provider"];
            if (providerId) {
                this.u(providerId);
            }
            this.providerInfo.push(info);
        }
    }
    d1(x7, key, value) {
        let index = this.a1(x7.toString());
        if (index !== undefined) {
            this.providerInfo[index][key] = value;
        }
    }
    updateEmail(w7) {
        this.d1(AGConnectAuthCredentialProvider.Email_Provider, "email", w7);
    }
    updatePhone(v7) {
        this.d1(AGConnectAuthCredentialProvider.Phone_Provider, "phone", v7);
    }
    u(u7) {
        let index = this.a1(u7);
        if (!this.providerInfo || index === undefined) {
            return;
        }
        this.providerInfo.splice(index, 1);
    }
    a1(s7) {
        let index = undefined;
        if (s7 && this.providerInfo) {
            for (let t7 = 0; t7 < this.providerInfo.length; t7++) {
                let info = this.providerInfo[t7];
                if (info && s7 === info["provider"]) {
                    index = t7;
                    break;
                }
            }
        }
        return index;
    }
}
‘rF‹  Ø@ohos.util.List¶../k/l¶../o/t¶../x/y¶../x/z¶../e/f§../r¶../c/dß../c/l1´../e1/f1/g1™../s1/x/t1®../s1/u1©../e/m/e4©../e/i/x3©../e/m/h4©../e/i/u3©../e/i/v3©../e/i/t3©../e/m/f4©../e/m/d4©../e/i/y3©../e/m/a4©../e/i/p3©../e/i/z3©../e/m/i4©../e/i/w3©../e/m/g4©../e/m/b4ß../o/x2©../e/i/q3©../e/m/j4ß../k/n4‘rGó™assertions®external¢id§meta±moduleSideEffects™resolvedByµsyntheticNamedExportsA√Ÿl hvigor_ignore__Applications_DevEco-Studio.app_Contents_sdk_default_openharmony_ets_api_@ohos.util.List.d.tsA√™oh-resolve¬GA¬Ÿô/Users/wangzhe/DevEcoStudioProjects/LittleGallery/Application/oh_modules/.ohpm/@hw-agconnect+auth@1.0.2/oh_modules/@hw-agconnect/auth/src/main/ets/k/l.jsA√™oh-resolve¬GA¬Ÿô/Users/wangzhe/DevEcoStudioProjects/LittleGallery/Application/oh_modules/.ohpm/@hw-agconnect+auth@1.0.2/oh_modules/@hw-agconnect/auth/src/main/ets/o/t.jsA√™oh-resolve¬GA¬Ÿô/Users/wangzhe/DevEcoStudioProjects/LittleGallery/Application/oh_modules/.ohpm/@hw-agconnect+auth@1.0.2/oh_modules/@hw-agconnect/auth/src/main/ets/x/y.jsA√™oh-resolve¬GA¬Ÿô/Users/wangzhe/DevEcoStudioProjects/LittleGallery/Application/oh_modules/.ohpm/@hw-agconnect+auth@1.0.2/oh_modules/@hw-agconnect/auth/src/main/ets/x/z.jsA√™oh-resolve¬GA¬Ÿô/Users/wangzhe/DevEcoStudioProjects/LittleGallery/Application/oh_modules/.ohpm/@hw-agconnect+auth@1.0.2/oh_modules/@hw-agconnect/auth/src/main/ets/e/f.jsA√™oh-resolve¬GA¬Ÿó/Users/wangzhe/DevEcoStudioProjects/LittleGallery/Application/oh_modules/.ohpm/@hw-agconnect+auth@1.0.2/oh_modules/@hw-agconnect/auth/src/main/ets/r.jsA√™oh-resolve¬GA¬Ÿô/Users/wangzhe/DevEcoStudioProjects/LittleGallery/Application/oh_modules/.ohpm/@hw-agconnect+auth@1.0.2/oh_modules/@hw-agconnect/auth/src/main/ets/c/d.jsA√™oh-resolve¬GA¬Ÿö/Users/wangzhe/DevEcoStudioProjects/LittleGallery/Application/oh_modules/.ohpm/@hw-agconnect+auth@1.0.2/oh_modules/@hw-agconnect/auth/src/main/ets/c/l1.jsA√™oh-resolve¬GA¬Ÿû/Users/wangzhe/DevEcoStudioProjects/LittleGallery/Application/oh_modules/.ohpm/@hw-agconnect+auth@1.0.2/oh_modules/@hw-agconnect/auth/src/main/ets/e1/f1/g1.jsA√™oh-resolve¬GA¬Ÿù/Users/wangzhe/DevEcoStudioProjects/LittleGallery/Application/oh_modules/.ohpm/@hw-agconnect+auth@1.0.2/oh_modules/@hw-agconnect/auth/src/main/ets/s1/x/t1.jsA√™oh-resolve¬GA¬Ÿõ/Users/wangzhe/DevEcoStudioProjects/LittleGallery/Application/oh_modules/.ohpm/@hw-agconnect+auth@1.0.2/oh_modules/@hw-agconnect/auth/src/main/ets/s1/u1.jsA√™oh-resolve¬GA¬Ÿú/Users/wangzhe/DevEcoStudioProjects/LittleGallery/Application/oh_modules/.ohpm/@hw-agconnect+auth@1.0.2/oh_modules/@hw-agconnect/auth/src/main/ets/e/m/e4.jsA√™oh-resolve¬GA¬Ÿú/Users/wangzhe/DevEcoStudioProjects/LittleGallery/Application/oh_modules/.ohpm/@hw-agconnect+auth@1.0.2/oh_modules/@hw-agconnect/auth/src/main/ets/e/i/x3.jsA√™oh-resolve¬GA¬Ÿú/Users/wangzhe/DevEcoStudioProjects/LittleGallery/Application/oh_modules/.ohpm/@hw-agconnect+auth@1.0.2/oh_modules/@hw-agconnect/auth/src/main/ets/e/m/h4.jsA√™oh-resolve¬GA¬Ÿú/Users/wangzhe/DevEcoStudioProjects/LittleGallery/Application/oh_modules/.ohpm/@hw-agconnect+auth@1.0.2/oh_modules/@hw-agconnect/auth/src/main/ets/e/i/u3.jsA√™oh-resolve¬GA¬Ÿú/Users/wangzhe/DevEcoStudioProjects/LittleGallery/Application/oh_modules/.ohpm/@hw-agconnect+auth@1.0.2/oh_modules/@hw-agconnect/auth/src/main/ets/e/i/v3.jsA√™oh-resolve¬GA¬Ÿú/Users/wangzhe/DevEcoStudioProjects/LittleGallery/Application/oh_modules/.ohpm/@hw-agconnect+auth@1.0.2/oh_modules/@hw-agconnect/auth/src/main/ets/e/i/t3.jsA√™oh-resolve¬GA¬Ÿú/Users/wangzhe/DevEcoStudioProjects/LittleGallery/Application/oh_modules/.ohpm/@hw-agconnect+auth@1.0.2/oh_modules/@hw-agconnect/auth/src/main/ets/e/m/f4.jsA√™oh-resolve¬GA¬Ÿú/Users/wangzhe/DevEcoStudioProjects/LittleGallery/Application/oh_modules/.ohpm/@hw-agconnect+auth@1.0.2/oh_modules/@hw-agconnect/auth/src/main/ets/e/m/d4.jsA√™oh-resolve¬GA¬Ÿú/Users/wangzhe/DevEcoStudioProjects/LittleGallery/Application/oh_modules/.ohpm/@hw-agconnect+auth@1.0.2/oh_modules/@hw-agconnect/auth/src/main/ets/e/i/y3.jsA√™oh-resolve¬GA¬Ÿú/Users/wangzhe/DevEcoStudioProjects/LittleGallery/Application/oh_modules/.ohpm/@hw-agconnect+auth@1.0.2/oh_modules/@hw-agconnect/auth/src/main/ets/e/m/a4.jsA√™oh-resolve¬GA¬Ÿú/Users/wangzhe/DevEcoStudioProjects/LittleGallery/Application/oh_modules/.ohpm/@hw-agconnect+auth@1.0.2/oh_modules/@hw-agconnect/auth/src/main/ets/e/i/p3.jsA√™oh-resolve¬GA¬Ÿú/Users/wangzhe/DevEcoStudioProjects/LittleGallery/Application/oh_modules/.ohpm/@hw-agconnect+auth@1.0.2/oh_modules/@hw-agconnect/auth/src/main/ets/e/i/z3.jsA√™oh-resolve¬GA¬Ÿú/Users/wangzhe/DevEcoStudioProjects/LittleGallery/Application/oh_modules/.ohpm/@hw-agconnect+auth@1.0.2/oh_modules/@hw-agconnect/auth/src/main/ets/e/m/i4.jsA√™oh-resolve¬GA¬Ÿú/Users/wangzhe/DevEcoStudioProjects/LittleGallery/Application/oh_modules/.ohpm/@hw-agconnect+auth@1.0.2/oh_modules/@hw-agconnect/auth/src/main/ets/e/i/w3.jsA√™oh-resolve¬GA¬Ÿú/Users/wangzhe/DevEcoStudioProjects/LittleGallery/Application/oh_modules/.ohpm/@hw-agconnect+auth@1.0.2/oh_modules/@hw-agconnect/auth/src/main/ets/e/m/g4.jsA√™oh-resolve¬GA¬Ÿú/Users/wangzhe/DevEcoStudioProjects/LittleGallery/Application/oh_modules/.ohpm/@hw-agconnect+auth@1.0.2/oh_modules/@hw-agconnect/auth/src/main/ets/e/m/b4.jsA√™oh-resolve¬GA¬Ÿö/Users/wangzhe/DevEcoStudioProjects/LittleGallery/Application/oh_modules/.ohpm/@hw-agconnect+auth@1.0.2/oh_modules/@hw-agconnect/auth/src/main/ets/o/x2.jsA√™oh-resolve¬GA¬Ÿú/Users/wangzhe/DevEcoStudioProjects/LittleGallery/Application/oh_modules/.ohpm/@hw-agconnect+auth@1.0.2/oh_modules/@hw-agconnect/auth/src/main/ets/e/i/q3.jsA√™oh-resolve¬GA¬Ÿú/Users/wangzhe/DevEcoStudioProjects/LittleGallery/Application/oh_modules/.ohpm/@hw-agconnect+auth@1.0.2/oh_modules/@hw-agconnect/auth/src/main/ets/e/m/j4.jsA√™oh-resolve¬GA¬Ÿö/Users/wangzhe/DevEcoStudioProjects/LittleGallery/Application/oh_modules/.ohpm/@hw-agconnect+auth@1.0.2/oh_modules/@hw-agconnect/auth/src/main/ets/k/n4.jsA√™oh-resolve¬ê¬ê‘  ‘rHî≤dynamicImportCacheπexportAllDeclarationCacheªexportNamedDeclarationCache´importCacheêêë‘rIñ§type•start£end´declaration™specifiers¶source∂ExportNamedDeclarationÕÂÕ?g‘rJñ§type•start£end¢id™superClass§body∞ClassDeclarationÕÏÕ?g‘rKî§type•start£end§name™IdentifierÕÚÕØAuthDefaultUser¿‘rLî§type•start£end§body©ClassBodyÕÕ?g‹ !‘rMò§type•start£end¶static®computed£key§kind•value∞MethodDefinitionÕÕo¬¬K™IdentifierÕÕ´constructor´constructor‘rNô§type•start£end¢id™expression©generator•async¶params§body≤FunctionExpressionÕÕo¿¬¬¬êLÆBlockStatementÕÕoõ‘rOî§type•start£end™expression≥ExpressionStatementÕ Õ7‘rPñ§type•start£end®operator§left•right¥AssignmentExpressionÕ Õ6°=‘rQó§type•start£end¶object®property®computed®optional∞MemberExpressionÕ Õ.‘rRì§type•start£endÆThisExpressionÕ Õ$K™IdentifierÕ%Õ.©anonymous¬¬‘rSï§type•start£end•value£rawßLiteralÕ1Õ6¬•falseO≥ExpressionStatementÕ@ÕNP¥AssignmentExpressionÕ@ÕM°=Q∞MemberExpressionÕ@ÕHRÆThisExpressionÕ@ÕDK™IdentifierÕEÕH£uid¬¬SßLiteralÕKÕM†¢''O≥ExpressionStatementÕWÕmP¥AssignmentExpressionÕWÕl°=Q∞MemberExpressionÕWÕgRÆThisExpressionÕWÕ[K™IdentifierÕ\Õg´displayName¬¬SßLiteralÕjÕl†¢''O≥ExpressionStatementÕvÕâP¥AssignmentExpressionÕvÕà°=Q∞MemberExpressionÕvÕÉRÆThisExpressionÕvÕzK™IdentifierÕ{ÕÉ®photoUrl¬¬SßLiteralÕÜÕà†¢''O≥ExpressionStatementÕíÕ¢P¥AssignmentExpressionÕíÕ°°=Q∞MemberExpressionÕíÕúRÆThisExpressionÕíÕñK™IdentifierÕóÕú•email¬¬SßLiteralÕüÕ°†¢''O≥ExpressionStatementÕ´ÕªP¥AssignmentExpressionÕ´Õ∫°=Q∞MemberExpressionÕ´ÕµRÆThisExpressionÕ´ÕØK™IdentifierÕ∞Õµ•phone¬¬SßLiteralÕ∏Õ∫†¢''O≥ExpressionStatementÕƒÕŸP¥AssignmentExpressionÕƒÕÿ°=Q∞MemberExpressionÕƒÕ”RÆThisExpressionÕƒÕ»K™IdentifierÕ…Õ”™providerId¬¬SßLiteralÕ÷Õÿ†¢''O≥ExpressionStatementÕ‚Õ˘P¥AssignmentExpressionÕ‚Õ¯°=Q∞MemberExpressionÕ‚ÕÙRÆThisExpressionÕ‚ÕÊK™IdentifierÕÁÕÙ≠emailVerified¬¬SßLiteralÕ˜Õ¯ °0O≥ExpressionStatementÕÕP¥AssignmentExpressionÕÕ°=Q∞MemberExpressionÕÕRÆThisExpressionÕÕK™IdentifierÕÕÆpasswordSetted¬¬SßLiteralÕÕ °0O≥ExpressionStatementÕ#ÕCP¥AssignmentExpressionÕ#ÕB°=Q∞MemberExpressionÕ#Õ7RÆThisExpressionÕ#Õ'K™IdentifierÕ(Õ7ØproviderService¬¬‘rTï§type•start£end¶callee©arguments≠NewExpressionÕ:ÕBK™IdentifierÕ>Õ@¢r7êO≥ExpressionStatementÕLÕiP¥AssignmentExpressionÕLÕh°=Q∞MemberExpressionÕLÕ]RÆThisExpressionÕLÕPK™IdentifierÕQÕ]¨tokenService¬¬T≠NewExpressionÕ`ÕhK™IdentifierÕdÕf¢q7êM∞MethodDefinitionÕtÕ
y√¬K™IdentifierÕ{ÕÜ´fromRawData¶methodN≤FunctionExpressionÕÜÕ
y¿¬¬¬ëK™IdentifierÕáÕã§infoLÆBlockStatementÕçÕ
y‹ ‘rUï§type•start£end¨declarations§kind≥VariableDeclarationÕóÕ∏ë‘rVï§type•start£end¢id§init≤VariableDeclaratorÕõÕ∑K™IdentifierÕõÕü§userT≠NewExpressionÕ¢Õ∑K™IdentifierÕ¶ÕµØAuthDefaultUserê£letO≥ExpressionStatementÕ¡Õ·P¥AssignmentExpressionÕ¡Õ‡°=Q∞MemberExpressionÕ¡ÕœK™IdentifierÕ¡Õ≈§userK™IdentifierÕ∆Õœ©anonymous¬¬Q∞MemberExpressionÕ“Õ‡K™IdentifierÕ“Õ÷§infoK™IdentifierÕ◊Õ‡©anonymous¬¬O≥ExpressionStatementÕÍÕ˛P¥AssignmentExpressionÕÍÕ˝°=Q∞MemberExpressionÕÍÕÚK™IdentifierÕÍÕÓ§userK™IdentifierÕÔÕÚ£uid¬¬Q∞MemberExpressionÕıÕ˝K™IdentifierÕıÕ˘§infoK™IdentifierÕ˙Õ˝£uid¬¬O≥ExpressionStatementÕÕ+P¥AssignmentExpressionÕÕ*°=Q∞MemberExpressionÕÕK™IdentifierÕÕ§userK™IdentifierÕÕ´displayName¬¬Q∞MemberExpressionÕÕ*K™IdentifierÕÕ§infoK™IdentifierÕÕ*´displayName¬¬O≥ExpressionStatementÕ4ÕRP¥AssignmentExpressionÕ4ÕQ°=Q∞MemberExpressionÕ4ÕAK™IdentifierÕ4Õ8§userK™IdentifierÕ9ÕA®photoUrl¬¬Q∞MemberExpressionÕDÕQK™IdentifierÕDÕH§infoK™IdentifierÕIÕQ®photoUrl¬¬O≥ExpressionStatementÕ[ÕsP¥AssignmentExpressionÕ[Õr°=Q∞MemberExpressionÕ[ÕeK™IdentifierÕ[Õ_§userK™IdentifierÕ`Õe•email¬¬Q∞MemberExpressionÕhÕrK™IdentifierÕhÕl§infoK™IdentifierÕmÕr•email¬¬O≥ExpressionStatementÕ|ÕîP¥AssignmentExpressionÕ|Õì°=Q∞MemberExpressionÕ|ÕÜK™IdentifierÕ|ÕÄ§userK™IdentifierÕÅÕÜ•phone¬¬Q∞MemberExpressionÕâÕìK™IdentifierÕâÕç§infoK™IdentifierÕéÕì•phone¬¬O≥ExpressionStatementÕùÕøP¥AssignmentExpressionÕùÕæ°=Q∞MemberExpressionÕùÕ¨K™IdentifierÕùÕ°§userK™IdentifierÕ¢Õ¨™providerId¬¬Q∞MemberExpressionÕØÕæK™IdentifierÕØÕ≥§infoK™IdentifierÕ¥Õæ™providerId¬¬O≥ExpressionStatementÕ»ÕP¥AssignmentExpressionÕ»ÕÔ°=Q∞MemberExpressionÕ»Õ⁄K™IdentifierÕ»ÕÃ§userK™IdentifierÕÕÕ⁄≠emailVerified¬¬Q∞MemberExpressionÕ›ÕÔK™IdentifierÕ›Õ·§infoK™IdentifierÕ‚ÕÔ≠emailVerified¬¬O≥ExpressionStatementÕ˘Õ	#P¥AssignmentExpressionÕ˘Õ	"°=Q∞MemberExpressionÕ˘Õ	K™IdentifierÕ˘Õ˝§userK™IdentifierÕ˛Õ	ÆpasswordSetted¬¬Q∞MemberExpressionÕ	Õ	"K™IdentifierÕ	Õ	§infoK™IdentifierÕ	Õ	"ÆpasswordSetted¬¬O≥ExpressionStatementÕ	,Õ	bP¥AssignmentExpressionÕ	,Õ	a°=Q∞MemberExpressionÕ	,Õ	MQ∞MemberExpressionÕ	,Õ	@K™IdentifierÕ	,Õ	0§userK™IdentifierÕ	1Õ	@ØproviderService¬¬K™IdentifierÕ	AÕ	M¨providerInfo¬¬Q∞MemberExpressionÕ	PÕ	aK™IdentifierÕ	PÕ	T§infoK™IdentifierÕ	UÕ	a¨providerInfo¬¬O≥ExpressionStatementÕ	kÕ	úP¥AssignmentExpressionÕ	kÕ	õ°=Q∞MemberExpressionÕ	kÕ	àQ∞MemberExpressionÕ	kÕ	|K™IdentifierÕ	kÕ	o§userK™IdentifierÕ	pÕ	|¨tokenService¬¬K™IdentifierÕ	}Õ	à´accessToken¬¬Q∞MemberExpressionÕ	ãÕ	õK™IdentifierÕ	ãÕ	è§infoK™IdentifierÕ	êÕ	õ´accessToken¬¬O≥ExpressionStatementÕ	•Õ	ÏP¥AssignmentExpressionÕ	•Õ	Î°=Q∞MemberExpressionÕ	•Õ	ÕQ∞MemberExpressionÕ	•Õ	∂K™IdentifierÕ	•Õ	©§userK™IdentifierÕ	™Õ	∂¨tokenService¬¬K™IdentifierÕ	∑Õ	Õ∂accessTokenValidPeriod¬¬Q∞MemberExpressionÕ	–Õ	ÎK™IdentifierÕ	–Õ	‘§infoK™IdentifierÕ	’Õ	Î∂accessTokenValidPeriod¬¬O≥ExpressionStatementÕ	ıÕ
(P¥AssignmentExpressionÕ	ıÕ
'°=Q∞MemberExpressionÕ	ıÕ
Q∞MemberExpressionÕ	ıÕ
K™IdentifierÕ	ıÕ	˘§userK™IdentifierÕ	˙Õ
¨tokenService¬¬K™IdentifierÕ
Õ
¨refreshToken¬¬Q∞MemberExpressionÕ
Õ
'K™IdentifierÕ
Õ
§infoK™IdentifierÕ
Õ
'¨refreshToken¬¬O≥ExpressionStatementÕ
1Õ
^P¥AssignmentExpressionÕ
1Õ
]°=Q∞MemberExpressionÕ
1Õ
LQ∞MemberExpressionÕ
1Õ
BK™IdentifierÕ
1Õ
5§userK™IdentifierÕ
6Õ
B¨tokenService¬¬K™IdentifierÕ
CÕ
L©startTime¬¬Q∞MemberExpressionÕ
OÕ
]K™IdentifierÕ
OÕ
S§infoK™IdentifierÕ
TÕ
]©startTime¬¬‘rWî§type•start£end®argumentØReturnStatementÕ
gÕ
sK™IdentifierÕ
nÕ
r§userM∞MethodDefinitionÕ
~Õ
π¬¬K™IdentifierÕ
~Õ
çØsetStoreManager¶methodN≤FunctionExpressionÕ
çÕ
π¿¬¬¬ëK™IdentifierÕ
éÕ
ê¢v9LÆBlockStatementÕ
íÕ
πëO≥ExpressionStatementÕ
úÕ
≥P¥AssignmentExpressionÕ
úÕ
≤°=Q∞MemberExpressionÕ
úÕ
≠RÆThisExpressionÕ
úÕ
†K™IdentifierÕ
°Õ
≠¨storeManager¬¬K™IdentifierÕ
∞Õ
≤¢v9M∞MethodDefinitionÕ
æÕ
˜¬¬K™IdentifierÕ
æÕ
ÃÆsetAuthBackend¶methodN≤FunctionExpressionÕ
ÃÕ
˜¿¬¬¬ëK™IdentifierÕ
ÕÕ
œ¢u9LÆBlockStatementÕ
—Õ
˜ëO≥ExpressionStatementÕ
€Õ
ÒP¥AssignmentExpressionÕ
€Õ
°=Q∞MemberExpressionÕ
€Õ
ÎRÆThisExpressionÕ
€Õ
ﬂK™IdentifierÕ
‡Õ
Î´authBackend¬¬K™IdentifierÕ
ÓÕ
¢u9M∞MethodDefinitionÕ
¸ÕÕ¬¬K™IdentifierÕ
¸Õ©toRawData¶methodN≤FunctionExpressionÕÕÕ¿¬¬¬êLÆBlockStatementÕÕÕíU≥VariableDeclarationÕÕ≤ëV≤VariableDeclaratorÕÕ±K™IdentifierÕÕ§info‘rXî§type•start£end™properties∞ObjectExpressionÕÕ±û‘rYô§type•start£end¶method©shorthand®computed£key•value§kind®PropertyÕ+ÕD¬¬¬K™IdentifierÕ+Õ4©anonymousQ∞MemberExpressionÕ6ÕDRÆThisExpressionÕ6Õ:K™IdentifierÕ;ÕD©anonymous¬¬§initY®PropertyÕRÕ_¬¬¬K™IdentifierÕRÕU£uidQ∞MemberExpressionÕWÕ_RÆThisExpressionÕWÕ[K™IdentifierÕ\Õ_£uid¬¬§initY®PropertyÕmÕä¬¬¬K™IdentifierÕmÕx´displayNameQ∞MemberExpressionÕzÕäRÆThisExpressionÕzÕ~K™IdentifierÕÕä´displayName¬¬§initY®PropertyÕòÕØ¬¬¬K™IdentifierÕòÕ†®photoUrlQ∞MemberExpressionÕ¢ÕØRÆThisExpressionÕ¢Õ¶K™IdentifierÕßÕØ®photoUrl¬¬§initY®PropertyÕΩÕŒ¬¬¬K™IdentifierÕΩÕ¬•emailQ∞MemberExpressionÕƒÕŒRÆThisExpressionÕƒÕ»K™IdentifierÕ…ÕŒ•email¬¬§initY®PropertyÕ‹ÕÌ¬¬¬K™IdentifierÕ‹Õ·•phoneQ∞MemberExpressionÕ„ÕÌRÆThisExpressionÕ„ÕÁK™IdentifierÕËÕÌ•phone¬¬§initY®PropertyÕ˚Õ¬¬¬K™IdentifierÕ˚Õ™providerIdQ∞MemberExpressionÕÕRÆThisExpressionÕÕK™IdentifierÕÕ™providerId¬¬§initY®PropertyÕ$ÕE¬¬¬K™IdentifierÕ$Õ1≠emailVerifiedQ∞MemberExpressionÕ3ÕERÆThisExpressionÕ3Õ7K™IdentifierÕ8ÕE≠emailVerified¬¬§initY®PropertyÕSÕv¬¬¬K™IdentifierÕSÕaÆpasswordSettedQ∞MemberExpressionÕcÕvRÆThisExpressionÕcÕgK™IdentifierÕhÕvÆpasswordSetted¬¬§initY®PropertyÕÑÕ≥¬¬¬K™IdentifierÕÑÕê¨providerInfoQ∞MemberExpressionÕíÕ≥Q∞MemberExpressionÕíÕ¶RÆThisExpressionÕíÕñK™IdentifierÕóÕ¶ØproviderService¬¬K™IdentifierÕßÕ≥¨providerInfo¬¬§initY®PropertyÕ¡ÕÎ¬¬¬K™IdentifierÕ¡ÕÃ´accessTokenQ∞MemberExpressionÕŒÕÎQ∞MemberExpressionÕŒÕﬂRÆThisExpressionÕŒÕ“K™IdentifierÕ”Õﬂ¨tokenService¬¬K™IdentifierÕ‡ÕÎ´accessToken¬¬§initY®PropertyÕ˘Õ9¬¬¬K™IdentifierÕ˘Õ∂accessTokenValidPeriodQ∞MemberExpressionÕÕ9Q∞MemberExpressionÕÕ"RÆThisExpressionÕÕK™IdentifierÕÕ"¨tokenService¬¬K™IdentifierÕ#Õ9∂accessTokenValidPeriod¬¬§initY®PropertyÕGÕs¬¬¬K™IdentifierÕGÕS¨refreshTokenQ∞MemberExpressionÕUÕsQ∞MemberExpressionÕUÕfRÆThisExpressionÕUÕYK™IdentifierÕZÕf¨tokenService¬¬K™IdentifierÕgÕs¨refreshToken¬¬§initY®PropertyÕÅÕß¬¬¬K™IdentifierÕÅÕä©startTimeQ∞MemberExpressionÕåÕßQ∞MemberExpressionÕåÕùRÆThisExpressionÕåÕêK™IdentifierÕëÕù¨tokenService¬¬K™IdentifierÕûÕß©startTime¬¬§init£letWØReturnStatementÕªÕ«K™IdentifierÕ¬Õ∆§infoM∞MethodDefinitionÕ“Õ˚¬¬K™IdentifierÕ“Õÿ¶getUid¶methodN≤FunctionExpressionÕÿÕ˚¿¬¬¬êLÆBlockStatementÕ€Õ˚ëWØReturnStatementÕÂÕıQ∞MemberExpressionÕÏÕÙRÆThisExpressionÕÏÕK™IdentifierÕÒÕÙ£uid¬¬M∞MethodDefinitionÕ Õ-¬¬K™IdentifierÕ Õ®getEmail¶methodN≤FunctionExpressionÕÕ-¿¬¬¬êLÆBlockStatementÕÕ-ëWØReturnStatementÕÕ'Q∞MemberExpressionÕÕ&RÆThisExpressionÕÕ K™IdentifierÕ!Õ&•email¬¬M∞MethodDefinitionÕ2Õ_¬¬K™IdentifierÕ2Õ:®getPhone¶methodN≤FunctionExpressionÕ:Õ_¿¬¬¬êLÆBlockStatementÕ=Õ_ëWØReturnStatementÕGÕYQ∞MemberExpressionÕNÕXRÆThisExpressionÕNÕRK™IdentifierÕSÕX•phone¬¬M∞MethodDefinitionÕdÕù¬¬K™IdentifierÕdÕrÆgetDisplayName¶methodN≤FunctionExpressionÕrÕù¿¬¬¬êLÆBlockStatementÕuÕùëWØReturnStatementÕÕóQ∞MemberExpressionÕÜÕñRÆThisExpressionÕÜÕäK™IdentifierÕãÕñ´displayName¬¬M∞MethodDefinitionÕ¢Õ’¬¬K™IdentifierÕ¢Õ≠´getPhotoUrl¶methodN≤FunctionExpressionÕ≠Õ’¿¬¬¬êLÆBlockStatementÕ∞Õ’ëWØReturnStatementÕ∫ÕœQ∞MemberExpressionÕ¡ÕŒRÆThisExpressionÕ¡Õ≈K™IdentifierÕ∆ÕŒ®photoUrl¬¬M∞MethodDefinitionÕ⁄Õ¬¬K™IdentifierÕ⁄ÕÁ≠getProviderId¶methodN≤FunctionExpressionÕÁÕ¿¬¬¬êLÆBlockStatementÕÍÕëWØReturnStatementÕÙÕQ∞MemberExpressionÕ˚Õ
RÆThisExpressionÕ˚ÕˇK™IdentifierÕ Õ
™providerId¬¬M∞MethodDefinitionÕÕJ¬¬K™IdentifierÕÕ!´isAnonymous¶methodN≤FunctionExpressionÕ!ÕJ¿¬¬¬êLÆBlockStatementÕ$ÕJëWØReturnStatementÕ.ÕDQ∞MemberExpressionÕ5ÕCRÆThisExpressionÕ5Õ9K™IdentifierÕ:ÕC©anonymous¬¬M∞MethodDefinitionÕOÕ¬¬K™IdentifierÕOÕ^ØgetProviderInfo¶methodN≤FunctionExpressionÕ^Õ¿¬¬¬êLÆBlockStatementÕaÕìU≥VariableDeclarationÕkÕwëV≤VariableDeclaratorÕoÕvK™IdentifierÕoÕq¢p9‘rZî§type•start£end®elementsØArrayExpressionÕtÕvê£let‘r[ó§type•start£end§init§test¶update§body¨ForStatementÕÄÕÏU≥VariableDeclarationÕÖÕèëV≤VariableDeclaratorÕâÕèK™IdentifierÕâÕã¢q9SßLiteralÕéÕè °0£let‘r\ñ§type•start£end§left®operator•right∞BinaryExpressionÕëÕøK™IdentifierÕëÕì¢q9°<OØChainExpressionÕñÕøQ∞MemberExpressionÕñÕøQ∞MemberExpressionÕñÕ∑Q∞MemberExpressionÕñÕ™RÆThisExpressionÕñÕöK™IdentifierÕõÕ™ØproviderService¬¬K™IdentifierÕ´Õ∑¨providerInfo¬¬K™IdentifierÕπÕø¶length¬√‘r]ñ§type•start£end®operator¶prefix®argument∞UpdateExpressionÕ¡Õ≈¢++¬K™IdentifierÕ¡Õ√¢q9LÆBlockStatementÕ«ÕÏîU≥VariableDeclarationÕ’ÕËëV≤VariableDeclaratorÕŸÕÁK™IdentifierÕŸÕ€¢r9T≠NewExpressionÕﬁÕÁK™IdentifierÕ‚ÕÂ£Mapê£letU≥VariableDeclarationÕıÕ1ëV≤VariableDeclaratorÕ˘Õ0K™IdentifierÕ˘Õ˚¢s9‘r^ñ§type•start£end¶callee©arguments®optionalÆCallExpressionÕ˛Õ0Q∞MemberExpressionÕ˛Õ	K™IdentifierÕ˛Õ¶ObjectK™IdentifierÕÕ	§keys¬¬ëQ∞MemberExpressionÕ
Õ/Q∞MemberExpressionÕ
Õ+Q∞MemberExpressionÕ
ÕRÆThisExpressionÕ
ÕK™IdentifierÕÕØproviderService¬¬K™IdentifierÕÕ+¨providerInfo¬¬K™IdentifierÕ,Õ.¢q9√¬¬£let[¨ForStatementÕ>Õ…U≥VariableDeclarationÕCÕMëV≤VariableDeclaratorÕGÕMK™IdentifierÕGÕI¢t9SßLiteralÕLÕM °0£let\±LogicalExpressionÕOÕcK™IdentifierÕOÕQ¢s9¢&&\∞BinaryExpressionÕUÕcK™IdentifierÕUÕW¢t9°<Q∞MemberExpressionÕZÕcK™IdentifierÕZÕ\¢s9K™IdentifierÕ]Õc¶length¬¬]∞UpdateExpressionÕeÕi¢++¬K™IdentifierÕeÕg¢t9LÆBlockStatementÕkÕ…ëO≥ExpressionStatementÕ}Õª^ÆCallExpressionÕ}Õ∫Q∞MemberExpressionÕ}ÕÉK™IdentifierÕ}Õ¢r9K™IdentifierÕÄÕÉ£set¬¬íQ∞MemberExpressionÕÑÕäK™IdentifierÕÑÕÜ¢s9K™IdentifierÕáÕâ¢t9√¬Q∞MemberExpressionÕåÕπQ∞MemberExpressionÕåÕ±Q∞MemberExpressionÕåÕ≠Q∞MemberExpressionÕåÕ†RÆThisExpressionÕåÕêK™IdentifierÕëÕ†ØproviderService¬¬K™IdentifierÕ°Õ≠¨providerInfo¬¬K™IdentifierÕÆÕ∞¢q9√¬Q∞MemberExpressionÕ≤Õ∏K™IdentifierÕ≤Õ¥¢s9K™IdentifierÕµÕ∑¢t9√¬√¬¬O≥ExpressionStatementÕ÷Õ‚^ÆCallExpressionÕ÷Õ·Q∞MemberExpressionÕ÷Õ›K™IdentifierÕ÷Õÿ¢p9K™IdentifierÕŸÕ›§push¬¬ëK™IdentifierÕﬁÕ‡¢r9¬WØReturnStatementÕıÕˇK™IdentifierÕ¸Õ˛¢p9M∞MethodDefinitionÕ
Õ¬¬K™IdentifierÕÕ®getToken¶methodN≤FunctionExpressionÕÕ¿¬¬√ëK™IdentifierÕÕ¢o9LÆBlockStatementÕÕî‘r_ñ§type•start£end§test™consequent©alternate´IfStatementÕ'Õè\±LogicalExpressionÕ+ÕG]ØUnaryExpressionÕ+Õ.°!√K™IdentifierÕ,Õ.¢o9¢&&^ÆCallExpressionÕ2ÕGQ∞MemberExpressionÕ2ÕEQ∞MemberExpressionÕ2ÕCRÆThisExpressionÕ2Õ6K™IdentifierÕ7ÕC¨tokenService¬¬K™IdentifierÕDÕE°j¬¬ê¬LÆBlockStatementÕIÕèëWØReturnStatementÕWÕÖ^ÆCallExpressionÕ^ÕÑQ∞MemberExpressionÕ^ÕmK™IdentifierÕ^ÕeßPromiseK™IdentifierÕfÕmßresolve¬¬ë^ÆCallExpressionÕnÕÉQ∞MemberExpressionÕnÕÅQ∞MemberExpressionÕnÕRÆThisExpressionÕnÕrK™IdentifierÕsÕ¨tokenService¬¬K™IdentifierÕÄÕÅ°m¬¬ê¬¬¿O≥ExpressionStatementÕòÕ¥WØAwaitExpressionÕòÕ≥^ÆCallExpressionÕûÕ≥Q∞MemberExpressionÕûÕ±Q∞MemberExpressionÕûÕØRÆThisExpressionÕûÕ¢K™IdentifierÕ£ÕØ¨tokenService¬¬K™IdentifierÕ∞Õ±°o¬¬ê¬O≥ExpressionStatementÕΩÕÿWØAwaitExpressionÕΩÕ◊^ÆCallExpressionÕ√Õ◊Q∞MemberExpressionÕ√Õ’RÆThisExpressionÕ√Õ«K™IdentifierÕ»Õ’≠syncToStorage¬¬ê¬WØReturnStatementÕ·Õ^ÆCallExpressionÕËÕQ∞MemberExpressionÕËÕ˜K™IdentifierÕËÕÔßPromiseK™IdentifierÕÕ˜ßresolve¬¬ë^ÆCallExpressionÕ¯ÕQ∞MemberExpressionÕ¯ÕQ∞MemberExpressionÕ¯Õ	RÆThisExpressionÕ¯Õ¸K™IdentifierÕ˝Õ	¨tokenService¬¬K™IdentifierÕ
Õ°m¬¬ê¬¬M∞MethodDefinitionÕÕ9¬¬K™IdentifierÕ Õ,¨getUserExtra¶methodN≤FunctionExpressionÕ,Õ9¿¬¬√êLÆBlockStatementÕ/Õ9úU≥VariableDeclarationÕ9ÕYëV≤VariableDeclaratorÕ=ÕXK™IdentifierÕ=Õ?¢l9T≠NewExpressionÕBÕXK™IdentifierÕFÕV∞UserExtraRequestê£letU≥VariableDeclarationÕbÕvëV≤VariableDeclaratorÕfÕuK™IdentifierÕfÕh¢m9T≠NewExpressionÕkÕuK™IdentifierÕoÕs§Listê£letO≥ExpressionStatementÕÕ•^ÆCallExpressionÕÕ§Q∞MemberExpressionÕÕÖK™IdentifierÕÕÅ¢m9K™IdentifierÕÇÕÖ£add¬¬ë^ÆCallExpressionÕÜÕ£Q∞MemberExpressionÕÜÕ°RÆThisExpressionÕÜÕäK™IdentifierÕãÕ°∂createTokenInterceptor¬¬ê¬¬U≥VariableDeclarationÕÆÕÛëV≤VariableDeclaratorÕ≤ÕÚK™IdentifierÕ≤Õ¥¢n9WØAwaitExpressionÕ∑ÕÚ^ÆCallExpressionÕΩÕÚQ∞MemberExpressionÕΩÕ—Q∞MemberExpressionÕΩÕÕRÆThisExpressionÕΩÕ¡K™IdentifierÕ¬ÕÕ´authBackend¬¬K™IdentifierÕŒÕ—£get¬¬ìK™IdentifierÕ“Õ‘¢l9T≠NewExpressionÕ÷ÕÌK™IdentifierÕ⁄ÕÎ±UserExtraResponseêK™IdentifierÕÔÕÒ¢m9¬£letO≥ExpressionStatementÕ¸ÕP¥AssignmentExpressionÕ¸Õ°=Q∞MemberExpressionÕ¸ÕRÆThisExpressionÕ¸Õ K™IdentifierÕÕ´displayName¬¬Q∞MemberExpressionÕÕK™IdentifierÕÕ¢n9K™IdentifierÕÕ´displayName¬¬O≥ExpressionStatementÕ'ÕCP¥AssignmentExpressionÕ'ÕB°=Q∞MemberExpressionÕ'Õ4RÆThisExpressionÕ'Õ+K™IdentifierÕ,Õ4®photoUrl¬¬Q∞MemberExpressionÕ7ÕBK™IdentifierÕ7Õ9¢n9K™IdentifierÕ:ÕB®photoUrl¬¬O≥ExpressionStatementÕLÕrP¥AssignmentExpressionÕLÕq°=Q∞MemberExpressionÕLÕ^RÆThisExpressionÕLÕPK™IdentifierÕQÕ^≠emailVerified¬¬Q∞MemberExpressionÕaÕqK™IdentifierÕaÕc¢n9K™IdentifierÕdÕq≠emailVerified¬¬O≥ExpressionStatementÕ{Õ£P¥AssignmentExpressionÕ{Õ¢°=Q∞MemberExpressionÕ{ÕéRÆThisExpressionÕ{ÕK™IdentifierÕÄÕéÆpasswordSetted¬¬Q∞MemberExpressionÕëÕ¢K™IdentifierÕëÕì¢n9K™IdentifierÕîÕ¢ÆpasswordSetted¬¬O≥ExpressionStatementÕ¨Õ¬P¥AssignmentExpressionÕ¨Õ¡°=Q∞MemberExpressionÕ¨Õ∂RÆThisExpressionÕ¨Õ∞K™IdentifierÕ±Õ∂•email¬¬Q∞MemberExpressionÕπÕ¡K™IdentifierÕπÕª¢n9K™IdentifierÕºÕ¡•email¬¬O≥ExpressionStatementÕÀÕ·P¥AssignmentExpressionÕÀÕ‡°=Q∞MemberExpressionÕÀÕ’RÆThisExpressionÕÀÕœK™IdentifierÕ–Õ’•phone¬¬Q∞MemberExpressionÕÿÕ‡K™IdentifierÕÿÕ⁄¢n9K™IdentifierÕ€Õ‡•phone¬¬O≥ExpressionStatementÕÍÕWØAwaitExpressionÕÍÕ^ÆCallExpressionÕÕQ∞MemberExpressionÕÕRÆThisExpressionÕÕÙK™IdentifierÕıÕ≠syncToStorage¬¬ê¬WØReturnStatementÕÕ3^ÆCallExpressionÕÕ2Q∞MemberExpressionÕÕ$K™IdentifierÕÕßPromiseK™IdentifierÕÕ$ßresolve¬¬ëQ∞MemberExpressionÕ%Õ1K™IdentifierÕ%Õ'¢n9K™IdentifierÕ(Õ1©userExtra¬¬¬M∞MethodDefinitionÕ>Õâ¬¬K™IdentifierÕ>ÕLÆgetAccessToken¶methodN≤FunctionExpressionÕLÕâ¿¬¬¬êLÆBlockStatementÕOÕâëWØReturnStatementÕYÕÉ^ÆCallExpressionÕ`ÕÇQ∞MemberExpressionÕ`ÕÄQ∞MemberExpressionÕ`ÕqRÆThisExpressionÕ`ÕdK™IdentifierÕeÕq¨tokenService¬¬K™IdentifierÕrÕÄÆgetAccessToken¬¬ê¬M∞MethodDefinitionÕéÕ€¬¬K™IdentifierÕéÕùØgetRefreshToken¶methodN≤FunctionExpressionÕùÕ€¿¬¬¬êLÆBlockStatementÕ†Õ€ëWØReturnStatementÕ™Õ’^ÆCallExpressionÕ±Õ‘Q∞MemberExpressionÕ±Õ“Q∞MemberExpressionÕ±Õ¬RÆThisExpressionÕ±ÕµK™IdentifierÕ∂Õ¬¨tokenService¬¬K™IdentifierÕ√Õ“ØgetRefreshToken¬¬ê¬M∞MethodDefinitionÕ‡Õ#¬¬K™IdentifierÕ‡Õ∞getEmailVerified¶methodN≤FunctionExpressionÕÕ#¿¬¬¬êLÆBlockStatementÕÛÕ#ëWØReturnStatementÕ˝Õ\∞BinaryExpressionÕÕQ∞MemberExpressionÕÕRÆThisExpressionÕÕK™IdentifierÕ	Õ≠emailVerified¬¬£===SßLiteralÕÕ°1M∞MethodDefinitionÕ(Õm¬¬K™IdentifierÕ(Õ9±getPasswordSetted¶methodN≤FunctionExpressionÕ9Õm¿¬¬¬êLÆBlockStatementÕ<ÕmëWØReturnStatementÕFÕg\∞BinaryExpressionÕMÕfQ∞MemberExpressionÕMÕ`RÆThisExpressionÕMÕQK™IdentifierÕRÕ`ÆpasswordSetted¬¬£===SßLiteralÕeÕf°1M∞MethodDefinitionÕrÕ¬¬K™IdentifierÕxÕÖ≠updateProfile¶methodN≤FunctionExpressionÕÖÕ¿¬¬√ëK™IdentifierÕÜÕë´userProfileLÆBlockStatementÕìÕõ_´IfStatementÕùÕ=\±LogicalExpressionÕ°Õ“]ØUnaryExpressionÕ°Õπ°!√Q∞MemberExpressionÕ¢ÕπK™IdentifierÕ¢Õ≠´userProfileK™IdentifierÕÆÕπ´displayName¬¬¢||]ØUnaryExpressionÕΩÕ“°!√Q∞MemberExpressionÕæÕ“K™IdentifierÕæÕ…´userProfileK™IdentifierÕ Õ“®photoUrl¬¬LÆBlockStatementÕ‘Õ=ëWØReturnStatementÕ‚Õ3^ÆCallExpressionÕÈÕ2Q∞MemberExpressionÕÈÕ˜K™IdentifierÕÈÕßPromiseK™IdentifierÕÒÕ˜¶reject¬¬ëT≠NewExpressionÕ¯Õ1K™IdentifierÕ¸Õ¨AGCAuthErrorëQ∞MemberExpressionÕ	Õ0K™IdentifierÕ	Õ∞AGCAuthErrorCodeK™IdentifierÕÕ0∂FAIL_TO_UPDATE_PROFILE¬¬¬¿U≥VariableDeclarationÕFÕjëV≤VariableDeclaratorÕJÕiK™IdentifierÕJÕL¢j9T≠NewExpressionÕOÕiK™IdentifierÕSÕg¥UpdateProfileRequestê£letO≥ExpressionStatementÕsÕû^ÆCallExpressionÕsÕùQ∞MemberExpressionÕsÕÑK™IdentifierÕsÕu¢j9K™IdentifierÕvÕÑÆsetDisplayName¬¬ëQ∞MemberExpressionÕÖÕúK™IdentifierÕÖÕê´userProfileK™IdentifierÕëÕú´displayName¬¬¬O≥ExpressionStatementÕßÕÃ^ÆCallExpressionÕßÕÀQ∞MemberExpressionÕßÕµK™IdentifierÕßÕ©¢j9K™IdentifierÕ™Õµ´setPhotoUrl¬¬ëQ∞MemberExpressionÕ∂Õ K™IdentifierÕ∂Õ¡´userProfileK™IdentifierÕ¬Õ ®photoUrl¬¬¬U≥VariableDeclarationÕ’ÕÈëV≤VariableDeclaratorÕŸÕËK™IdentifierÕŸÕ€¢k9T≠NewExpressionÕﬁÕËK™IdentifierÕ‚ÕÊ§Listê£letO≥ExpressionStatementÕÚÕ^ÆCallExpressionÕÚÕQ∞MemberExpressionÕÚÕ¯K™IdentifierÕÚÕÙ¢k9K™IdentifierÕıÕ¯£add¬¬ë^ÆCallExpressionÕ˘ÕQ∞MemberExpressionÕ˘ÕRÆThisExpressionÕ˘Õ˝K™IdentifierÕ˛Õ∂createTokenInterceptor¬¬ê¬¬O≥ExpressionStatementÕ!ÕaWØAwaitExpressionÕ!Õ`^ÆCallExpressionÕ'Õ`Q∞MemberExpressionÕ'Õ;Q∞MemberExpressionÕ'Õ7RÆThisExpressionÕ'Õ+K™IdentifierÕ,Õ7´authBackend¬¬K™IdentifierÕ8Õ;£put¬¬ìK™IdentifierÕ<Õ>¢j9T≠NewExpressionÕ@Õ[K™IdentifierÕDÕYµUpdateProfileResponseêK™IdentifierÕ]Õ_¢k9¬O≥ExpressionStatementÕjÕïP¥AssignmentExpressionÕjÕî°=Q∞MemberExpressionÕjÕzRÆThisExpressionÕjÕnK™IdentifierÕoÕz´displayName¬¬Q∞MemberExpressionÕ}ÕîK™IdentifierÕ}Õà´userProfileK™IdentifierÕâÕî´displayName¬¬O≥ExpressionStatementÕûÕ√P¥AssignmentExpressionÕûÕ¬°=Q∞MemberExpressionÕûÕ´RÆThisExpressionÕûÕ¢K™IdentifierÕ£Õ´®photoUrl¬¬Q∞MemberExpressionÕÆÕ¬K™IdentifierÕÆÕπ´userProfileK™IdentifierÕ∫Õ¬®photoUrl¬¬O≥ExpressionStatementÕÃÕÁWØAwaitExpressionÕÃÕÊ^ÆCallExpressionÕ“ÕÊQ∞MemberExpressionÕ“Õ‰RÆThisExpressionÕ“Õ÷K™IdentifierÕ◊Õ‰≠syncToStorage¬¬ê¬WØReturnStatementÕÕ	^ÆCallExpressionÕ˜ÕQ∞MemberExpressionÕ˜ÕK™IdentifierÕ˜Õ˛ßPromiseK™IdentifierÕˇÕßresolve¬¬ê¬M∞MethodDefinitionÕÕ∆¬¬K™IdentifierÕÕ,≤userReauthenticate¶methodN≤FunctionExpressionÕ,Õ∆¿¬¬√ëK™IdentifierÕ-Õ2•paramLÆBlockStatementÕ4Õ∆úU≥VariableDeclarationÕ>ÕãëV≤VariableDeclaratorÕBÕäK™IdentifierÕBÕD¢d9X∞ObjectExpressionÕGÕäíY®PropertyÕIÕ`¬¬¬SßLiteralÕIÕYÆautoCreateUser∞'autoCreateUser'SßLiteralÕ[Õ`¬•false§initY®PropertyÕbÕà¬¬¬SßLiteralÕbÕrÆcredentialInfo∞'credentialInfo'Q∞MemberExpressionÕtÕàK™IdentifierÕtÕy•paramK™IdentifierÕzÕàÆcredentialInfo¬¬§init£letU≥VariableDeclarationÕîÕªëV≤VariableDeclaratorÕòÕ∫K™IdentifierÕòÕ¶ÆcredentialInfoQ∞MemberExpressionÕ©Õ∫K™IdentifierÕ©Õ´¢d9K™IdentifierÕ¨Õ∫ÆcredentialInfo¬¬£let_´IfStatementÕƒÕ>]ØUnaryExpressionÕ»Õ◊°!√K™IdentifierÕ…Õ◊ÆcredentialInfoLÆBlockStatementÕŸÕ>ëWØReturnStatementÕÁÕ4^ÆCallExpressionÕÓÕ3Q∞MemberExpressionÕÓÕ¸K™IdentifierÕÓÕıßPromiseK™IdentifierÕˆÕ¸¶reject¬¬ëT≠NewExpressionÕ˝Õ2K™IdentifierÕÕ¨AGCAuthErrorëQ∞MemberExpressionÕÕ1K™IdentifierÕÕ∞AGCAuthErrorCodeK™IdentifierÕÕ1≤CREDENTIAL_INVALID¬¬¬¿U≥VariableDeclarationÕGÕ1ëV≤VariableDeclaratorÕKÕ0K™IdentifierÕKÕM¢e9X∞ObjectExpressionÕPÕ0íY®PropertyÕ^Õ∆¬¬¬SßLiteralÕ^Õe•phoneß'phone'N∑ArrowFunctionExpressionÕgÕ∆¿¬¬¬êLÆBlockStatementÕmÕ∆ïU≥VariableDeclarationÕÕ•ëV≤VariableDeclaratorÕÉÕ§K™IdentifierÕÉÕÜ£reqT≠NewExpressionÕâÕ§K™IdentifierÕçÕ¢µReauthenticateRequestê£letU≥VariableDeclarationÕ∂ÕŒëV≤VariableDeclaratorÕ∫ÕÕK™IdentifierÕ∫Õº¢i9K™IdentifierÕøÕÕÆcredentialInfo£letU≥VariableDeclarationÕﬂÕbëV≤VariableDeclaratorÕ„ÕaK™IdentifierÕ„ÕÌ™credential^ÆCallExpressionÕÕaQ∞MemberExpressionÕÕ%K™IdentifierÕÕ±PhoneAuthProviderK™IdentifierÕÕ%Ÿ#credentialWithPasswordAndVerifyCode¬¬îQ∞MemberExpressionÕ&Õ4K™IdentifierÕ&Õ(¢i9K™IdentifierÕ)Õ4´countryCode¬¬Q∞MemberExpressionÕ6ÕDK™IdentifierÕ6Õ8¢i9K™IdentifierÕ9ÕD´phoneNumber¬¬Q∞MemberExpressionÕFÕQK™IdentifierÕFÕH¢i9K™IdentifierÕIÕQ®password¬¬Q∞MemberExpressionÕSÕ`K™IdentifierÕSÕU¢i9K™IdentifierÕVÕ`™verifyCode¬¬¬£letO≥ExpressionStatementÕsÕú^ÆCallExpressionÕsÕõQ∞MemberExpressionÕsÕñK™IdentifierÕsÕ}™credentialK™IdentifierÕ~Õñ∏prepareUserReauthRequest¬¬ëK™IdentifierÕóÕö£req¬WØReturnStatementÕ≠Õ∏K™IdentifierÕ¥Õ∑£req§initY®PropertyÕ‘Õ&¬¬¬SßLiteralÕ‘Õ€•emailß'email'N∑ArrowFunctionExpressionÕ›Õ&¿¬¬¬êLÆBlockStatementÕ„Õ&ïU≥VariableDeclarationÕıÕëV≤VariableDeclaratorÕ˘ÕK™IdentifierÕ˘Õ¸£reqT≠NewExpressionÕˇÕK™IdentifierÕÕµReauthenticateRequestê£letU≥VariableDeclarationÕ,ÕDëV≤VariableDeclaratorÕ0ÕCK™IdentifierÕ0Õ2¢h9K™IdentifierÕ5ÕCÆcredentialInfo£letU≥VariableDeclarationÕUÕ¬ëV≤VariableDeclaratorÕYÕ¡K™IdentifierÕYÕc™credential^ÆCallExpressionÕfÕ¡Q∞MemberExpressionÕfÕõK™IdentifierÕfÕw±EmailAuthProviderK™IdentifierÕxÕõŸ#credentialWithPasswordAndVerifyCode¬¬ìQ∞MemberExpressionÕúÕ§K™IdentifierÕúÕû¢h9K™IdentifierÕüÕ§•email¬¬Q∞MemberExpressionÕ¶Õ±K™IdentifierÕ¶Õ®¢h9K™IdentifierÕ©Õ±®password¬¬Q∞MemberExpressionÕ≥Õ¿K™IdentifierÕ≥Õµ¢h9K™IdentifierÕ∂Õ¿™verifyCode¬¬¬£letO≥ExpressionStatementÕ”Õ¸^ÆCallExpressionÕ”Õ˚Q∞MemberExpressionÕ”ÕˆK™IdentifierÕ”Õ›™credentialK™IdentifierÕﬁÕˆ∏prepareUserReauthRequest¬¬ëK™IdentifierÕ˜Õ˙£req¬WØReturnStatementÕÕK™IdentifierÕÕ£req§init£letU≥VariableDeclarationÕ:Õ`ëV≤VariableDeclaratorÕ>Õ_K™IdentifierÕ>Õ@¢f9^ÆCallExpressionÕCÕ_Q∞MemberExpressionÕCÕ]K™IdentifierÕCÕE¢e9Q∞MemberExpressionÕFÕ\Q∞MemberExpressionÕFÕWK™IdentifierÕFÕH¢d9K™IdentifierÕIÕWÆcredentialInfo¬¬K™IdentifierÕXÕ\§kind¬¬√¬ê¬£letO≥ExpressionStatementÕiÕë^ÆCallExpressionÕiÕêQ∞MemberExpressionÕiÕ}K™IdentifierÕiÕk¢f9K™IdentifierÕlÕ}±setAutoCreateUser¬¬ëQ∞MemberExpressionÕ~ÕèK™IdentifierÕ~ÕÄ¢d9K™IdentifierÕÅÕèÆautoCreateUser¬¬¬U≥VariableDeclarationÕöÕÆëV≤VariableDeclaratorÕûÕ≠K™IdentifierÕûÕ†¢g9T≠NewExpressionÕ£Õ≠K™IdentifierÕßÕ´§Listê£letO≥ExpressionStatementÕ∑Õ›^ÆCallExpressionÕ∑Õ‹Q∞MemberExpressionÕ∑ÕΩK™IdentifierÕ∑Õπ¢g9K™IdentifierÕ∫ÕΩ£add¬¬ë^ÆCallExpressionÕæÕ€Q∞MemberExpressionÕæÕŸRÆThisExpressionÕæÕ¬K™IdentifierÕ√ÕŸ∂createTokenInterceptor¬¬ê¬¬U≥VariableDeclarationÕÊÕ7ëV≤VariableDeclaratorÕÍÕ6K™IdentifierÕÍÕÚ®responseWØAwaitExpressionÕıÕ6^ÆCallExpressionÕ˚Õ6Q∞MemberExpressionÕ˚ÕQ∞MemberExpressionÕ˚ÕRÆThisExpressionÕ˚ÕˇK™IdentifierÕ Õ´authBackend¬¬K™IdentifierÕÕ§post¬¬ìK™IdentifierÕÕ¢f9T≠NewExpressionÕÕ1K™IdentifierÕÕ/∂ReauthenticateResponseêK™IdentifierÕ3Õ5¢g9¬£letO≥ExpressionStatementÕ@Õ`^ÆCallExpressionÕ@Õ_Q∞MemberExpressionÕ@ÕURÆThisExpressionÕ@ÕDK™IdentifierÕEÕU∞reConfigUserFrom¬¬ëK™IdentifierÕVÕ^®response¬O≥ExpressionStatementÕiÕÑWØAwaitExpressionÕiÕÉ^ÆCallExpressionÕoÕÉQ∞MemberExpressionÕoÕÅRÆThisExpressionÕoÕsK™IdentifierÕtÕÅ≠syncToStorage¬¬ê¬WØReturnStatementÕçÕ¿^ÆCallExpressionÕîÕøQ∞MemberExpressionÕîÕ£K™IdentifierÕîÕõßPromiseK™IdentifierÕúÕ£ßresolve¬¬ëT≠NewExpressionÕ§ÕæK™IdentifierÕ®Õ∏∞SignInResultImplëRÆThisExpressionÕπÕΩ¬M∞MethodDefinitionÕÀÕ!é¬¬K™IdentifierÕÀÕ€∞reConfigUserFrom¶methodN≤FunctionExpressionÕ€Õ!é¿¬¬¬ëK™IdentifierÕ‹Õ‰®responseLÆBlockStatementÕÊÕ!éûO≥ExpressionStatementÕÕP¥AssignmentExpressionÕÕ°=Q∞MemberExpressionÕÕ˛RÆThisExpressionÕÕÙK™IdentifierÕıÕ˛©anonymous¬¬SßLiteralÕÕ¬•falseO≥ExpressionStatementÕÕ;P¥AssignmentExpressionÕÕ:°=Q∞MemberExpressionÕÕRÆThisExpressionÕÕK™IdentifierÕÕ£uid¬¬^ÆCallExpressionÕÕ:Q∞MemberExpressionÕÕ8^ÆCallExpressionÕÕ1Q∞MemberExpressionÕÕ/K™IdentifierÕÕ#®responseK™IdentifierÕ$Õ/´getUserInfo¬¬ê¬K™IdentifierÕ2Õ8¶getUid¬¬ê¬O≥ExpressionStatementÕDÕP¥AssignmentExpressionÕDÕ~°=Q∞MemberExpressionÕDÕTRÆThisExpressionÕDÕHK™IdentifierÕIÕT´displayName¬¬^ÆCallExpressionÕWÕ~Q∞MemberExpressionÕWÕ|^ÆCallExpressionÕWÕmQ∞MemberExpressionÕWÕkK™IdentifierÕWÕ_®responseK™IdentifierÕ`Õk´getUserInfo¬¬ê¬K™IdentifierÕnÕ|ÆgetDisplayName¬¬ê¬O≥ExpressionStatementÕàÕΩP¥AssignmentExpressionÕàÕº°=Q∞MemberExpressionÕàÕïRÆThisExpressionÕàÕåK™IdentifierÕçÕï®photoUrl¬¬^ÆCallExpressionÕòÕºQ∞MemberExpressionÕòÕ∫^ÆCallExpressionÕòÕÆQ∞MemberExpressionÕòÕ¨K™IdentifierÕòÕ†®responseK™IdentifierÕ°Õ¨´getUserInfo¬¬ê¬K™IdentifierÕØÕ∫´getPhotoUrl¬¬ê¬O≥ExpressionStatementÕ∆ÕıP¥AssignmentExpressionÕ∆ÕÙ°=Q∞MemberExpressionÕ∆Õ–RÆThisExpressionÕ∆Õ K™IdentifierÕÀÕ–•email¬¬^ÆCallExpressionÕ”ÕÙQ∞MemberExpressionÕ”ÕÚ^ÆCallExpressionÕ”ÕÈQ∞MemberExpressionÕ”ÕÁK™IdentifierÕ”Õ€®responseK™IdentifierÕ‹ÕÁ´getUserInfo¬¬ê¬K™IdentifierÕÍÕÚ®getEmail¬¬ê¬O≥ExpressionStatementÕ˛Õ=P¥AssignmentExpressionÕ˛Õ<°=Q∞MemberExpressionÕ˛ÕRÆThisExpressionÕ˛ÕK™IdentifierÕÕ≠emailVerified¬¬^ÆCallExpressionÕÕ<Q∞MemberExpressionÕÕ:^ÆCallExpressionÕÕ)Q∞MemberExpressionÕÕ'K™IdentifierÕÕ®responseK™IdentifierÕÕ'´getUserInfo¬¬ê¬K™IdentifierÕ*Õ:∞getEmailVerified¬¬ê¬O≥ExpressionStatementÕFÕáP¥AssignmentExpressionÕFÕÜ°=Q∞MemberExpressionÕFÕYRÆThisExpressionÕFÕJK™IdentifierÕKÕYÆpasswordSetted¬¬^ÆCallExpressionÕ\ÕÜQ∞MemberExpressionÕ\ÕÑ^ÆCallExpressionÕ\ÕrQ∞MemberExpressionÕ\ÕpK™IdentifierÕ\Õd®responseK™IdentifierÕeÕp´getUserInfo¬¬ê¬K™IdentifierÕsÕÑ±getPasswordSetted¬¬ê¬O≥ExpressionStatementÕêÕøP¥AssignmentExpressionÕêÕæ°=Q∞MemberExpressionÕêÕöRÆThisExpressionÕêÕîK™IdentifierÕïÕö•phone¬¬^ÆCallExpressionÕùÕæQ∞MemberExpressionÕùÕº^ÆCallExpressionÕùÕ≥Q∞MemberExpressionÕùÕ±K™IdentifierÕùÕ•®responseK™IdentifierÕ¶Õ±´getUserInfo¬¬ê¬K™IdentifierÕ¥Õº®getPhone¬¬ê¬O≥ExpressionStatementÕ»Õ 
P¥AssignmentExpressionÕ»Õ 	°=Q∞MemberExpressionÕ»Õ◊RÆThisExpressionÕ»ÕÃK™IdentifierÕÕÕ◊™providerId¬¬^ÆCallExpressionÕ⁄Õ 	Q∞MemberExpressionÕ⁄Õ ^ÆCallExpressionÕ⁄Õ˛Q∞MemberExpressionÕ⁄Õ¸^ÆCallExpressionÕ⁄ÕQ∞MemberExpressionÕ⁄ÕÓK™IdentifierÕ⁄Õ‚®responseK™IdentifierÕ„ÕÓ´getUserInfo¬¬ê¬K™IdentifierÕÒÕ¸´getProvider¬¬ê¬K™IdentifierÕˇÕ ®toString¬¬ê¬O≥ExpressionStatementÕ Õ XP¥AssignmentExpressionÕ Õ W°=Q∞MemberExpressionÕ Õ 0Q∞MemberExpressionÕ Õ $RÆThisExpressionÕ Õ K™IdentifierÕ Õ $¨tokenService¬¬K™IdentifierÕ %Õ 0´accessToken¬¬^ÆCallExpressionÕ 3Õ WQ∞MemberExpressionÕ 3Õ U^ÆCallExpressionÕ 3Õ LQ∞MemberExpressionÕ 3Õ JK™IdentifierÕ 3Õ ;®responseK™IdentifierÕ <Õ JÆgetAccessToken¬¬ê¬K™IdentifierÕ MÕ U®getToken¬¬ê¬O≥ExpressionStatementÕ aÕ ∑P¥AssignmentExpressionÕ aÕ ∂°=Q∞MemberExpressionÕ aÕ âQ∞MemberExpressionÕ aÕ rRÆThisExpressionÕ aÕ eK™IdentifierÕ fÕ r¨tokenService¬¬K™IdentifierÕ sÕ â∂accessTokenValidPeriod¬¬^ÆCallExpressionÕ åÕ ∂Q∞MemberExpressionÕ åÕ ¥^ÆCallExpressionÕ åÕ •Q∞MemberExpressionÕ åÕ £K™IdentifierÕ åÕ î®responseK™IdentifierÕ ïÕ £ÆgetAccessToken¬¬ê¬K™IdentifierÕ ¶Õ ¥ÆgetValidPeriod¬¬ê¬O≥ExpressionStatementÕ ¿Õ!P¥AssignmentExpressionÕ ¿Õ!°=Q∞MemberExpressionÕ ¿Õ ﬁQ∞MemberExpressionÕ ¿Õ —RÆThisExpressionÕ ¿Õ ƒK™IdentifierÕ ≈Õ —¨tokenService¬¬K™IdentifierÕ “Õ ﬁ¨refreshToken¬¬^ÆCallExpressionÕ ·Õ!Q∞MemberExpressionÕ ·Õ!^ÆCallExpressionÕ ·Õ ˚Q∞MemberExpressionÕ ·Õ ˘K™IdentifierÕ ·Õ È®responseK™IdentifierÕ ÍÕ ˘ØgetRefreshToken¬¬ê¬K™IdentifierÕ ¸Õ!®getToken¬¬ê¬O≥ExpressionStatementÕ!Õ!CP¥AssignmentExpressionÕ!Õ!B°=Q∞MemberExpressionÕ!Õ!+Q∞MemberExpressionÕ!Õ!!RÆThisExpressionÕ!Õ!K™IdentifierÕ!Õ!!¨tokenService¬¬K™IdentifierÕ!"Õ!+©startTime¬¬^ÆCallExpressionÕ!.Õ!BQ∞MemberExpressionÕ!.Õ!@T≠NewExpressionÕ!.Õ!8K™IdentifierÕ!2Õ!6§DateêK™IdentifierÕ!9Õ!@ßgetTime¬¬ê¬O≥ExpressionStatementÕ!LÕ!àP¥AssignmentExpressionÕ!LÕ!á°=Q∞MemberExpressionÕ!LÕ!mQ∞MemberExpressionÕ!LÕ!`RÆThisExpressionÕ!LÕ!PK™IdentifierÕ!QÕ!`ØproviderService¬¬K™IdentifierÕ!aÕ!m¨providerInfo¬¬^ÆCallExpressionÕ!pÕ!áQ∞MemberExpressionÕ!pÕ!ÖK™IdentifierÕ!pÕ!x®responseK™IdentifierÕ!yÕ!Ö¨getProviders¬¬ê¬M∞MethodDefinitionÕ!ìÕ-¬¬K™IdentifierÕ!ôÕ!ù§link¶methodN≤FunctionExpressionÕ!ùÕ-¿¬¬√ëK™IdentifierÕ!ûÕ!¨ÆcredentialInfoLÆBlockStatementÕ!ÆÕ-ûU≥VariableDeclarationÕ!∏Õ$5ëV≤VariableDeclaratorÕ!ºÕ$4K™IdentifierÕ!ºÕ!æ¢s8X∞ObjectExpressionÕ!¡Õ$4ìY®PropertyÕ!œÕ"†¬¬¬SßLiteralÕ!œÕ!÷•phoneß'phone'N∑ArrowFunctionExpressionÕ!ÿÕ"†¿¬¬¬êLÆBlockStatementÕ!ﬁÕ"†íU≥VariableDeclarationÕ!Õ"ëV≤VariableDeclaratorÕ!ÙÕ"K™IdentifierÕ!ÙÕ!ˆ¢c9K™IdentifierÕ!˘Õ"ÆcredentialInfo£letWØReturnStatementÕ"Õ"í^ÆCallExpressionÕ" Õ"ëQ∞MemberExpressionÕ" Õ"UK™IdentifierÕ" Õ"1±PhoneAuthProviderK™IdentifierÕ"2Õ"UŸ#credentialWithPasswordAndVerifyCode¬¬îQ∞MemberExpressionÕ"VÕ"dK™IdentifierÕ"VÕ"X¢c9K™IdentifierÕ"YÕ"d´countryCode¬¬Q∞MemberExpressionÕ"fÕ"tK™IdentifierÕ"fÕ"h¢c9K™IdentifierÕ"iÕ"t´phoneNumber¬¬Q∞MemberExpressionÕ"vÕ"ÅK™IdentifierÕ"vÕ"x¢c9K™IdentifierÕ"yÕ"Å®password¬¬Q∞MemberExpressionÕ"ÉÕ"êK™IdentifierÕ"ÉÕ"Ö¢c9K™IdentifierÕ"ÜÕ"ê™verifyCode¬¬¬§initY®PropertyÕ"ÆÕ#i¬¬¬SßLiteralÕ"ÆÕ"µ•emailß'email'N∑ArrowFunctionExpressionÕ"∑Õ#i¿¬¬¬êLÆBlockStatementÕ"ΩÕ#iíU≥VariableDeclarationÕ"œÕ"ÁëV≤VariableDeclaratorÕ"”Õ"ÊK™IdentifierÕ"”Õ"’¢b9K™IdentifierÕ"ÿÕ"ÊÆcredentialInfo£letWØReturnStatementÕ"¯Õ#[^ÆCallExpressionÕ"ˇÕ#ZQ∞MemberExpressionÕ"ˇÕ#4K™IdentifierÕ"ˇÕ#±EmailAuthProviderK™IdentifierÕ#Õ#4Ÿ#credentialWithPasswordAndVerifyCode¬¬ìQ∞MemberExpressionÕ#5Õ#=K™IdentifierÕ#5Õ#7¢b9K™IdentifierÕ#8Õ#=•email¬¬Q∞MemberExpressionÕ#?Õ#JK™IdentifierÕ#?Õ#A¢b9K™IdentifierÕ#BÕ#J®password¬¬Q∞MemberExpressionÕ#LÕ#YK™IdentifierÕ#LÕ#N¢b9K™IdentifierÕ#OÕ#Y™verifyCode¬¬¬§initY®PropertyÕ#wÕ$*¬¬¬SßLiteralÕ#wÕ#}§hwid¶'hwid'N∑ArrowFunctionExpressionÕ#Õ$*¿¬¬√êLÆBlockStatementÕ#ãÕ$*íU≥VariableDeclarationÕ#ùÕ#’ëV≤VariableDeclaratorÕ#°Õ#‘K™IdentifierÕ#°Õ#©®authCodeWØAwaitExpressionÕ#¨Õ#‘^ÆCallExpressionÕ#≤Õ#‘Q∞MemberExpressionÕ#≤Õ#ÕK™IdentifierÕ#≤Õ#¡ØHwIdAuthManagerK™IdentifierÕ#¬Õ#Õ´getAuthCode¬¬ëSßLiteralÕ#ŒÕ#”¬•false¬£letWØReturnStatementÕ#ÊÕ$^ÆCallExpressionÕ#ÌÕ$Q∞MemberExpressionÕ#ÌÕ$K™IdentifierÕ#ÌÕ#˝∞HwIdAuthProviderK™IdentifierÕ#˛Õ$≥credentialWithToken¬¬ëK™IdentifierÕ$Õ$®authCode¬§init£letU≥VariableDeclarationÕ$>Õ$oëV≤VariableDeclaratorÕ$BÕ$nK™IdentifierÕ$BÕ$L™credentialWØAwaitExpressionÕ$OÕ$n^ÆCallExpressionÕ$UÕ$nQ∞MemberExpressionÕ$UÕ$lK™IdentifierÕ$UÕ$W¢s8Q∞MemberExpressionÕ$XÕ$kK™IdentifierÕ$XÕ$fÆcredentialInfoK™IdentifierÕ$gÕ$k§kind¬¬√¬ê¬£let_´IfStatementÕ$xÕ$Ï]ØUnaryExpressionÕ$|Õ$á°!√K™IdentifierÕ$}Õ$á™credentialLÆBlockStatementÕ$âÕ$ÏëWØReturnStatementÕ$óÕ$‚^ÆCallExpressionÕ$ûÕ$·Q∞MemberExpressionÕ$ûÕ$¨K™IdentifierÕ$ûÕ$•ßPromiseK™IdentifierÕ$¶Õ$¨¶reject¬¬ëT≠NewExpressionÕ$≠Õ$‡K™IdentifierÕ$±Õ$Ω¨AGCAuthErrorëQ∞MemberExpressionÕ$æÕ$ﬂK™IdentifierÕ$æÕ$Œ∞AGCAuthErrorCodeK™IdentifierÕ$œÕ$ﬂ∞USER_LINK_FAILED¬¬¬¿U≥VariableDeclarationÕ$ıÕ%ëV≤VariableDeclaratorÕ$˘Õ%K™IdentifierÕ$˘Õ$˚¢t8T≠NewExpressionÕ$˛Õ%K™IdentifierÕ%Õ%ØUserLinkRequestê£letU≥VariableDeclarationÕ%Õ%?ëV≤VariableDeclaratorÕ%!Õ%>K™IdentifierÕ%!Õ%#¢u8^ÆCallExpressionÕ%&Õ%>Q∞MemberExpressionÕ%&Õ%<K™IdentifierÕ%&Õ%0™credentialK™IdentifierÕ%1Õ%<´getProvider¬¬ê¬£let_´IfStatementÕ%HÕ&”\±LogicalExpressionÕ%LÕ%∆\∞BinaryExpressionÕ%LÕ%ÅK™IdentifierÕ%LÕ%N¢u8£===Q∞MemberExpressionÕ%SÕ%ÅK™IdentifierÕ%SÕ%røAGConnectAuthCredentialProviderK™IdentifierÕ%sÕ%ÅÆEmail_Provider¬¬¢||\∞BinaryExpressionÕ%ëÕ%∆K™IdentifierÕ%ëÕ%ì¢u8£===Q∞MemberExpressionÕ%òÕ%∆K™IdentifierÕ%òÕ%∑øAGConnectAuthCredentialProviderK™IdentifierÕ%∏Õ%∆ÆPhone_Provider¬¬LÆBlockStatementÕ%»Õ&GíO≥ExpressionStatementÕ%÷Õ&
^ÆCallExpressionÕ%÷Õ&	Q∞MemberExpressionÕ%÷Õ%·K™IdentifierÕ%÷Õ%‹¶LoggerK™IdentifierÕ%›Õ%·§info¬¬íK™IdentifierÕ%‚Õ%Â£TAGSßLiteralÕ%ÁÕ&øcredential is AccountCredentialŸ!'credential is AccountCredential'¬O≥ExpressionStatementÕ&Õ&=^ÆCallExpressionÕ&Õ&<Q∞MemberExpressionÕ&Õ&8K™IdentifierÕ&Õ&!™credentialK™IdentifierÕ&"Õ&8∂prepareUserLinkRequest¬¬ëK™IdentifierÕ&9Õ&;¢t8¬LÆBlockStatementÕ&UÕ&”íO≥ExpressionStatementÕ&cÕ&ñ^ÆCallExpressionÕ&cÕ&ïQ∞MemberExpressionÕ&cÕ&nK™IdentifierÕ&cÕ&i¶LoggerK™IdentifierÕ&jÕ&n§info¬¬íK™IdentifierÕ&oÕ&r£TAGSßLiteralÕ&tÕ&îæcredential is Oauth2CredentialŸ 'credential is Oauth2Credential'¬O≥ExpressionStatementÕ&£Õ&…^ÆCallExpressionÕ&£Õ&»Q∞MemberExpressionÕ&£Õ&ƒK™IdentifierÕ&£Õ&≠™credentialK™IdentifierÕ&ÆÕ&ƒ∂prepareUserLinkRequest¬¬ëK™IdentifierÕ&≈Õ&«¢t8¬U≥VariableDeclarationÕ&‹Õ&ÏëV≤VariableDeclaratorÕ&‡Õ&ÎK™IdentifierÕ&‡Õ&‰§selfRÆThisExpressionÕ&ÁÕ&Î£letU≥VariableDeclarationÕ&ıÕ'	ëV≤VariableDeclaratorÕ&˘Õ'K™IdentifierÕ&˘Õ&˚¢v8T≠NewExpressionÕ&˛Õ'K™IdentifierÕ'Õ'§Listê£letO≥ExpressionStatementÕ'Õ'8^ÆCallExpressionÕ'Õ'7Q∞MemberExpressionÕ'Õ'K™IdentifierÕ'Õ'¢v8K™IdentifierÕ'Õ'£add¬¬ë^ÆCallExpressionÕ'Õ'6Q∞MemberExpressionÕ'Õ'4RÆThisExpressionÕ'Õ'K™IdentifierÕ'Õ'4∂createTokenInterceptor¬¬ê¬¬U≥VariableDeclarationÕ'AÕ'ÜëV≤VariableDeclaratorÕ'EÕ'ÖK™IdentifierÕ'EÕ'G¢w8WØAwaitExpressionÕ'JÕ'Ö^ÆCallExpressionÕ'PÕ'ÖQ∞MemberExpressionÕ'PÕ'eQ∞MemberExpressionÕ'PÕ'`RÆThisExpressionÕ'PÕ'TK™IdentifierÕ'UÕ'`´authBackend¬¬K™IdentifierÕ'aÕ'e§post¬¬ìK™IdentifierÕ'fÕ'h¢t8T≠NewExpressionÕ'jÕ'ÄK™IdentifierÕ'nÕ'~∞UserLinkResponseêK™IdentifierÕ'ÇÕ'Ñ¢v8¬£letU≥VariableDeclarationÕ'èÕ'∑ëV≤VariableDeclaratorÕ'ìÕ'∂K™IdentifierÕ'ìÕ'õ®userInfo^ÆCallExpressionÕ'ûÕ'∂Q∞MemberExpressionÕ'ûÕ'¥K™IdentifierÕ'ûÕ'†¢w8K™IdentifierÕ'°Õ'¥≥getProviderUserInfo¬¬ê¬£let_´IfStatementÕ'¿Õ,ßK™IdentifierÕ'ƒÕ'Ã®userInfoLÆBlockStatementÕ'ŒÕ,ßïU≥VariableDeclarationÕ'‹Õ'ëV≤VariableDeclaratorÕ'‡Õ'ÔK™IdentifierÕ'‡Õ'„£mapT≠NewExpressionÕ'ÊÕ'ÔK™IdentifierÕ'ÍÕ'Ì£Mapê£letO≥ExpressionStatementÕ'˝Õ(^ÆCallExpressionÕ'˝Õ(Q∞MemberExpressionÕ'˝Õ(K™IdentifierÕ'˝Õ(§selfK™IdentifierÕ(Õ(≠userInfoToMap¬¬íK™IdentifierÕ(Õ(®userInfoK™IdentifierÕ(Õ(£map¬_´IfStatementÕ(,Õ(ÇQ∞MemberExpressionÕ(0Õ(>K™IdentifierÕ(0Õ(4§selfK™IdentifierÕ(5Õ(>©anonymous¬¬LÆBlockStatementÕ(@Õ(ÇëO≥ExpressionStatementÕ(RÕ(t^ÆCallExpressionÕ(RÕ(sQ∞MemberExpressionÕ(RÕ(nK™IdentifierÕ(RÕ(V§selfK™IdentifierÕ(WÕ(n∑updateAnonymousUserInfo¬¬ëK™IdentifierÕ(oÕ(r£map¬¿O≥ExpressionStatementÕ(èÕ(´^ÆCallExpressionÕ(èÕ(™Q∞MemberExpressionÕ(èÕ(•Q∞MemberExpressionÕ(èÕ(£K™IdentifierÕ(èÕ(ì§selfK™IdentifierÕ(îÕ(£ØproviderService¬¬K™IdentifierÕ(§Õ(•°t¬¬ëK™IdentifierÕ(¶Õ(©£map¬_´IfStatementÕ(∏Õ,ùQ∞MemberExpressionÕ(ºÕ(ÀK™IdentifierÕ(ºÕ(ø£mapSßLiteralÕ(¿Õ( ®provider™"provider"√¬LÆBlockStatementÕ(ÕÕ,ùìU≥VariableDeclarationÕ(ﬂÕ(¯ëV≤VariableDeclaratorÕ(„Õ(˜K™IdentifierÕ(„Õ(Â¢x8Q∞MemberExpressionÕ(ËÕ(˜K™IdentifierÕ(ËÕ(Î£mapSßLiteralÕ(ÏÕ(ˆ®provider™"provider"√¬£let_´IfStatementÕ)	Õ+\∞BinaryExpressionÕ)Õ)M^ÆCallExpressionÕ)Õ)FQ∞MemberExpressionÕ)Õ)DQ∞MemberExpressionÕ)Õ);K™IdentifierÕ)Õ),øAGConnectAuthCredentialProviderK™IdentifierÕ)-Õ);ÆEmail_Provider¬¬K™IdentifierÕ)<Õ)D®toString¬¬ê¬£===K™IdentifierÕ)KÕ)M¢x8LÆBlockStatementÕ)OÕ*íU≥VariableDeclarationÕ)eÕ){ëV≤VariableDeclaratorÕ)iÕ)zK™IdentifierÕ)iÕ)k¢a9Q∞MemberExpressionÕ)nÕ)zK™IdentifierÕ)nÕ)q£mapSßLiteralÕ)rÕ)y•emailß"email"√¬£let_´IfStatementÕ)êÕ*K™IdentifierÕ)îÕ)ñ¢a9LÆBlockStatementÕ)òÕ*íO≥ExpressionStatementÕ)≤Õ)¬P¥AssignmentExpressionÕ)≤Õ)¡°=Q∞MemberExpressionÕ)≤Õ)ºK™IdentifierÕ)≤Õ)∂§selfK™IdentifierÕ)∑Õ)º•email¬¬K™IdentifierÕ)øÕ)¡¢a9O≥ExpressionStatementÕ)€Õ)ÚP¥AssignmentExpressionÕ)€Õ)Ò°=Q∞MemberExpressionÕ)€Õ)ÌK™IdentifierÕ)€Õ)ﬂ§selfK™IdentifierÕ)‡Õ)Ì≠emailVerified¬¬SßLiteralÕ)Õ)Ò°1¿_´IfStatementÕ*0Õ+\∞BinaryExpressionÕ*4Õ*t^ÆCallExpressionÕ*4Õ*mQ∞MemberExpressionÕ*4Õ*kQ∞MemberExpressionÕ*4Õ*bK™IdentifierÕ*4Õ*SøAGConnectAuthCredentialProviderK™IdentifierÕ*TÕ*bÆPhone_Provider¬¬K™IdentifierÕ*cÕ*k®toString¬¬ê¬£===K™IdentifierÕ*rÕ*t¢x8LÆBlockStatementÕ*vÕ+íU≥VariableDeclarationÕ*åÕ*¢ëV≤VariableDeclaratorÕ*êÕ*°K™IdentifierÕ*êÕ*í¢z8Q∞MemberExpressionÕ*ïÕ*°K™IdentifierÕ*ïÕ*ò£mapSßLiteralÕ*ôÕ*†•phoneß"phone"√¬£let_´IfStatementÕ*∑Õ*ˇK™IdentifierÕ*ªÕ*Ω¢z8LÆBlockStatementÕ*øÕ*ˇëO≥ExpressionStatementÕ*ŸÕ*ÈP¥AssignmentExpressionÕ*ŸÕ*Ë°=Q∞MemberExpressionÕ*ŸÕ*„K™IdentifierÕ*ŸÕ*›§selfK™IdentifierÕ*ﬁÕ*„•phone¬¬K™IdentifierÕ*ÊÕ*Ë¢z8¿¿_´IfStatementÕ+"Õ,è\±LogicalExpressionÕ+&Õ+®\∞BinaryExpressionÕ+&Õ+[K™IdentifierÕ+&Õ+(¢u8£===Q∞MemberExpressionÕ+-Õ+[K™IdentifierÕ+-Õ+LøAGConnectAuthCredentialProviderK™IdentifierÕ+MÕ+[ÆEmail_Provider¬¬¢||\∞BinaryExpressionÕ+sÕ+®K™IdentifierÕ+sÕ+u¢u8£===Q∞MemberExpressionÕ+zÕ+®K™IdentifierÕ+zÕ+ôøAGConnectAuthCredentialProviderK™IdentifierÕ+öÕ+®ÆPhone_Provider¬¬LÆBlockStatementÕ+™Õ,èíU≥VariableDeclarationÕ+¿Õ+‘ëV≤VariableDeclaratorÕ+ƒÕ+”K™IdentifierÕ+ƒÕ+∆¢y8K™IdentifierÕ+…Õ+”™credential£let_´IfStatementÕ+ÈÕ,}\±LogicalExpressionÕ+ÌÕ,3\±LogicalExpressionÕ+ÌÕ,\∞BinaryExpressionÕ+ÌÕ,Q∞MemberExpressionÕ+ÌÕ+¯K™IdentifierÕ+ÌÕ+Ô¢y8K™IdentifierÕ+Õ+¯®password¬¬£!==K™IdentifierÕ+˝Õ,©undefined¢&&\∞BinaryExpressionÕ,
Õ,Q∞MemberExpressionÕ,
Õ,K™IdentifierÕ,
Õ,¢y8K™IdentifierÕ,Õ,®password¬¬¢!=SßLiteralÕ,Õ,¿§null¢&&\∞BinaryExpressionÕ,!Õ,3Q∞MemberExpressionÕ,!Õ,,K™IdentifierÕ,!Õ,#¢y8K™IdentifierÕ,$Õ,,®password¬¬£!==SßLiteralÕ,1Õ,3†¢''LÆBlockStatementÕ,5Õ,}ëO≥ExpressionStatementÕ,OÕ,gP¥AssignmentExpressionÕ,OÕ,f°=Q∞MemberExpressionÕ,OÕ,bK™IdentifierÕ,OÕ,S§selfK™IdentifierÕ,TÕ,bÆpasswordSetted¬¬SßLiteralÕ,eÕ,f°1¿¿¿¿O≥ExpressionStatementÕ,∞Õ,ÀWØAwaitExpressionÕ,∞Õ, ^ÆCallExpressionÕ,∂Õ, Q∞MemberExpressionÕ,∂Õ,»RÆThisExpressionÕ,∂Õ,∫K™IdentifierÕ,ªÕ,»≠syncToStorage¬¬ê¬WØReturnStatementÕ,‘Õ-^ÆCallExpressionÕ,€Õ-Q∞MemberExpressionÕ,€Õ,ÍK™IdentifierÕ,€Õ,‚ßPromiseK™IdentifierÕ,„Õ,Íßresolve¬¬ëT≠NewExpressionÕ,ÎÕ-K™IdentifierÕ,ÔÕ,ˇ∞SignInResultImplëRÆThisExpressionÕ- Õ-¬M∞MethodDefinitionÕ-Õ1C¬¬K™IdentifierÕ-Õ-¶unlink¶methodN≤FunctionExpressionÕ-Õ1C¿¬¬√ëK™IdentifierÕ-Õ-#§typeLÆBlockStatementÕ-%Õ1CùU≥VariableDeclarationÕ-/Õ-SëV≤VariableDeclaratorÕ-3Õ-RK™IdentifierÕ-3Õ-5¢p8^ÆCallExpressionÕ-8Õ-RQ∞MemberExpressionÕ-8Õ-LRÆThisExpressionÕ-8Õ-<K™IdentifierÕ-=Õ-LØconvertProvider¬¬ëK™IdentifierÕ-MÕ-Q§type¬£let_´IfStatementÕ-\Õ- ]ØUnaryExpressionÕ-`Õ-c°!√K™IdentifierÕ-aÕ-c¢p8LÆBlockStatementÕ-eÕ- ëWØReturnStatementÕ-sÕ-¿^ÆCallExpressionÕ-zÕ-øQ∞MemberExpressionÕ-zÕ-àK™IdentifierÕ-zÕ-ÅßPromiseK™IdentifierÕ-ÇÕ-à¶reject¬¬ëT≠NewExpressionÕ-âÕ-æK™IdentifierÕ-çÕ-ô¨AGCAuthErrorëQ∞MemberExpressionÕ-öÕ-ΩK™IdentifierÕ-öÕ-™∞AGCAuthErrorCodeK™IdentifierÕ-´Õ-Ω≤USER_UNLINK_FAILED¬¬¬¿U≥VariableDeclarationÕ-”Õ-ÙëV≤VariableDeclaratorÕ-◊Õ-ÛK™IdentifierÕ-◊Õ-Ÿ¢q8T≠NewExpressionÕ-‹Õ-ÛK™IdentifierÕ-‡Õ-Ò±UserUnlinkRequestê£letO≥ExpressionStatementÕ-˝Õ.^ÆCallExpressionÕ-˝Õ.Q∞MemberExpressionÕ-˝Õ.K™IdentifierÕ-˝Õ-ˇ¢q8K™IdentifierÕ. Õ.´setProvider¬¬ëK™IdentifierÕ.Õ.¢p8¬U≥VariableDeclarationÕ.Õ.-ëV≤VariableDeclaratorÕ.Õ.,K™IdentifierÕ.Õ.¢r8T≠NewExpressionÕ."Õ.,K™IdentifierÕ.&Õ.*§Listê£letO≥ExpressionStatementÕ.6Õ.\^ÆCallExpressionÕ.6Õ.[Q∞MemberExpressionÕ.6Õ.<K™IdentifierÕ.6Õ.8¢r8K™IdentifierÕ.9Õ.<£add¬¬ë^ÆCallExpressionÕ.=Õ.ZQ∞MemberExpressionÕ.=Õ.XRÆThisExpressionÕ.=Õ.AK™IdentifierÕ.BÕ.X∂createTokenInterceptor¬¬ê¬¬O≥ExpressionStatementÕ.eÕ.£WØAwaitExpressionÕ.eÕ.¢^ÆCallExpressionÕ.kÕ.¢Q∞MemberExpressionÕ.kÕ.ÄQ∞MemberExpressionÕ.kÕ.{RÆThisExpressionÕ.kÕ.oK™IdentifierÕ.pÕ.{´authBackend¬¬K™IdentifierÕ.|Õ.Ä§post¬¬ìK™IdentifierÕ.ÅÕ.É¢q8T≠NewExpressionÕ.ÖÕ.ùK™IdentifierÕ.âÕ.õ≤UserUnlinkResponseêK™IdentifierÕ.üÕ.°¢r8¬O≥ExpressionStatementÕ.¨Õ.“^ÆCallExpressionÕ.¨Õ.—Q∞MemberExpressionÕ.¨Õ.¬Q∞MemberExpressionÕ.¨Õ.¿RÆThisExpressionÕ.¨Õ.∞K™IdentifierÕ.±Õ.¿ØproviderService¬¬K™IdentifierÕ.¡Õ.¬°u¬¬ë^ÆCallExpressionÕ.√Õ.–Q∞MemberExpressionÕ.√Õ.ŒK™IdentifierÕ.√Õ.≈¢p8K™IdentifierÕ.∆Õ.Œ®toString¬¬ê¬¬_´IfStatementÕ.€Õ/b\∞BinaryExpressionÕ.ﬂÕ/K™IdentifierÕ.ﬂÕ.·¢p8£===Q∞MemberExpressionÕ.ÊÕ/K™IdentifierÕ.ÊÕ/øAGConnectAuthCredentialProviderK™IdentifierÕ/Õ/ÆEmail_Provider¬¬LÆBlockStatementÕ/Õ/bíO≥ExpressionStatementÕ/$Õ/4P¥AssignmentExpressionÕ/$Õ/3°=Q∞MemberExpressionÕ/$Õ/.RÆThisExpressionÕ/$Õ/(K™IdentifierÕ/)Õ/.•email¬¬SßLiteralÕ/1Õ/3†¢''O≥ExpressionStatementÕ/AÕ/XP¥AssignmentExpressionÕ/AÕ/W°=Q∞MemberExpressionÕ/AÕ/SRÆThisExpressionÕ/AÕ/EK™IdentifierÕ/FÕ/S≠emailVerified¬¬SßLiteralÕ/VÕ/W °0¿_´IfStatementÕ/kÕ/Œ\∞BinaryExpressionÕ/oÕ/§K™IdentifierÕ/oÕ/q¢p8£===Q∞MemberExpressionÕ/vÕ/§K™IdentifierÕ/vÕ/ïøAGConnectAuthCredentialProviderK™IdentifierÕ/ñÕ/§ÆPhone_Provider¬¬LÆBlockStatementÕ/¶Õ/ŒëO≥ExpressionStatementÕ/¥Õ/ƒP¥AssignmentExpressionÕ/¥Õ/√°=Q∞MemberExpressionÕ/¥Õ/æRÆThisExpressionÕ/¥Õ/∏K™IdentifierÕ/πÕ/æ•phone¬¬SßLiteralÕ/¡Õ/√†¢''¿_´IfStatementÕ/◊Õ0›\±LogicalExpressionÕ/€Õ0´\∞BinaryExpressionÕ/€Õ0;^ÆCallExpressionÕ/€Õ0-Q∞MemberExpressionÕ/€Õ/ÚQ∞MemberExpressionÕ/€Õ/ÔRÆThisExpressionÕ/€Õ/ﬂK™IdentifierÕ/‡Õ/ÔØproviderService¬¬K™IdentifierÕ/Õ/Ú¢a1¬¬ë^ÆCallExpressionÕ/ÛÕ0,Q∞MemberExpressionÕ/ÛÕ0*Q∞MemberExpressionÕ/ÛÕ0!K™IdentifierÕ/ÛÕ0øAGConnectAuthCredentialProviderK™IdentifierÕ0Õ0!ÆEmail_Provider¬¬K™IdentifierÕ0"Õ0*®toString¬¬ê¬¬£===K™IdentifierÕ02Õ0;©undefined¢&&\∞BinaryExpressionÕ0KÕ0´^ÆCallExpressionÕ0KÕ0ùQ∞MemberExpressionÕ0KÕ0bQ∞MemberExpressionÕ0KÕ0_RÆThisExpressionÕ0KÕ0OK™IdentifierÕ0PÕ0_ØproviderService¬¬K™IdentifierÕ0`Õ0b¢a1¬¬ë^ÆCallExpressionÕ0cÕ0úQ∞MemberExpressionÕ0cÕ0öQ∞MemberExpressionÕ0cÕ0ëK™IdentifierÕ0cÕ0ÇøAGConnectAuthCredentialProviderK™IdentifierÕ0ÉÕ0ëÆPhone_Provider¬¬K™IdentifierÕ0íÕ0ö®toString¬¬ê¬¬£===K™IdentifierÕ0¢Õ0´©undefinedLÆBlockStatementÕ0≠Õ0›ëO≥ExpressionStatementÕ0ªÕ0”P¥AssignmentExpressionÕ0ªÕ0“°=Q∞MemberExpressionÕ0ªÕ0ŒRÆThisExpressionÕ0ªÕ0øK™IdentifierÕ0¿Õ0ŒÆpasswordSetted¬¬SßLiteralÕ0—Õ0“ °0¿O≥ExpressionStatementÕ0ÊÕ1WØAwaitExpressionÕ0ÊÕ1 ^ÆCallExpressionÕ0ÏÕ1 Q∞MemberExpressionÕ0ÏÕ0˛RÆThisExpressionÕ0ÏÕ0K™IdentifierÕ0ÒÕ0˛≠syncToStorage¬¬ê¬WØReturnStatementÕ1
Õ1=^ÆCallExpressionÕ1Õ1<Q∞MemberExpressionÕ1Õ1 K™IdentifierÕ1Õ1ßPromiseK™IdentifierÕ1Õ1 ßresolve¬¬ëT≠NewExpressionÕ1!Õ1;K™IdentifierÕ1%Õ15∞SignInResultImplëRÆThisExpressionÕ16Õ1:¬M∞MethodDefinitionÕ1HÕ3∏¬¬K™IdentifierÕ1NÕ1Y´updateEmail¶methodN≤FunctionExpressionÕ1YÕ3∏¿¬¬√ëK™IdentifierÕ1ZÕ1\¢m8LÆBlockStatementÕ1^Õ3∏ú_´IfStatementÕ1hÕ1\±LogicalExpressionÕ1lÕ1á]ØUnaryExpressionÕ1lÕ1u°!√Q∞MemberExpressionÕ1mÕ1uK™IdentifierÕ1mÕ1o¢m8K™IdentifierÕ1pÕ1u•email¬¬¢||]ØUnaryExpressionÕ1yÕ1á°!√Q∞MemberExpressionÕ1zÕ1áK™IdentifierÕ1zÕ1|¢m8K™IdentifierÕ1}Õ1á™verifyCode¬¬LÆBlockStatementÕ1âÕ1ëWØReturnStatementÕ1óÕ1Ê^ÆCallExpressionÕ1ûÕ1ÂQ∞MemberExpressionÕ1ûÕ1¨K™IdentifierÕ1ûÕ1•ßPromiseK™IdentifierÕ1¶Õ1¨¶reject¬¬ëT≠NewExpressionÕ1≠Õ1‰K™IdentifierÕ1±Õ1Ω¨AGCAuthErrorëQ∞MemberExpressionÕ1æÕ1„K™IdentifierÕ1æÕ1Œ∞AGCAuthErrorCodeK™IdentifierÕ1œÕ1„¥FAIL_TO_UPDATE_EMAIL¬¬¬¿U≥VariableDeclarationÕ1˘Õ2ëV≤VariableDeclaratorÕ1˝Õ2K™IdentifierÕ1˝Õ1ˇ¢n8T≠NewExpressionÕ2Õ2K™IdentifierÕ2Õ2≤UpdateEmailRequestê£letO≥ExpressionStatementÕ2$Õ2=^ÆCallExpressionÕ2$Õ2<Q∞MemberExpressionÕ2$Õ22K™IdentifierÕ2$Õ2&¢n8K™IdentifierÕ2'Õ22´setNewEmail¬¬ëQ∞MemberExpressionÕ23Õ2;K™IdentifierÕ23Õ25¢m8K™IdentifierÕ26Õ2;•email¬¬¬O≥ExpressionStatementÕ2FÕ2i^ÆCallExpressionÕ2FÕ2hQ∞MemberExpressionÕ2FÕ2YK™IdentifierÕ2FÕ2H¢n8K™IdentifierÕ2IÕ2Y∞setNewVerifyCode¬¬ëQ∞MemberExpressionÕ2ZÕ2gK™IdentifierÕ2ZÕ2\¢m8K™IdentifierÕ2]Õ2g™verifyCode¬¬¬O≥ExpressionStatementÕ2rÕ2Ü^ÆCallExpressionÕ2rÕ2ÖQ∞MemberExpressionÕ2rÕ2|K™IdentifierÕ2rÕ2t¢n8K™IdentifierÕ2uÕ2|ßsetLang¬¬ëQ∞MemberExpressionÕ2}Õ2ÑK™IdentifierÕ2}Õ2¢m8K™IdentifierÕ2ÄÕ2Ñ§lang¬¬¬U≥VariableDeclarationÕ2èÕ2£ëV≤VariableDeclaratorÕ2ìÕ2¢K™IdentifierÕ2ìÕ2ï¢o8T≠NewExpressionÕ2òÕ2¢K™IdentifierÕ2úÕ2†§Listê£letO≥ExpressionStatementÕ2¨Õ2“^ÆCallExpressionÕ2¨Õ2—Q∞MemberExpressionÕ2¨Õ2≤K™IdentifierÕ2¨Õ2Æ¢o8K™IdentifierÕ2ØÕ2≤£add¬¬ë^ÆCallExpressionÕ2≥Õ2–Q∞MemberExpressionÕ2≥Õ2ŒRÆThisExpressionÕ2≥Õ2∑K™IdentifierÕ2∏Õ2Œ∂createTokenInterceptor¬¬ê¬¬O≥ExpressionStatementÕ2€Õ3WØAwaitExpressionÕ2€Õ3^ÆCallExpressionÕ2·Õ3Q∞MemberExpressionÕ2·Õ2ıQ∞MemberExpressionÕ2·Õ2ÒRÆThisExpressionÕ2·Õ2ÂK™IdentifierÕ2ÊÕ2Ò´authBackend¬¬K™IdentifierÕ2ÚÕ2ı£put¬¬ìK™IdentifierÕ2ˆÕ2¯¢n8T≠NewExpressionÕ2˙Õ3K™IdentifierÕ2˛Õ3≥UpdateEmailResponseêK™IdentifierÕ3Õ3¢o8¬O≥ExpressionStatementÕ3"Õ38P¥AssignmentExpressionÕ3"Õ37°=Q∞MemberExpressionÕ3"Õ3,RÆThisExpressionÕ3"Õ3&K™IdentifierÕ3'Õ3,•email¬¬Q∞MemberExpressionÕ3/Õ37K™IdentifierÕ3/Õ31¢m8K™IdentifierÕ32Õ37•email¬¬O≥ExpressionStatementÕ3AÕ3l^ÆCallExpressionÕ3AÕ3kQ∞MemberExpressionÕ3AÕ3aQ∞MemberExpressionÕ3AÕ3URÆThisExpressionÕ3AÕ3EK™IdentifierÕ3FÕ3UØproviderService¬¬K™IdentifierÕ3VÕ3a´updateEmail¬¬ëQ∞MemberExpressionÕ3bÕ3jK™IdentifierÕ3bÕ3d¢m8K™IdentifierÕ3eÕ3j•email¬¬¬O≥ExpressionStatementÕ3uÕ3êWØAwaitExpressionÕ3uÕ3è^ÆCallExpressionÕ3{Õ3èQ∞MemberExpressionÕ3{Õ3çRÆThisExpressionÕ3{Õ3K™IdentifierÕ3ÄÕ3ç≠syncToStorage¬¬ê¬WØReturnStatementÕ3ôÕ3≤^ÆCallExpressionÕ3†Õ3±Q∞MemberExpressionÕ3†Õ3ØK™IdentifierÕ3†Õ3ßßPromiseK™IdentifierÕ3®Õ3Øßresolve¬¬ê¬M∞MethodDefinitionÕ3ΩÕ6¬¬K™IdentifierÕ3√Õ3Œ´updatePhone¶methodN≤FunctionExpressionÕ3ŒÕ6¿¬¬√ëK™IdentifierÕ3œÕ3—¢i8LÆBlockStatementÕ3”Õ6ùU≥VariableDeclarationÕ3›Õ3ˇëV≤VariableDeclaratorÕ3·Õ3˛K™IdentifierÕ3·Õ3„¢j8T≠NewExpressionÕ3ÊÕ3˛K™IdentifierÕ3ÍÕ3¸≤UpdatePhoneRequestê£letO≥ExpressionStatementÕ4Õ4(P¥AssignmentExpressionÕ4Õ4'°=Q∞MemberExpressionÕ4Õ4K™IdentifierÕ4Õ4
¢j8K™IdentifierÕ4Õ4´countryCode¬¬Q∞MemberExpressionÕ4Õ4'K™IdentifierÕ4Õ4¢i8K™IdentifierÕ4Õ4'´countryCode¬¬O≥ExpressionStatementÕ41Õ4NP¥AssignmentExpressionÕ41Õ4M°=Q∞MemberExpressionÕ41Õ4<K™IdentifierÕ41Õ43¢j8K™IdentifierÕ44Õ4<®newPhone¬¬Q∞MemberExpressionÕ4?Õ4MK™IdentifierÕ4?Õ4A¢i8K™IdentifierÕ4BÕ4M´phoneNumber¬¬O≥ExpressionStatementÕ4WÕ4xP¥AssignmentExpressionÕ4WÕ4w°=Q∞MemberExpressionÕ4WÕ4gK™IdentifierÕ4WÕ4Y¢j8K™IdentifierÕ4ZÕ4g≠newVerifyCode¬¬Q∞MemberExpressionÕ4jÕ4wK™IdentifierÕ4jÕ4l¢i8K™IdentifierÕ4mÕ4w™verifyCode¬¬O≥ExpressionStatementÕ4ÅÕ4ìP¥AssignmentExpressionÕ4ÅÕ4í°=Q∞MemberExpressionÕ4ÅÕ4àK™IdentifierÕ4ÅÕ4É¢j8K™IdentifierÕ4ÑÕ4à§lang¬¬Q∞MemberExpressionÕ4ãÕ4íK™IdentifierÕ4ãÕ4ç¢i8K™IdentifierÕ4éÕ4í§lang¬¬U≥VariableDeclarationÕ4úÕ4∞ëV≤VariableDeclaratorÕ4†Õ4ØK™IdentifierÕ4†Õ4¢¢k8T≠NewExpressionÕ4•Õ4ØK™IdentifierÕ4©Õ4≠§Listê£letO≥ExpressionStatementÕ4πÕ4ﬂ^ÆCallExpressionÕ4πÕ4ﬁQ∞MemberExpressionÕ4πÕ4øK™IdentifierÕ4πÕ4ª¢k8K™IdentifierÕ4ºÕ4ø£add¬¬ë^ÆCallExpressionÕ4¿Õ4›Q∞MemberExpressionÕ4¿Õ4€RÆThisExpressionÕ4¿Õ4ƒK™IdentifierÕ4≈Õ4€∂createTokenInterceptor¬¬ê¬¬O≥ExpressionStatementÕ4ËÕ5&WØAwaitExpressionÕ4ËÕ5%^ÆCallExpressionÕ4ÓÕ5%Q∞MemberExpressionÕ4ÓÕ5Q∞MemberExpressionÕ4ÓÕ4˛RÆThisExpressionÕ4ÓÕ4ÚK™IdentifierÕ4ÛÕ4˛´authBackend¬¬K™IdentifierÕ4ˇÕ5£put¬¬ìK™IdentifierÕ5Õ5¢j8T≠NewExpressionÕ5Õ5 K™IdentifierÕ5Õ5≥UpdatePhoneResponseêK™IdentifierÕ5"Õ5$¢k8¬U≥VariableDeclarationÕ5/Õ5qëV≤VariableDeclaratorÕ53Õ5pK™IdentifierÕ53Õ55¢l8^ÆCallExpressionÕ58Õ5pQ∞MemberExpressionÕ58Õ5PK™IdentifierÕ58Õ5A©PhoneUtilK™IdentifierÕ5BÕ5PÆcombinatePhone¬¬íQ∞MemberExpressionÕ5QÕ5_K™IdentifierÕ5QÕ5S¢i8K™IdentifierÕ5TÕ5_´countryCode¬¬Q∞MemberExpressionÕ5aÕ5oK™IdentifierÕ5aÕ5c¢i8K™IdentifierÕ5dÕ5o´phoneNumber¬¬¬£letO≥ExpressionStatementÕ5zÕ5äP¥AssignmentExpressionÕ5zÕ5â°=Q∞MemberExpressionÕ5zÕ5ÑRÆThisExpressionÕ5zÕ5~K™IdentifierÕ5Õ5Ñ•phone¬¬K™IdentifierÕ5áÕ5â¢l8O≥ExpressionStatementÕ5ìÕ5∏^ÆCallExpressionÕ5ìÕ5∑Q∞MemberExpressionÕ5ìÕ5≥Q∞MemberExpressionÕ5ìÕ5ßRÆThisExpressionÕ5ìÕ5óK™IdentifierÕ5òÕ5ßØproviderService¬¬K™IdentifierÕ5®Õ5≥´updatePhone¬¬ëK™IdentifierÕ5¥Õ5∂¢l8¬O≥ExpressionStatementÕ5¡Õ5‹WØAwaitExpressionÕ5¡Õ5€^ÆCallExpressionÕ5«Õ5€Q∞MemberExpressionÕ5«Õ5ŸRÆThisExpressionÕ5«Õ5ÀK™IdentifierÕ5ÃÕ5Ÿ≠syncToStorage¬¬ê¬WØReturnStatementÕ5ÂÕ5˛^ÆCallExpressionÕ5ÏÕ5˝Q∞MemberExpressionÕ5ÏÕ5˚K™IdentifierÕ5ÏÕ5ÛßPromiseK™IdentifierÕ5ÙÕ5˚ßresolve¬¬ê¬M∞MethodDefinitionÕ6	Õ8¬¬K™IdentifierÕ6Õ6ÆupdatePassword¶methodN≤FunctionExpressionÕ6Õ8¿¬¬√ëK™IdentifierÕ6Õ6 ¢e8LÆBlockStatementÕ6"Õ8öU≥VariableDeclarationÕ6,Õ6[ëV≤VariableDeclaratorÕ60Õ6ZK™IdentifierÕ60Õ62¢f8^ÆCallExpressionÕ65Õ6ZQ∞MemberExpressionÕ65Õ6IRÆThisExpressionÕ65Õ69K™IdentifierÕ6:Õ6IØconvertProvider¬¬ëQ∞MemberExpressionÕ6JÕ6YK™IdentifierÕ6JÕ6L¢e8K™IdentifierÕ6MÕ6Y¨providerType¬¬¬£letU≥VariableDeclarationÕ6dÕ6âëV≤VariableDeclaratorÕ6hÕ6àK™IdentifierÕ6hÕ6j¢g8T≠NewExpressionÕ6mÕ6àK™IdentifierÕ6qÕ6ÜµUpdatePasswordRequestê£letO≥ExpressionStatementÕ6íÕ6•^ÆCallExpressionÕ6íÕ6§Q∞MemberExpressionÕ6íÕ6†K™IdentifierÕ6íÕ6î¢g8K™IdentifierÕ6ïÕ6†´setProvider¬¬ëK™IdentifierÕ6°Õ6£¢f8¬O≥ExpressionStatementÕ6ÆÕ6Õ^ÆCallExpressionÕ6ÆÕ6ÃQ∞MemberExpressionÕ6ÆÕ6øK™IdentifierÕ6ÆÕ6∞¢g8K™IdentifierÕ6±Õ6øÆsetNewPassword¬¬ëQ∞MemberExpressionÕ6¿Õ6ÀK™IdentifierÕ6¿Õ6¬¢e8K™IdentifierÕ6√Õ6À®password¬¬¬O≥ExpressionStatementÕ6÷Õ6˘^ÆCallExpressionÕ6÷Õ6¯Q∞MemberExpressionÕ6÷Õ6ÈK™IdentifierÕ6÷Õ6ÿ¢g8K™IdentifierÕ6ŸÕ6È∞setNewverifyCode¬¬ëQ∞MemberExpressionÕ6ÍÕ6˜K™IdentifierÕ6ÍÕ6Ï¢e8K™IdentifierÕ6ÌÕ6˜™verifyCode¬¬¬U≥VariableDeclarationÕ7Õ7ëV≤VariableDeclaratorÕ7Õ7K™IdentifierÕ7Õ7¢h8T≠NewExpressionÕ7Õ7K™IdentifierÕ7Õ7§Listê£letO≥ExpressionStatementÕ7Õ7E^ÆCallExpressionÕ7Õ7DQ∞MemberExpressionÕ7Õ7%K™IdentifierÕ7Õ7!¢h8K™IdentifierÕ7"Õ7%£add¬¬ë^ÆCallExpressionÕ7&Õ7CQ∞MemberExpressionÕ7&Õ7ARÆThisExpressionÕ7&Õ7*K™IdentifierÕ7+Õ7A∂createTokenInterceptor¬¬ê¬¬O≥ExpressionStatementÕ7NÕ7èWØAwaitExpressionÕ7NÕ7é^ÆCallExpressionÕ7TÕ7éQ∞MemberExpressionÕ7TÕ7hQ∞MemberExpressionÕ7TÕ7dRÆThisExpressionÕ7TÕ7XK™IdentifierÕ7YÕ7d´authBackend¬¬K™IdentifierÕ7eÕ7h£put¬¬ìK™IdentifierÕ7iÕ7k¢g8T≠NewExpressionÕ7mÕ7âK™IdentifierÕ7qÕ7á∂UpdatePasswordResponseêK™IdentifierÕ7ãÕ7ç¢h8¬_´IfStatementÕ7òÕ7Á\∞BinaryExpressionÕ7úÕ7µQ∞MemberExpressionÕ7úÕ7ØRÆThisExpressionÕ7úÕ7†K™IdentifierÕ7°Õ7ØÆpasswordSetted¬¬£===SßLiteralÕ7¥Õ7µ °0LÆBlockStatementÕ7∑Õ7ÁëO≥ExpressionStatementÕ7≈Õ7›P¥AssignmentExpressionÕ7≈Õ7‹°=Q∞MemberExpressionÕ7≈Õ7ÿRÆThisExpressionÕ7≈Õ7…K™IdentifierÕ7 Õ7ÿÆpasswordSetted¬¬SßLiteralÕ7€Õ7‹°1¿WØReturnStatementÕ7Õ8	^ÆCallExpressionÕ7˜Õ8Q∞MemberExpressionÕ7˜Õ8K™IdentifierÕ7˜Õ7˛ßPromiseK™IdentifierÕ7ˇÕ8ßresolve¬¬ê¬M∞MethodDefinitionÕ8Õ8é¬¬K™IdentifierÕ8Õ8!ßdispose¶methodN≤FunctionExpressionÕ8!Õ8é¿¬¬√êLÆBlockStatementÕ8$Õ8éíO≥ExpressionStatementÕ8.Õ8VWØAwaitExpressionÕ8.Õ8UOØChainExpressionÕ84Õ8U^ÆCallExpressionÕ84Õ8UQ∞MemberExpressionÕ84Õ8OQ∞MemberExpressionÕ84Õ8ERÆThisExpressionÕ84Õ88K™IdentifierÕ89Õ8E¨storeManager¬¬K™IdentifierÕ8GÕ8O®saveUser¬√ëSßLiteralÕ8PÕ8T¿§null¬O≥ExpressionStatementÕ8_Õ8àWØAwaitExpressionÕ8_Õ8á^ÆCallExpressionÕ8eÕ8áQ∞MemberExpressionÕ8eÕ8ÖQ∞MemberExpressionÕ8eÕ8vRÆThisExpressionÕ8eÕ8iK™IdentifierÕ8jÕ8v¨storeManager¬¬K™IdentifierÕ8wÕ8ÖÆdeleteUserInfo¬¬ê¬M∞MethodDefinitionÕ8ìÕ9*¬¬K™IdentifierÕ8ôÕ8¶≠syncToStorage¶methodN≤FunctionExpressionÕ8¶Õ9*¿¬¬√êLÆBlockStatementÕ8©Õ9*ìU≥VariableDeclarationÕ8≥Õ8œëV≤VariableDeclaratorÕ8∑Õ8ŒK™IdentifierÕ8∑Õ8ª§info^ÆCallExpressionÕ8æÕ8ŒQ∞MemberExpressionÕ8æÕ8ÃRÆThisExpressionÕ8æÕ8¬K™IdentifierÕ8√Õ8Ã©toRawData¬¬ê¬£letU≥VariableDeclarationÕ8ÿÕ8ˆëV≤VariableDeclaratorÕ8‹Õ8ıK™IdentifierÕ8‹Õ8ﬁ¢d8^ÆCallExpressionÕ8·Õ8ıQ∞MemberExpressionÕ8·Õ8ÔK™IdentifierÕ8·Õ8Â§JSONK™IdentifierÕ8ÊÕ8Ô©stringify¬¬ëK™IdentifierÕ8Õ8Ù§info¬£letO≥ExpressionStatementÕ8ˇÕ9$WØAwaitExpressionÕ8ˇÕ9#^ÆCallExpressionÕ9Õ9#Q∞MemberExpressionÕ9Õ9Q∞MemberExpressionÕ9Õ9RÆThisExpressionÕ9Õ9	K™IdentifierÕ9
Õ9¨storeManager¬¬K™IdentifierÕ9Õ9®saveUser¬¬ëK™IdentifierÕ9 Õ9"¢d8¬M∞MethodDefinitionÕ9/Õ9~¬¬K™IdentifierÕ9/Õ9E∂createTokenInterceptor¶methodN≤FunctionExpressionÕ9EÕ9~¿¬¬¬êLÆBlockStatementÕ9HÕ9~ëWØReturnStatementÕ9RÕ9xT≠NewExpressionÕ9YÕ9wK™IdentifierÕ9]Õ9q¥AuthTokenInterceptorëRÆThisExpressionÕ9rÕ9vM∞MethodDefinitionÕ9ÉÕ;#¬¬K™IdentifierÕ9ÉÕ9ö∑updateAnonymousUserInfo¶methodN≤FunctionExpressionÕ9öÕ;#¿¬¬¬ëK™IdentifierÕ9õÕ9ü§infoLÆBlockStatementÕ9°Õ;#ñO≥ExpressionStatementÕ9´Õ9¬P¥AssignmentExpressionÕ9´Õ9¡°=Q∞MemberExpressionÕ9´Õ9πRÆThisExpressionÕ9´Õ9ØK™IdentifierÕ9∞Õ9π©anonymous¬¬SßLiteralÕ9ºÕ9¡¬•falseO≥ExpressionStatementÕ9ÀÕ:%P¥AssignmentExpressionÕ9ÀÕ:$°=Q∞MemberExpressionÕ9ÀÕ9€RÆThisExpressionÕ9ÀÕ9œK™IdentifierÕ9–Õ9€´displayName¬¬_µConditionalExpressionÕ9ﬁÕ:$Q∞MemberExpressionÕ9ﬁÕ9ÒK™IdentifierÕ9ﬁÕ9‚§infoSßLiteralÕ9„Õ9´displayName≠"displayName"√¬Q∞MemberExpressionÕ: Õ:K™IdentifierÕ: Õ:§infoSßLiteralÕ:Õ:´displayName≠"displayName"√¬SßLiteralÕ:"Õ:$†¢''O≥ExpressionStatementÕ:.Õ:gP¥AssignmentExpressionÕ:.Õ:f°=Q∞MemberExpressionÕ:.Õ:;RÆThisExpressionÕ:.Õ:2K™IdentifierÕ:3Õ:;®photoUrl¬¬_µConditionalExpressionÕ:>Õ:fQ∞MemberExpressionÕ:>Õ:NK™IdentifierÕ:>Õ:B§infoSßLiteralÕ:CÕ:M®photoUrl™"photoUrl"√¬Q∞MemberExpressionÕ:QÕ:aK™IdentifierÕ:QÕ:U§infoSßLiteralÕ:VÕ:`®photoUrl™"photoUrl"√¬SßLiteralÕ:dÕ:f†¢''O≥ExpressionStatementÕ:pÕ:†P¥AssignmentExpressionÕ:pÕ:ü°=Q∞MemberExpressionÕ:pÕ:zRÆThisExpressionÕ:pÕ:tK™IdentifierÕ:uÕ:z•email¬¬_µConditionalExpressionÕ:}Õ:üQ∞MemberExpressionÕ:}Õ:äK™IdentifierÕ:}Õ:Å§infoSßLiteralÕ:ÇÕ:â•emailß"email"√¬Q∞MemberExpressionÕ:çÕ:öK™IdentifierÕ:çÕ:ë§infoSßLiteralÕ:íÕ:ô•emailß"email"√¬SßLiteralÕ:ùÕ:ü†¢''O≥ExpressionStatementÕ:©Õ:ŸP¥AssignmentExpressionÕ:©Õ:ÿ°=Q∞MemberExpressionÕ:©Õ:≥RÆThisExpressionÕ:©Õ:≠K™IdentifierÕ:ÆÕ:≥•phone¬¬_µConditionalExpressionÕ:∂Õ:ÿQ∞MemberExpressionÕ:∂Õ:√K™IdentifierÕ:∂Õ:∫§infoSßLiteralÕ:ªÕ:¬•phoneß"phone"√¬Q∞MemberExpressionÕ:∆Õ:”K™IdentifierÕ:∆Õ: §infoSßLiteralÕ:ÀÕ:“•phoneß"phone"√¬SßLiteralÕ:÷Õ:ÿ†¢''O≥ExpressionStatementÕ:‚Õ;P¥AssignmentExpressionÕ:‚Õ;°=Q∞MemberExpressionÕ:‚Õ:ÒRÆThisExpressionÕ:‚Õ:ÊK™IdentifierÕ:ÁÕ:Ò™providerId¬¬_µConditionalExpressionÕ:ÙÕ;Q∞MemberExpressionÕ:ÙÕ;K™IdentifierÕ:ÙÕ:¯§infoSßLiteralÕ:˘Õ;®provider™"provider"√¬Q∞MemberExpressionÕ;Õ;K™IdentifierÕ;Õ;§infoSßLiteralÕ;Õ;®provider™"provider"√¬SßLiteralÕ;Õ;†¢''M∞MethodDefinitionÕ;(Õ>E¬¬K™IdentifierÕ;(Õ;5≠userInfoToMap¶methodN≤FunctionExpressionÕ;5Õ>E¿¬¬¬íK™IdentifierÕ;6Õ;>®userInfoK™IdentifierÕ;@Õ;C£mapLÆBlockStatementÕ;EÕ>Eó_´IfStatementÕ;OÕ;®^ÆCallExpressionÕ;SÕ;dQ∞MemberExpressionÕ;SÕ;bK™IdentifierÕ;SÕ;[®userInfoK™IdentifierÕ;\Õ;b¶getUid¬¬ê¬LÆBlockStatementÕ;fÕ;®ëO≥ExpressionStatementÕ;tÕ;ûP¥AssignmentExpressionÕ;tÕ;ù°=Q∞MemberExpressionÕ;tÕ;~K™IdentifierÕ;tÕ;w£mapSßLiteralÕ;xÕ;}£uid•"uid"√¬^ÆCallExpressionÕ;ÅÕ;ùQ∞MemberExpressionÕ;ÅÕ;õ^ÆCallExpressionÕ;ÅÕ;íQ∞MemberExpressionÕ;ÅÕ;êK™IdentifierÕ;ÅÕ;â®userInfoK™IdentifierÕ;äÕ;ê¶getUid¬¬ê¬K™IdentifierÕ;ìÕ;õ®toString¬¬ê¬¿_´IfStatementÕ;±Õ<"^ÆCallExpressionÕ;µÕ;ŒQ∞MemberExpressionÕ;µÕ;ÃK™IdentifierÕ;µÕ;Ω®userInfoK™IdentifierÕ;æÕ;ÃÆgetDisplayName¬¬ê¬LÆBlockStatementÕ;–Õ<"ëO≥ExpressionStatementÕ;ﬁÕ<P¥AssignmentExpressionÕ;ﬁÕ<°=Q∞MemberExpressionÕ;ﬁÕ;K™IdentifierÕ;ﬁÕ;·£mapSßLiteralÕ;‚Õ;Ô´displayName≠"displayName"√¬^ÆCallExpressionÕ;ÛÕ<Q∞MemberExpressionÕ;ÛÕ<^ÆCallExpressionÕ;ÛÕ<Q∞MemberExpressionÕ;ÛÕ<
K™IdentifierÕ;ÛÕ;˚®userInfoK™IdentifierÕ;¸Õ<
ÆgetDisplayName¬¬ê¬K™IdentifierÕ<Õ<®toString¬¬ê¬¿_´IfStatementÕ<+Õ<ì^ÆCallExpressionÕ</Õ<EQ∞MemberExpressionÕ</Õ<CK™IdentifierÕ</Õ<7®userInfoK™IdentifierÕ<8Õ<C´getPhotoUrl¬¬ê¬LÆBlockStatementÕ<GÕ<ìëO≥ExpressionStatementÕ<UÕ<âP¥AssignmentExpressionÕ<UÕ<à°=Q∞MemberExpressionÕ<UÕ<dK™IdentifierÕ<UÕ<X£mapSßLiteralÕ<YÕ<c®photoUrl™"photoUrl"√¬^ÆCallExpressionÕ<gÕ<àQ∞MemberExpressionÕ<gÕ<Ü^ÆCallExpressionÕ<gÕ<}Q∞MemberExpressionÕ<gÕ<{K™IdentifierÕ<gÕ<o®userInfoK™IdentifierÕ<pÕ<{´getPhotoUrl¬¬ê¬K™IdentifierÕ<~Õ<Ü®toString¬¬ê¬¿_´IfStatementÕ<úÕ<˚^ÆCallExpressionÕ<†Õ<≥Q∞MemberExpressionÕ<†Õ<±K™IdentifierÕ<†Õ<®®userInfoK™IdentifierÕ<©Õ<±®getEmail¬¬ê¬LÆBlockStatementÕ<µÕ<˚ëO≥ExpressionStatementÕ<√Õ<ÒP¥AssignmentExpressionÕ<√Õ<°=Q∞MemberExpressionÕ<√Õ<œK™IdentifierÕ<√Õ<∆£mapSßLiteralÕ<«Õ<Œ•emailß"email"√¬^ÆCallExpressionÕ<“Õ<Q∞MemberExpressionÕ<“Õ<Ó^ÆCallExpressionÕ<“Õ<ÂQ∞MemberExpressionÕ<“Õ<„K™IdentifierÕ<“Õ<⁄®userInfoK™IdentifierÕ<€Õ<„®getEmail¬¬ê¬K™IdentifierÕ<ÊÕ<Ó®toString¬¬ê¬¿_´IfStatementÕ=Õ=c^ÆCallExpressionÕ=Õ=Q∞MemberExpressionÕ=Õ=K™IdentifierÕ=Õ=®userInfoK™IdentifierÕ=Õ=®getPhone¬¬ê¬LÆBlockStatementÕ=Õ=cëO≥ExpressionStatementÕ=+Õ=YP¥AssignmentExpressionÕ=+Õ=X°=Q∞MemberExpressionÕ=+Õ=7K™IdentifierÕ=+Õ=.£mapSßLiteralÕ=/Õ=6•phoneß"phone"√¬^ÆCallExpressionÕ=:Õ=XQ∞MemberExpressionÕ=:Õ=V^ÆCallExpressionÕ=:Õ=MQ∞MemberExpressionÕ=:Õ=KK™IdentifierÕ=:Õ=B®userInfoK™IdentifierÕ=CÕ=K®getPhone¬¬ê¬K™IdentifierÕ=NÕ=V®toString¬¬ê¬¿_´IfStatementÕ=lÕ=‘^ÆCallExpressionÕ=pÕ=ÜQ∞MemberExpressionÕ=pÕ=ÑK™IdentifierÕ=pÕ=x®userInfoK™IdentifierÕ=yÕ=Ñ´getProvider¬¬ê¬LÆBlockStatementÕ=àÕ=‘ëO≥ExpressionStatementÕ=ñÕ= P¥AssignmentExpressionÕ=ñÕ=…°=Q∞MemberExpressionÕ=ñÕ=•K™IdentifierÕ=ñÕ=ô£mapSßLiteralÕ=öÕ=§®provider™"provider"√¬^ÆCallExpressionÕ=®Õ=…Q∞MemberExpressionÕ=®Õ=«^ÆCallExpressionÕ=®Õ=æQ∞MemberExpressionÕ=®Õ=ºK™IdentifierÕ=®Õ=∞®userInfoK™IdentifierÕ=±Õ=º´getProvider¬¬ê¬K™IdentifierÕ=øÕ=«®toString¬¬ê¬¿_´IfStatementÕ=›Õ>?^ÆCallExpressionÕ=·Õ=ıQ∞MemberExpressionÕ=·Õ=ÛK™IdentifierÕ=·Õ=È®userInfoK™IdentifierÕ=ÍÕ=Û©getOpenId¬¬ê¬LÆBlockStatementÕ=˜Õ>?ëO≥ExpressionStatementÕ>Õ>5P¥AssignmentExpressionÕ>Õ>4°=Q∞MemberExpressionÕ>Õ>K™IdentifierÕ>Õ>£mapSßLiteralÕ>	Õ>¶openId®"openId"√¬^ÆCallExpressionÕ>Õ>4Q∞MemberExpressionÕ>Õ>2^ÆCallExpressionÕ>Õ>)Q∞MemberExpressionÕ>Õ>'K™IdentifierÕ>Õ>®userInfoK™IdentifierÕ>Õ>'©getOpenId¬¬ê¬K™IdentifierÕ>*Õ>2®toString¬¬ê¬¿M∞MethodDefinitionÕ>JÕ?e¬¬K™IdentifierÕ>JÕ>YØconvertProvider¶methodN≤FunctionExpressionÕ>YÕ?e¿¬¬¬ëK™IdentifierÕ>ZÕ>\¢b8LÆBlockStatementÕ>^Õ?eíU≥VariableDeclarationÕ>hÕ?HëV≤VariableDeclaratorÕ>lÕ?GK™IdentifierÕ>lÕ>n¢c8X∞ObjectExpressionÕ>qÕ?GìY®PropertyÕ>Õ>∂¬¬¬SßLiteralÕ>Õ>Ü•phoneß'phone'Q∞MemberExpressionÕ>àÕ>∂K™IdentifierÕ>àÕ>ßøAGConnectAuthCredentialProviderK™IdentifierÕ>®Õ>∂ÆPhone_Provider¬¬§initY®PropertyÕ>ƒÕ>˚¬¬¬SßLiteralÕ>ƒÕ>À•emailß'email'Q∞MemberExpressionÕ>ÕÕ>˚K™IdentifierÕ>ÕÕ>ÏøAGConnectAuthCredentialProviderK™IdentifierÕ>ÌÕ>˚ÆEmail_Provider¬¬§initY®PropertyÕ?	Õ?=¬¬¬SßLiteralÕ?	Õ?§hwid¶'hwid'Q∞MemberExpressionÕ?Õ?=K™IdentifierÕ?Õ?0øAGConnectAuthCredentialProviderK™IdentifierÕ?1Õ?=¨HMS_Provider¬¬§init£letWØReturnStatementÕ?QÕ?_Q∞MemberExpressionÕ?XÕ?^K™IdentifierÕ?XÕ?Z¢c8K™IdentifierÕ?[Õ?]¢b8√¬ê¿‹  ‘r`ï§type•start£end™specifiers¶source±ImportDeclaration -ë‘raï§type•start£end®imported•localØImportSpecifier	K™Identifier	∞UserExtraRequestK™Identifier	∞UserExtraRequestSßLiteral!,©../e/i/x3´"../e/i/x3"`±ImportDeclaration.Ã\ëaØImportSpecifier7ÃHK™Identifier7ÃH±UserExtraResponseK™Identifier7ÃH±UserExtraResponseSßLiteralÃPÃ[©../e/m/h4´"../e/m/h4"`±ImportDeclarationÃ]ÃÄëaØImportSpecifierÃfÃoK™IdentifierÃfÃo©PhoneUtilK™IdentifierÃfÃo©PhoneUtilSßLiteralÃwÃ¶../k/l®"../k/l"`±ImportDeclarationÃÅÃ¥ëaØImportSpecifierÃäÃ†K™IdentifierÃäÃ†∂UpdatePasswordResponseK™IdentifierÃäÃ†∂UpdatePasswordResponseSßLiteralÃ®Ã≥©../e/m/e4´"../e/m/e4"`±ImportDeclarationÃµÃÁëaØImportSpecifierÃæÃ”K™IdentifierÃæÃ”µUpdatePasswordRequestK™IdentifierÃæÃ”µUpdatePasswordRequestSßLiteralÃ€ÃÊ©../e/i/u3´"../e/i/u3"`±ImportDeclarationÃËÕëaØImportSpecifierÃÒÕK™IdentifierÃÒÕ≤UpdatePhoneRequestK™IdentifierÃÒÕ≤UpdatePhoneRequestSßLiteralÕÕ©../e/i/v3´"../e/i/v3"`±ImportDeclarationÕÕHëaØImportSpecifierÕ!Õ4K™IdentifierÕ!Õ4≥UpdatePhoneResponseK™IdentifierÕ!Õ4≥UpdatePhoneResponseSßLiteralÕ<ÕG©../e/m/f4´"../e/m/f4"`±ImportDeclarationÕIÕxëaØImportSpecifierÕRÕdK™IdentifierÕRÕd≤UpdateEmailRequestK™IdentifierÕRÕd≤UpdateEmailRequestSßLiteralÕlÕw©../e/i/t3´"../e/i/t3"`±ImportDeclarationÕyÕ©ëaØImportSpecifierÕÇÕïK™IdentifierÕÇÕï≥UpdateEmailResponseK™IdentifierÕÇÕï≥UpdateEmailResponseSßLiteralÕùÕ®©../e/m/d4´"../e/m/d4"`±ImportDeclarationÕ™Õ‘ëaØImportSpecifierÕ≥Õ√K™IdentifierÕ≥Õ√∞SignInResultImplK™IdentifierÕ≥Õ√∞SignInResultImplSßLiteralÕÀÕ”¶../o/t®"../o/t"`±ImportDeclarationÕ’ÕëaØImportSpecifierÕﬁÕÌK™IdentifierÕﬁÕÌØUserLinkRequestK™IdentifierÕﬁÕÌØUserLinkRequestSßLiteralÕıÕ ©../e/i/y3´"../e/i/y3"`±ImportDeclarationÕÕ5ëaØImportSpecifierÕÕ!K™IdentifierÕÕ!∂ReauthenticateResponseK™IdentifierÕÕ!∂ReauthenticateResponseSßLiteralÕ)Õ4©../e/m/a4´"../e/m/a4"`±ImportDeclarationÕ6ÕhëaØImportSpecifierÕ?ÕTK™IdentifierÕ?ÕTµReauthenticateRequestK™IdentifierÕ?ÕTµReauthenticateRequestSßLiteralÕ\Õg©../e/i/p3´"../e/i/p3"`±ImportDeclarationÕiÕöëaØImportSpecifierÕrÕÜK™IdentifierÕrÕÜ¥UpdateProfileRequestK™IdentifierÕrÕÜ¥UpdateProfileRequestSßLiteralÕéÕô©../e/i/w3´"../e/i/w3"`±ImportDeclarationÕõÕÕëaØImportSpecifierÕ§ÕπK™IdentifierÕ§ÕπµUpdateProfileResponseK™IdentifierÕ§ÕπµUpdateProfileResponseSßLiteralÕ¡ÕÃ©../e/m/g4´"../e/m/g4"`±ImportDeclarationÕŒÕ˚ëaØImportSpecifierÕ◊ÕÁK™IdentifierÕ◊ÕÁ∞UserLinkResponseK™IdentifierÕ◊ÕÁ∞UserLinkResponseSßLiteralÕÔÕ˙©../e/m/i4´"../e/m/i4"`±ImportDeclarationÕ¸Õ*ëaØImportSpecifierÕÕK™IdentifierÕÕ±UserUnlinkRequestK™IdentifierÕÕ±UserUnlinkRequestSßLiteralÕÕ)©../e/i/z3´"../e/i/z3"`±ImportDeclarationÕ+ÕZëaØImportSpecifierÕ4ÕFK™IdentifierÕ4ÕF≤UserUnlinkResponseK™IdentifierÕ4ÕF≤UserUnlinkResponseSßLiteralÕNÕY©../e/m/j4´"../e/m/j4"`±ImportDeclarationÕ[ÕÜëaØImportSpecifierÕdÕuK™IdentifierÕdÕu±PhoneAuthProviderK™IdentifierÕdÕu±PhoneAuthProviderSßLiteralÕ}ÕÖ¶../x/y®"../x/y"`±ImportDeclarationÕáÕ≤ëaØImportSpecifierÕêÕ°K™IdentifierÕêÕ°±EmailAuthProviderK™IdentifierÕêÕ°±EmailAuthProviderSßLiteralÕ©Õ±¶../x/z®"../x/z"`±ImportDeclarationÕ≥ÕÿëaØImportSpecifierÕºÕ«K™IdentifierÕºÕ«´AuthBackendK™IdentifierÕºÕ«´AuthBackendSßLiteralÕœÕ◊¶../e/f®"../e/f"`±ImportDeclarationÕŸÕ˝ëaØImportSpecifierÕ‚ÕÎK™IdentifierÕ‚ÕÎ©TokenImplK™IdentifierÕ‚ÕÎ©TokenImplSßLiteralÕÛÕ¸ß../o/x2©"../o/x2"`±ImportDeclarationÕ˛Õ/ëaØImportSpecifierÕÕK™IdentifierÕÕ¥RefreshTokenResponseK™IdentifierÕÕ¥RefreshTokenResponseSßLiteralÕ#Õ.©../e/m/b4´"../e/m/b4"`±ImportDeclarationÕ0Õ`ëaØImportSpecifierÕ9ÕLK™IdentifierÕ9ÕL≥RefreshTokenRequestK™IdentifierÕ9ÕL≥RefreshTokenRequestSßLiteralÕTÕ_©../e/i/q3´"../e/i/q3"`±ImportDeclarationÕaÕòëaØImportSpecifierÕjÕâK™IdentifierÕjÕâøAGConnectAuthCredentialProviderK™IdentifierÕjÕâøAGConnectAuthCredentialProviderSßLiteralÕëÕó§../r¶"../r"`±ImportDeclarationÕôÕ»ëaØImportSpecifierÕ¢Õ∂K™IdentifierÕ¢Õ∂¥AuthTokenInterceptorK™IdentifierÕ¢Õ∂¥AuthTokenInterceptorSßLiteralÕæÕ«ß../k/n4©"../k/n4"`±ImportDeclarationÕ…ÕÏë‘rbî§type•start£end•local∂ImportDefaultSpecifierÕ–Õ‘K™IdentifierÕ–Õ‘§ListSßLiteralÕ⁄ÕÎØ@ohos.util.List±'@ohos.util.List'`±ImportDeclarationÕÌÕëaØImportSpecifierÕˆÕK™IdentifierÕˆÕ¨AGCAuthErrorK™IdentifierÕˆÕ¨AGCAuthErrorSßLiteralÕ
Õ¶../c/d®"../c/d"`±ImportDeclarationÕÕ?ëaØImportSpecifierÕÕ-K™IdentifierÕÕ-∞AGCAuthErrorCodeK™IdentifierÕÕ-∞AGCAuthErrorCodeSßLiteralÕ5Õ>ß../c/l1©"../c/l1"`±ImportDeclarationÕ@ÕeëaØImportSpecifierÕIÕOK™IdentifierÕIÕO¶LoggerK™IdentifierÕIÕO¶LoggerSßLiteralÕWÕd´../e1/f1/g1≠"../e1/f1/g1"`±ImportDeclarationÕfÕîëaØImportSpecifierÕoÕK™IdentifierÕoÕ∞HwIdAuthProviderK™IdentifierÕoÕ∞HwIdAuthProviderSßLiteralÕáÕì™../s1/x/t1¨"../s1/x/t1"`±ImportDeclarationÕïÕ¿ëaØImportSpecifierÕûÕ≠K™IdentifierÕûÕ≠ØHwIdAuthManagerK™IdentifierÕûÕ≠ØHwIdAuthManagerSßLiteralÕµÕø®../s1/u1™"../s1/u1"