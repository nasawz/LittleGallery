‘r@ü™assertions§code¥customTransformCache¨dependencies¢id§meta±moduleSideEffects¨originalCode±originalSourcemap´resolvedIdsÆsourcemapChainµsyntheticNamedExportsµtransformDependenciesÆtransformFiles®cacheAst‘rAê⁄=∆import huks from "@ohos.security.huks";
import { AuthImpl } from "../a";
export class HuksManager {
    constructor() {
        this.deriveHkdfInData = 'deriveHkdfIndata';
        this.handle = undefined;
        this.huksKeyDeriveKeySize = 32;
        this.huksOptions = undefined;
        this.finishOptions = undefined;
        this.initOptions = undefined;
    }
    static getKeyAlies() {
        return 'agconnect_auth_keyAlies' + AuthImpl.getInstance().getRegion();
    }
    static stringToUint8Array(str) {
        let arr = new Array();
        for (let c7 = 0, d7 = str.length; c7 < d7; ++c7) {
            arr.push(str.charCodeAt(c7));
        }
        return new Uint8Array(arr);
    }
    static uint8ArrayToString(z6) {
        let a7 = '';
        for (let b7 = 0; b7 < z6.length; b7++) {
            a7 += String.fromCharCode(z6[b7]);
        }
        return a7;
    }
    async publicGenKeyFunc(keyAlias) {
        console.info(`enter promise generateKeyItem`);
        let w6 = { i: false };
        try {
            await this.generateKeyItem(keyAlias, this.huksOptions, w6)
                .then((data) => {
                console.info(`promise: generateKeyItem success, data = ${JSON.stringify(data)}`);
            })
                .catch((error) => {
                if (w6.i) {
                    throw error;
                }
                else {
                    console.error(`promise: generateKeyItem failed` + error);
                }
            });
        }
        catch (error) {
            console.error(`promise: generateKeyItem input arg invalid` + error);
        }
    }
    async publicInitFunc(keyAlias) {
        console.info(`enter promise doInit`);
        let t6 = { i: false };
        try {
            await this.initSession(keyAlias, this.initOptions, t6)
                .then((data) => {
                console.info(`promise: doInit success, data = ${JSON.stringify(data)}`);
                this.handle = data.handle;
            })
                .catch((error) => {
                if (t6.i) {
                    throw error;
                }
                else {
                    console.error(`promise: doInit failed` + error);
                }
            });
        }
        catch (error) {
            console.error(`promise: doInit input arg invalid` + error);
        }
    }
    async publicUpdateFunc() {
        console.info(`enter promise doUpdate`);
        let q6 = { i: false };
        try {
            await this.updateSession(this.handle, this.initOptions, q6)
                .then((data) => {
                console.info(`promise: doUpdate success, data = ${JSON.stringify(data)}`);
            })
                .catch((error) => {
                if (q6.i) {
                    throw error;
                }
                else {
                    console.error(`promise: doUpdate failed` + error);
                }
            });
        }
        catch (error) {
            console.error(`promise: doUpdate input arg invalid` + error);
        }
    }
    async publicFinishFunc() {
        console.info(`enter promise doFinish`);
        let n6 = { i: false };
        try {
            await this.finishSession(this.handle, this.finishOptions, n6)
                .then((data) => {
                console.info(`promise: doFinish success, data = ${JSON.stringify(data)}`);
            })
                .catch((error) => {
                if (n6.i) {
                    throw error;
                }
                else {
                    console.error(`promise: doFinish failed` + error);
                }
            });
        }
        catch (error) {
            console.error(`promise: doFinish input arg invalid` + error);
        }
    }
    async publicDeleteKeyFunc(keyAlias) {
        console.info(`enter promise deleteKeyItem`);
        let k6 = { i: false };
        let huksOptions = {
            properties: []
        };
        try {
            await this.deleteKeyItem(keyAlias, huksOptions, k6)
                .then((data) => {
                console.info(`promise: deleteKeyItem key success, data = ${JSON.stringify(data)}`);
            })
                .catch((error) => {
                if (k6.i) {
                    throw error;
                }
                else {
                    console.error(`promise: deleteKeyItem failed` + error);
                }
            });
        }
        catch (error) {
            console.error(`promise: deleteKeyItem input arg invalid` + error);
        }
    }
    async initDeriveKey(keyAlias) {
        this.init(keyAlias);
        await this.publicGenKeyFunc(keyAlias);
        await this.publicInitFunc(keyAlias);
        this.initOptions.inData = HuksManager.stringToUint8Array(this.deriveHkdfInData);
        await this.publicUpdateFunc();
        await this.publicFinishFunc();
    }
    getAesEncryptProperties(nonce, iv) {
        let properties = new Array();
        let index = 0;
        properties[index++] = {
            tag: huks.HuksTag.HUKS_TAG_ALGORITHM,
            value: huks.HuksKeyAlg.HUKS_ALG_AES
        };
        properties[index++] = {
            tag: huks.HuksTag.HUKS_TAG_KEY_SIZE,
            value: huks.HuksKeySize.HUKS_AES_KEY_SIZE_256
        };
        properties[index++] = {
            tag: huks.HuksTag.HUKS_TAG_PURPOSE,
            value: huks.HuksKeyPurpose.HUKS_KEY_PURPOSE_ENCRYPT
        };
        properties[index++] = {
            tag: huks.HuksTag.HUKS_TAG_PADDING,
            value: huks.HuksKeyPadding.HUKS_PADDING_NONE
        };
        properties[index++] = {
            tag: huks.HuksTag.HUKS_TAG_BLOCK_MODE,
            value: huks.HuksCipherMode.HUKS_MODE_GCM
        };
        properties[index++] = {
            tag: huks.HuksTag.HUKS_TAG_IV,
            value: HuksManager.stringToUint8Array(iv)
        };
        properties[index++] = {
            tag: huks.HuksTag.HUKS_TAG_NONCE,
            value: HuksManager.stringToUint8Array(nonce)
        };
        return properties;
    }
    getAesDecryptProperties(j6, nonce, iv) {
        let properties = new Array();
        let index = 0;
        properties[index++] = {
            tag: huks.HuksTag.HUKS_TAG_ALGORITHM,
            value: huks.HuksKeyAlg.HUKS_ALG_AES
        };
        properties[index++] = {
            tag: huks.HuksTag.HUKS_TAG_KEY_SIZE,
            value: huks.HuksKeySize.HUKS_AES_KEY_SIZE_256
        };
        properties[index++] = {
            tag: huks.HuksTag.HUKS_TAG_PURPOSE,
            value: huks.HuksKeyPurpose.HUKS_KEY_PURPOSE_DECRYPT
        };
        properties[index++] = {
            tag: huks.HuksTag.HUKS_TAG_PADDING,
            value: huks.HuksKeyPadding.HUKS_PADDING_NONE
        };
        properties[index++] = {
            tag: huks.HuksTag.HUKS_TAG_BLOCK_MODE,
            value: huks.HuksCipherMode.HUKS_MODE_GCM
        };
        properties[index++] = {
            tag: huks.HuksTag.HUKS_TAG_NONCE,
            value: HuksManager.stringToUint8Array(nonce)
        };
        properties[index++] = {
            tag: huks.HuksTag.HUKS_TAG_IV,
            value: HuksManager.stringToUint8Array(iv)
        };
        properties[index++] = {
            tag: huks.HuksTag.HUKS_TAG_AE_TAG,
            value: j6.slice(j6.length - 16)
        };
        return properties;
    }
    async encryptData(plainText, keyAlias, nonce, iv) {
        let hasKey = await this.hasKeyAlies(keyAlias);
        if (!hasKey) {
            await this.initDeriveKey(keyAlias);
        }
        let options = {
            properties: this.getAesEncryptProperties(nonce, iv),
            inData: HuksManager.stringToUint8Array(plainText)
        };
        await huks.initSession(keyAlias, options)
            .then((data) => {
            this.handle = data.handle;
        }).catch((error) => {
            console.error(`promise: init EncryptData failed` + error);
        });
        return new Promise((f6, g6) => {
            huks.finishSession(this.handle, options)
                .then((data) => {
                console.info(`promise: encrypt data success, data is ` +
                    HuksManager.uint8ArrayToString(data.outData));
                if (data.outData) {
                    f6(data.outData);
                }
            }).catch((error) => {
                g6(error);
            });
        });
    }
    async decryptData(s5, keyAlias, nonce, iv) {
        if (s5.length === 0) {
            return Promise.resolve(null);
        }
        let t5 = this.getAesDecryptProperties(s5, nonce, iv);
        let options = {
            properties: t5,
            inData: s5.slice(0, s5.length - 16)
        };
        return new Promise((v5, w5) => {
            huks.initSession(keyAlias, options)
                .then((data) => {
                this.handle = data.handle;
                huks.finishSession(this.handle, options)
                    .then((data) => {
                    if (data && data.outData) {
                        let b6 = HuksManager.uint8ArrayToString(data.outData);
                        v5(b6);
                    }
                    else {
                        v5(null);
                    }
                }).catch((error) => {
                    w5(error);
                });
            }).catch((error) => {
                console.error(`promise: init DecryptData failed` + error);
                v5(null);
            });
        });
    }
    async generateKeyItem(keyAlias, huksOptions, n5) {
        return new Promise((p5, q5) => {
            try {
                huks.generateKeyItem(keyAlias, huksOptions, (error, data) => {
                    if (error) {
                        q5(error);
                    }
                    else {
                        p5(data);
                    }
                });
            }
            catch (error) {
                n5.i = true;
                throw error;
            }
        });
    }
    async initSession(keyAlias, huksOptions, i5) {
        return new Promise((k5, l5) => {
            try {
                huks.initSession(keyAlias, huksOptions, (error, data) => {
                    if (error) {
                        l5(error);
                    }
                    else {
                        k5(data);
                    }
                });
            }
            catch (error) {
                i5.i = true;
                throw error;
            }
        });
    }
    async updateSession(handle, huksOptions, d5) {
        return new Promise((f5, g5) => {
            try {
                huks.updateSession(handle, huksOptions, (error, data) => {
                    if (error) {
                        g5(error);
                    }
                    else {
                        f5(data);
                    }
                });
            }
            catch (error) {
                d5.i = true;
                throw error;
            }
        });
    }
    async finishSession(handle, huksOptions, y4) {
        return new Promise((a5, b5) => {
            try {
                huks.finishSession(handle, huksOptions, (error, data) => {
                    if (error) {
                        b5(error);
                    }
                    else {
                        a5(data);
                    }
                });
            }
            catch (error) {
                y4.i = true;
                throw error;
            }
        });
    }
    async deleteKeyItem(keyAlias, huksOptions, t4) {
        return new Promise((v4, w4) => {
            try {
                huks.deleteKeyItem(keyAlias, huksOptions, (error, data) => {
                    if (error) {
                        w4(error);
                    }
                    else {
                        v4(data);
                    }
                });
            }
            catch (error) {
                t4.i = true;
                throw error;
            }
        });
    }
    init(keyAlias) {
        let properties = new Array();
        properties[0] = {
            tag: huks.HuksTag.HUKS_TAG_ALGORITHM,
            value: huks.HuksKeyAlg.HUKS_ALG_AES,
        };
        properties[1] = {
            tag: huks.HuksTag.HUKS_TAG_PURPOSE,
            value: huks.HuksKeyPurpose.HUKS_KEY_PURPOSE_DERIVE,
        };
        properties[2] = {
            tag: huks.HuksTag.HUKS_TAG_DIGEST,
            value: huks.HuksKeyDigest.HUKS_DIGEST_SHA256,
        };
        properties[3] = {
            tag: huks.HuksTag.HUKS_TAG_KEY_SIZE,
            value: huks.HuksKeySize.HUKS_AES_KEY_SIZE_128,
        };
        properties[4] = {
            tag: huks.HuksTag.HUKS_TAG_DERIVED_AGREED_KEY_STORAGE_FLAG,
            value: huks.HuksKeyStorageType.HUKS_STORAGE_ONLY_USED_IN_HUKS,
        };
        this.huksOptions = {
            properties: properties,
            inData: new Uint8Array(new Array())
        };
        let r4 = new Array();
        r4[0] = {
            tag: huks.HuksTag.HUKS_TAG_ALGORITHM,
            value: huks.HuksKeyAlg.HUKS_ALG_HKDF,
        };
        r4[1] = {
            tag: huks.HuksTag.HUKS_TAG_PURPOSE,
            value: huks.HuksKeyPurpose.HUKS_KEY_PURPOSE_DERIVE,
        };
        r4[2] = {
            tag: huks.HuksTag.HUKS_TAG_DIGEST,
            value: huks.HuksKeyDigest.HUKS_DIGEST_SHA256,
        };
        r4[3] = {
            tag: huks.HuksTag.HUKS_TAG_DERIVE_KEY_SIZE,
            value: this.huksKeyDeriveKeySize,
        };
        this.initOptions = {
            properties: r4,
            inData: new Uint8Array(new Array())
        };
        let s4 = new Array();
        s4[0] = {
            tag: huks.HuksTag.HUKS_TAG_DERIVED_AGREED_KEY_STORAGE_FLAG,
            value: huks.HuksKeyStorageType.HUKS_STORAGE_ONLY_USED_IN_HUKS,
        };
        s4[1] = {
            tag: huks.HuksTag.HUKS_TAG_IS_KEY_ALIAS,
            value: true,
        };
        s4[2] = {
            tag: huks.HuksTag.HUKS_TAG_ALGORITHM,
            value: huks.HuksKeyAlg.HUKS_ALG_AES,
        };
        s4[3] = {
            tag: huks.HuksTag.HUKS_TAG_KEY_SIZE,
            value: huks.HuksKeySize.HUKS_AES_KEY_SIZE_256,
        };
        s4[4] = {
            tag: huks.HuksTag.HUKS_TAG_PURPOSE,
            value: huks.HuksKeyPurpose.HUKS_KEY_PURPOSE_ENCRYPT |
                huks.HuksKeyPurpose.HUKS_KEY_PURPOSE_DECRYPT,
        };
        s4[5] = {
            tag: huks.HuksTag.HUKS_TAG_DIGEST,
            value: huks.HuksKeyDigest.HUKS_DIGEST_SHA256,
        };
        s4[6] = {
            tag: huks.HuksTag.HUKS_TAG_KEY_ALIAS,
            value: HuksManager.stringToUint8Array(keyAlias),
        };
        s4[7] = {
            tag: huks.HuksTag.HUKS_TAG_PADDING,
            value: huks.HuksKeyPadding.HUKS_PADDING_NONE,
        };
        s4[8] = {
            tag: huks.HuksTag.HUKS_TAG_BLOCK_MODE,
            value: huks.HuksCipherMode.HUKS_MODE_GCM,
        };
        this.finishOptions = {
            properties: s4,
            inData: new Uint8Array(new Array())
        };
    }
    async hasKeyAlies(m4) {
        let huksOptions = {
            properties: []
        };
        return new Promise((o4, p4) => {
            try {
                huks.hasKeyItem(m4, huksOptions, (error, data) => {
                    if (error) {
                        p4(error);
                    }
                    else {
                        if (data !== null && data.valueOf() !== null) {
                            o4(data.valueOf());
                        }
                    }
                });
            }
            catch (error) {
                p4(error);
            }
        });
    }
}
class l4 {
    constructor() {
        this.i = false;
    }
}
¬íŸp hvigor_ignore__Applications_DevEco-Studio.app_Contents_sdk_default_openharmony_ets_api_@ohos.security.huks.d.tsŸó/Users/wangzhe/DevEcoStudioProjects/LittleGallery/Application/oh_modules/.ohpm/@hw-agconnect+auth@1.0.2/oh_modules/@hw-agconnect/auth/src/main/ets/a.jsŸõ/Users/wangzhe/DevEcoStudioProjects/LittleGallery/Application/oh_modules/.ohpm/@hw-agconnect+auth@1.0.2/oh_modules/@hw-agconnect/auth/src/main/ets/j1/t2.js‘rBô±isLocalDependencyØisNodeEntryFileßpkgPathßpkgName™pkgVersion±belongProjectPath±dependencyPkgInfo®commonjsØhostModulesInfo¬¬ŸÖ/Users/wangzhe/DevEcoStudioProjects/LittleGallery/Application/oh_modules/.ohpm/@hw-agconnect+auth@1.0.2/oh_modules/@hw-agconnect/auth≤@hw-agconnect/auth•1.0.2Ÿ=/Users/wangzhe/DevEcoStudioProjects/LittleGallery/Application‘rCíßpkgName™pkgVersion≤@hw-agconnect/auth•1.0.2‘rDíØhasNamedExports™isCommonJS√¬ê√⁄=∆import huks from "@ohos.security.huks";
import { AuthImpl } from "../a";
export class HuksManager {
    constructor() {
        this.deriveHkdfInData = 'deriveHkdfIndata';
        this.handle = undefined;
        this.huksKeyDeriveKeySize = 32;
        this.huksOptions = undefined;
        this.finishOptions = undefined;
        this.initOptions = undefined;
    }
    static getKeyAlies() {
        return 'agconnect_auth_keyAlies' + AuthImpl.getInstance().getRegion();
    }
    static stringToUint8Array(str) {
        let arr = new Array();
        for (let c7 = 0, d7 = str.length; c7 < d7; ++c7) {
            arr.push(str.charCodeAt(c7));
        }
        return new Uint8Array(arr);
    }
    static uint8ArrayToString(z6) {
        let a7 = '';
        for (let b7 = 0; b7 < z6.length; b7++) {
            a7 += String.fromCharCode(z6[b7]);
        }
        return a7;
    }
    async publicGenKeyFunc(keyAlias) {
        console.info(`enter promise generateKeyItem`);
        let w6 = { i: false };
        try {
            await this.generateKeyItem(keyAlias, this.huksOptions, w6)
                .then((data) => {
                console.info(`promise: generateKeyItem success, data = ${JSON.stringify(data)}`);
            })
                .catch((error) => {
                if (w6.i) {
                    throw error;
                }
                else {
                    console.error(`promise: generateKeyItem failed` + error);
                }
            });
        }
        catch (error) {
            console.error(`promise: generateKeyItem input arg invalid` + error);
        }
    }
    async publicInitFunc(keyAlias) {
        console.info(`enter promise doInit`);
        let t6 = { i: false };
        try {
            await this.initSession(keyAlias, this.initOptions, t6)
                .then((data) => {
                console.info(`promise: doInit success, data = ${JSON.stringify(data)}`);
                this.handle = data.handle;
            })
                .catch((error) => {
                if (t6.i) {
                    throw error;
                }
                else {
                    console.error(`promise: doInit failed` + error);
                }
            });
        }
        catch (error) {
            console.error(`promise: doInit input arg invalid` + error);
        }
    }
    async publicUpdateFunc() {
        console.info(`enter promise doUpdate`);
        let q6 = { i: false };
        try {
            await this.updateSession(this.handle, this.initOptions, q6)
                .then((data) => {
                console.info(`promise: doUpdate success, data = ${JSON.stringify(data)}`);
            })
                .catch((error) => {
                if (q6.i) {
                    throw error;
                }
                else {
                    console.error(`promise: doUpdate failed` + error);
                }
            });
        }
        catch (error) {
            console.error(`promise: doUpdate input arg invalid` + error);
        }
    }
    async publicFinishFunc() {
        console.info(`enter promise doFinish`);
        let n6 = { i: false };
        try {
            await this.finishSession(this.handle, this.finishOptions, n6)
                .then((data) => {
                console.info(`promise: doFinish success, data = ${JSON.stringify(data)}`);
            })
                .catch((error) => {
                if (n6.i) {
                    throw error;
                }
                else {
                    console.error(`promise: doFinish failed` + error);
                }
            });
        }
        catch (error) {
            console.error(`promise: doFinish input arg invalid` + error);
        }
    }
    async publicDeleteKeyFunc(keyAlias) {
        console.info(`enter promise deleteKeyItem`);
        let k6 = { i: false };
        let huksOptions = {
            properties: []
        };
        try {
            await this.deleteKeyItem(keyAlias, huksOptions, k6)
                .then((data) => {
                console.info(`promise: deleteKeyItem key success, data = ${JSON.stringify(data)}`);
            })
                .catch((error) => {
                if (k6.i) {
                    throw error;
                }
                else {
                    console.error(`promise: deleteKeyItem failed` + error);
                }
            });
        }
        catch (error) {
            console.error(`promise: deleteKeyItem input arg invalid` + error);
        }
    }
    async initDeriveKey(keyAlias) {
        this.init(keyAlias);
        await this.publicGenKeyFunc(keyAlias);
        await this.publicInitFunc(keyAlias);
        this.initOptions.inData = HuksManager.stringToUint8Array(this.deriveHkdfInData);
        await this.publicUpdateFunc();
        await this.publicFinishFunc();
    }
    getAesEncryptProperties(nonce, iv) {
        let properties = new Array();
        let index = 0;
        properties[index++] = {
            tag: huks.HuksTag.HUKS_TAG_ALGORITHM,
            value: huks.HuksKeyAlg.HUKS_ALG_AES
        };
        properties[index++] = {
            tag: huks.HuksTag.HUKS_TAG_KEY_SIZE,
            value: huks.HuksKeySize.HUKS_AES_KEY_SIZE_256
        };
        properties[index++] = {
            tag: huks.HuksTag.HUKS_TAG_PURPOSE,
            value: huks.HuksKeyPurpose.HUKS_KEY_PURPOSE_ENCRYPT
        };
        properties[index++] = {
            tag: huks.HuksTag.HUKS_TAG_PADDING,
            value: huks.HuksKeyPadding.HUKS_PADDING_NONE
        };
        properties[index++] = {
            tag: huks.HuksTag.HUKS_TAG_BLOCK_MODE,
            value: huks.HuksCipherMode.HUKS_MODE_GCM
        };
        properties[index++] = {
            tag: huks.HuksTag.HUKS_TAG_IV,
            value: HuksManager.stringToUint8Array(iv)
        };
        properties[index++] = {
            tag: huks.HuksTag.HUKS_TAG_NONCE,
            value: HuksManager.stringToUint8Array(nonce)
        };
        return properties;
    }
    getAesDecryptProperties(j6, nonce, iv) {
        let properties = new Array();
        let index = 0;
        properties[index++] = {
            tag: huks.HuksTag.HUKS_TAG_ALGORITHM,
            value: huks.HuksKeyAlg.HUKS_ALG_AES
        };
        properties[index++] = {
            tag: huks.HuksTag.HUKS_TAG_KEY_SIZE,
            value: huks.HuksKeySize.HUKS_AES_KEY_SIZE_256
        };
        properties[index++] = {
            tag: huks.HuksTag.HUKS_TAG_PURPOSE,
            value: huks.HuksKeyPurpose.HUKS_KEY_PURPOSE_DECRYPT
        };
        properties[index++] = {
            tag: huks.HuksTag.HUKS_TAG_PADDING,
            value: huks.HuksKeyPadding.HUKS_PADDING_NONE
        };
        properties[index++] = {
            tag: huks.HuksTag.HUKS_TAG_BLOCK_MODE,
            value: huks.HuksCipherMode.HUKS_MODE_GCM
        };
        properties[index++] = {
            tag: huks.HuksTag.HUKS_TAG_NONCE,
            value: HuksManager.stringToUint8Array(nonce)
        };
        properties[index++] = {
            tag: huks.HuksTag.HUKS_TAG_IV,
            value: HuksManager.stringToUint8Array(iv)
        };
        properties[index++] = {
            tag: huks.HuksTag.HUKS_TAG_AE_TAG,
            value: j6.slice(j6.length - 16)
        };
        return properties;
    }
    async encryptData(plainText, keyAlias, nonce, iv) {
        let hasKey = await this.hasKeyAlies(keyAlias);
        if (!hasKey) {
            await this.initDeriveKey(keyAlias);
        }
        let options = {
            properties: this.getAesEncryptProperties(nonce, iv),
            inData: HuksManager.stringToUint8Array(plainText)
        };
        await huks.initSession(keyAlias, options)
            .then((data) => {
            this.handle = data.handle;
        }).catch((error) => {
            console.error(`promise: init EncryptData failed` + error);
        });
        return new Promise((f6, g6) => {
            huks.finishSession(this.handle, options)
                .then((data) => {
                console.info(`promise: encrypt data success, data is ` +
                    HuksManager.uint8ArrayToString(data.outData));
                if (data.outData) {
                    f6(data.outData);
                }
            }).catch((error) => {
                g6(error);
            });
        });
    }
    async decryptData(s5, keyAlias, nonce, iv) {
        if (s5.length === 0) {
            return Promise.resolve(null);
        }
        let t5 = this.getAesDecryptProperties(s5, nonce, iv);
        let options = {
            properties: t5,
            inData: s5.slice(0, s5.length - 16)
        };
        return new Promise((v5, w5) => {
            huks.initSession(keyAlias, options)
                .then((data) => {
                this.handle = data.handle;
                huks.finishSession(this.handle, options)
                    .then((data) => {
                    if (data && data.outData) {
                        let b6 = HuksManager.uint8ArrayToString(data.outData);
                        v5(b6);
                    }
                    else {
                        v5(null);
                    }
                }).catch((error) => {
                    w5(error);
                });
            }).catch((error) => {
                console.error(`promise: init DecryptData failed` + error);
                v5(null);
            });
        });
    }
    async generateKeyItem(keyAlias, huksOptions, n5) {
        return new Promise((p5, q5) => {
            try {
                huks.generateKeyItem(keyAlias, huksOptions, (error, data) => {
                    if (error) {
                        q5(error);
                    }
                    else {
                        p5(data);
                    }
                });
            }
            catch (error) {
                n5.i = true;
                throw error;
            }
        });
    }
    async initSession(keyAlias, huksOptions, i5) {
        return new Promise((k5, l5) => {
            try {
                huks.initSession(keyAlias, huksOptions, (error, data) => {
                    if (error) {
                        l5(error);
                    }
                    else {
                        k5(data);
                    }
                });
            }
            catch (error) {
                i5.i = true;
                throw error;
            }
        });
    }
    async updateSession(handle, huksOptions, d5) {
        return new Promise((f5, g5) => {
            try {
                huks.updateSession(handle, huksOptions, (error, data) => {
                    if (error) {
                        g5(error);
                    }
                    else {
                        f5(data);
                    }
                });
            }
            catch (error) {
                d5.i = true;
                throw error;
            }
        });
    }
    async finishSession(handle, huksOptions, y4) {
        return new Promise((a5, b5) => {
            try {
                huks.finishSession(handle, huksOptions, (error, data) => {
                    if (error) {
                        b5(error);
                    }
                    else {
                        a5(data);
                    }
                });
            }
            catch (error) {
                y4.i = true;
                throw error;
            }
        });
    }
    async deleteKeyItem(keyAlias, huksOptions, t4) {
        return new Promise((v4, w4) => {
            try {
                huks.deleteKeyItem(keyAlias, huksOptions, (error, data) => {
                    if (error) {
                        w4(error);
                    }
                    else {
                        v4(data);
                    }
                });
            }
            catch (error) {
                t4.i = true;
                throw error;
            }
        });
    }
    init(keyAlias) {
        let properties = new Array();
        properties[0] = {
            tag: huks.HuksTag.HUKS_TAG_ALGORITHM,
            value: huks.HuksKeyAlg.HUKS_ALG_AES,
        };
        properties[1] = {
            tag: huks.HuksTag.HUKS_TAG_PURPOSE,
            value: huks.HuksKeyPurpose.HUKS_KEY_PURPOSE_DERIVE,
        };
        properties[2] = {
            tag: huks.HuksTag.HUKS_TAG_DIGEST,
            value: huks.HuksKeyDigest.HUKS_DIGEST_SHA256,
        };
        properties[3] = {
            tag: huks.HuksTag.HUKS_TAG_KEY_SIZE,
            value: huks.HuksKeySize.HUKS_AES_KEY_SIZE_128,
        };
        properties[4] = {
            tag: huks.HuksTag.HUKS_TAG_DERIVED_AGREED_KEY_STORAGE_FLAG,
            value: huks.HuksKeyStorageType.HUKS_STORAGE_ONLY_USED_IN_HUKS,
        };
        this.huksOptions = {
            properties: properties,
            inData: new Uint8Array(new Array())
        };
        let r4 = new Array();
        r4[0] = {
            tag: huks.HuksTag.HUKS_TAG_ALGORITHM,
            value: huks.HuksKeyAlg.HUKS_ALG_HKDF,
        };
        r4[1] = {
            tag: huks.HuksTag.HUKS_TAG_PURPOSE,
            value: huks.HuksKeyPurpose.HUKS_KEY_PURPOSE_DERIVE,
        };
        r4[2] = {
            tag: huks.HuksTag.HUKS_TAG_DIGEST,
            value: huks.HuksKeyDigest.HUKS_DIGEST_SHA256,
        };
        r4[3] = {
            tag: huks.HuksTag.HUKS_TAG_DERIVE_KEY_SIZE,
            value: this.huksKeyDeriveKeySize,
        };
        this.initOptions = {
            properties: r4,
            inData: new Uint8Array(new Array())
        };
        let s4 = new Array();
        s4[0] = {
            tag: huks.HuksTag.HUKS_TAG_DERIVED_AGREED_KEY_STORAGE_FLAG,
            value: huks.HuksKeyStorageType.HUKS_STORAGE_ONLY_USED_IN_HUKS,
        };
        s4[1] = {
            tag: huks.HuksTag.HUKS_TAG_IS_KEY_ALIAS,
            value: true,
        };
        s4[2] = {
            tag: huks.HuksTag.HUKS_TAG_ALGORITHM,
            value: huks.HuksKeyAlg.HUKS_ALG_AES,
        };
        s4[3] = {
            tag: huks.HuksTag.HUKS_TAG_KEY_SIZE,
            value: huks.HuksKeySize.HUKS_AES_KEY_SIZE_256,
        };
        s4[4] = {
            tag: huks.HuksTag.HUKS_TAG_PURPOSE,
            value: huks.HuksKeyPurpose.HUKS_KEY_PURPOSE_ENCRYPT |
                huks.HuksKeyPurpose.HUKS_KEY_PURPOSE_DECRYPT,
        };
        s4[5] = {
            tag: huks.HuksTag.HUKS_TAG_DIGEST,
            value: huks.HuksKeyDigest.HUKS_DIGEST_SHA256,
        };
        s4[6] = {
            tag: huks.HuksTag.HUKS_TAG_KEY_ALIAS,
            value: HuksManager.stringToUint8Array(keyAlias),
        };
        s4[7] = {
            tag: huks.HuksTag.HUKS_TAG_PADDING,
            value: huks.HuksKeyPadding.HUKS_PADDING_NONE,
        };
        s4[8] = {
            tag: huks.HuksTag.HUKS_TAG_BLOCK_MODE,
            value: huks.HuksCipherMode.HUKS_MODE_GCM,
        };
        this.finishOptions = {
            properties: s4,
            inData: new Uint8Array(new Array())
        };
    }
    async hasKeyAlies(m4) {
        let huksOptions = {
            properties: []
        };
        return new Promise((o4, p4) => {
            try {
                huks.hasKeyItem(m4, huksOptions, (error, data) => {
                    if (error) {
                        p4(error);
                    }
                    else {
                        if (data !== null && data.valueOf() !== null) {
                            o4(data.valueOf());
                        }
                    }
                });
            }
            catch (error) {
                p4(error);
            }
        });
    }
}
class l4 {
    constructor() {
        this.i = false;
    }
}
‘rEïßversion®mappings•namesßsourcesÆsourcesContent‹„ëî    ëî   ëî   ëî   ëî   ëî   ëî   ëî   ëî   ëî  	 ëî  
 ëî   ëî   ëî   ëî   ëî   ëî   ëî   ëî   ëî   ëî   ëî   ëî   ëî   ëî   ëî   ëî   ëî   ëî   ëî   ëî   ëî   ëî    ëî  ! ëî  " ëî  # ëî  $ ëî  % ëî  & ëî  ' ëî  ( ëî  ) ëî  * ëî  + ëî  , ëî  - ëî  . ëî  / ëî  0 ëî  1 ëî  2 ëî  3 ëî  4 ëî  5 ëî  6 ëî  7 ëî  8 ëî  9 ëî  : ëî  ; ëî  < ëî  = ëî  > ëî  ? ëî  Ã@ ëî  ÃA ëî  ÃB ëî  ÃC ëî  ÃD ëî  ÃE ëî  ÃF ëî  ÃG ëî  ÃH ëî  ÃI ëî  ÃJ ëî  ÃK ëî  ÃL ëî  ÃM ëî  ÃN ëî  ÃO ëî  ÃP ëî  ÃQ ëî  ÃR ëî  ÃS ëî  ÃT ëî  ÃU ëî  ÃV ëî  ÃW ëî  ÃX ëî  ÃY ëî  ÃZ ëî  Ã[ ëî  Ã\ ëî  Ã] ëî  Ã^ ëî  Ã_ ëî  Ã` ëî  Ãa ëî  Ãb ëî  Ãc ëî  Ãd ëî  Ãe ëî  Ãf ëî  Ãg ëî  Ãh ëî  Ãi ëî  Ãj ëî  Ãk ëî  Ãl ëî  Ãm ëî  Ãn ëî  Ão ëî  Ãp ëî  Ãq ëî  Ãr ëî  Ãs ëî  Ãt ëî  Ãu ëî  Ãv ëî  Ãw ëî  Ãx ëî  Ãy ëî  Ãz ëî  Ã{ ëî  Ã| ëî  Ã} ëî  Ã~ ëî  Ã ëî  ÃÄ ëî  ÃÅ ëî  ÃÇ ëî  ÃÉ ëî  ÃÑ ëî  ÃÖ ëî  ÃÜ ëî  Ãá ëî  Ãà ëî  Ãâ ëî  Ãä ëî  Ãã ëî  Ãå ëî  Ãç ëî  Ãé ëî  Ãè ëî  Ãê ëî  Ãë ëî  Ãí ëî  Ãì ëî  Ãî ëî  Ãï ëî  Ãñ ëî  Ãó ëî  Ãò ëî  Ãô ëî  Ãö ëî  Ãõ ëî  Ãú ëî  Ãù ëî  Ãû ëî  Ãü ëî  Ã† ëî  Ã° ëî  Ã¢ ëî  Ã£ ëî  Ã§ ëî  Ã• ëî  Ã¶ ëî  Ãß ëî  Ã® ëî  Ã© ëî  Ã™ ëî  Ã´ ëî  Ã¨ ëî  Ã≠ ëî  ÃÆ ëî  ÃØ ëî  Ã∞ ëî  Ã± ëî  Ã≤ ëî  Ã≥ ëî  Ã¥ ëî  Ãµ ëî  Ã∂ ëî  Ã∑ ëî  Ã∏ ëî  Ãπ ëî  Ã∫ ëî  Ãª ëî  Ãº ëî  ÃΩ ëî  Ãæ ëî  Ãø ëî  Ã¿ ëî  Ã¡ ëî  Ã¬ ëî  Ã√ ëî  Ãƒ ëî  Ã≈ ëî  Ã∆ ëî  Ã« ëî  Ã» ëî  Ã… ëî  Ã  ëî  ÃÀ ëî  ÃÃ ëî  ÃÕ ëî  ÃŒ ëî  Ãœ ëî  Ã– ëî  Ã— ëî  Ã“ ëî  Ã” ëî  Ã‘ ëî  Ã’ ëî  Ã÷ ëî  Ã◊ ëî  Ãÿ ëî  ÃŸ ëî  Ã⁄ ëî  Ã€ ëî  Ã‹ ëî  Ã› ëî  Ãﬁ ëî  Ãﬂ ëî  Ã‡ ëî  Ã· ëî  Ã‚ ëî  Ã„ ëî  Ã‰ ëî  ÃÂ ëî  ÃÊ ëî  ÃÁ ëî  ÃË ëî  ÃÈ ëî  ÃÍ ëî  ÃÎ ëî  ÃÏ ëî  ÃÌ ëî  ÃÓ ëî  ÃÔ ëî  Ã ëî  ÃÒ ëî  ÃÚ ëî  ÃÛ ëî  ÃÙ ëî  Ãı ëî  Ãˆ ëî  Ã˜ ëî  Ã¯ ëî  Ã˘ ëî  Ã˙ ëî  Ã˚ ëî  Ã¸ ëî  Ã˝ ëî  Ã˛ ëî  Ãˇ ëî  Õ  ëî  Õ ëî  Õ ëî  Õ ëî  Õ ëî  Õ ëî  Õ ëî  Õ ëî  Õ ëî  Õ	 ëî  Õ
 ëî  Õ ëî  Õ ëî  Õ ëî  Õ ëî  Õ ëî  Õ ëî  Õ ëî  Õ ëî  Õ ëî  Õ ëî  Õ ëî  Õ ëî  Õ ëî  Õ ëî  Õ ëî  Õ ëî  Õ ëî  Õ ëî  Õ ëî  Õ ëî  Õ ëî  Õ  ëî  Õ! ëî  Õ" ëî  Õ# ëî  Õ$ ëî  Õ% ëî  Õ& ëî  Õ' ëî  Õ( ëî  Õ) ëî  Õ* ëî  Õ+ ëî  Õ, ëî  Õ- ëî  Õ. ëî  Õ/ ëî  Õ0 ëî  Õ1 ëî  Õ2 ëî  Õ3 ëî  Õ4 ëî  Õ5 ëî  Õ6 ëî  Õ7 ëî  Õ8 ëî  Õ9 ëî  Õ: ëî  Õ; ëî  Õ< ëî  Õ= ëî  Õ> ëî  Õ? ëî  Õ@ ëî  ÕA ëî  ÕB ëî  ÕC ëî  ÕD ëî  ÕE ëî  ÕF ëî  ÕG ëî  ÕH ëî  ÕI ëî  ÕJ ëî  ÕK ëî  ÕL ëî  ÕM ëî  ÕN ëî  ÕO ëî  ÕP ëî  ÕQ ëî  ÕR ëî  ÕS ëî  ÕT ëî  ÕU ëî  ÕV ëî  ÕW ëî  ÕX ëî  ÕY ëî  ÕZ ëî  Õ[ ëî  Õ\ ëî  Õ] ëî  Õ^ ëî  Õ_ ëî  Õ` ëî  Õa ëî  Õb ëî  Õc ëî  Õd ëî  Õe ëî  Õf ëî  Õg ëî  Õh ëî  Õi ëî  Õj ëî  Õk ëî  Õl ëî  Õm ëî  Õn ëî  Õo ëî  Õp ëî  Õq ëî  Õr ëî  Õs ëî  Õt ëî  Õu ëî  Õv ëî  Õw ëî  Õx ëî  Õy ëî  Õz ëî  Õ{ ëî  Õ| ëî  Õ} ëî  Õ~ ëî  Õ ëî  ÕÄ ëî  ÕÅ ëî  ÕÇ ëî  ÕÉ ëî  ÕÑ ëî  ÕÖ ëî  ÕÜ ëî  Õá ëî  Õà ëî  Õâ ëî  Õä ëî  Õã ëî  Õå ëî  Õç ëî  Õé ëî  Õè ëî  Õê ëî  Õë ëî  Õí ëî  Õì ëî  Õî ëî  Õï ëî  Õñ ëî  Õó ëî  Õò ëî  Õô ëî  Õö ëî  Õõ ëî  Õú ëî  Õù ëî  Õû ëî  Õü ëî  Õ† ëî  Õ° ëî  Õ¢ ëî  Õ£ ëî  Õ§ ëî  Õ• ëî  Õ¶ ëî  Õß ëî  Õ® ëî  Õ© ëî  Õ™ ëî  Õ´ ëî  Õ¨ ëî  Õ≠ ëî  ÕÆ ëî  ÕØ ëî  Õ∞ ëî  Õ± ëî  Õ≤ ëî  Õ≥ ëî  Õ¥ ëî  Õµ ëî  Õ∂ ëî  Õ∑ ëî  Õ∏ ëî  Õπ ëî  Õ∫ ëî  Õª ëî  Õº ëî  ÕΩ ëî  Õæ ëî  Õø ëî  Õ¿ ëî  Õ¡ ëî  Õ¬ ëî  Õ√ ëî  Õƒ ëî  Õ≈ ëî  Õ∆ ëî  Õ« ëî  Õ» ëî  Õ… ëî  Õ  ëî  ÕÀ ëî  ÕÃ ëî  ÕÕ ëî  ÕŒ ëî  Õœ ëî  Õ– ëî  Õ— ëî  Õ“ ëî  Õ” ëî  Õ‘ ëî  Õ’ ëî  Õ÷ ëî  Õ◊ ëî  Õÿ ëî  ÕŸ ëî  Õ⁄ ëî  Õ€ ëî  Õ‹ ëî  Õ› ëî  Õﬁ ëî  Õﬂ ëî  Õ‡ ëî  Õ· êêëŸõ/Users/wangzhe/DevEcoStudioProjects/LittleGallery/Application/oh_modules/.ohpm/@hw-agconnect+auth@1.0.2/oh_modules/@hw-agconnect/auth/src/main/ets/j1/t2.jsë⁄=∆import huks from "@ohos.security.huks";
import { AuthImpl } from "../a";
export class HuksManager {
    constructor() {
        this.deriveHkdfInData = 'deriveHkdfIndata';
        this.handle = undefined;
        this.huksKeyDeriveKeySize = 32;
        this.huksOptions = undefined;
        this.finishOptions = undefined;
        this.initOptions = undefined;
    }
    static getKeyAlies() {
        return 'agconnect_auth_keyAlies' + AuthImpl.getInstance().getRegion();
    }
    static stringToUint8Array(str) {
        let arr = new Array();
        for (let c7 = 0, d7 = str.length; c7 < d7; ++c7) {
            arr.push(str.charCodeAt(c7));
        }
        return new Uint8Array(arr);
    }
    static uint8ArrayToString(z6) {
        let a7 = '';
        for (let b7 = 0; b7 < z6.length; b7++) {
            a7 += String.fromCharCode(z6[b7]);
        }
        return a7;
    }
    async publicGenKeyFunc(keyAlias) {
        console.info(`enter promise generateKeyItem`);
        let w6 = { i: false };
        try {
            await this.generateKeyItem(keyAlias, this.huksOptions, w6)
                .then((data) => {
                console.info(`promise: generateKeyItem success, data = ${JSON.stringify(data)}`);
            })
                .catch((error) => {
                if (w6.i) {
                    throw error;
                }
                else {
                    console.error(`promise: generateKeyItem failed` + error);
                }
            });
        }
        catch (error) {
            console.error(`promise: generateKeyItem input arg invalid` + error);
        }
    }
    async publicInitFunc(keyAlias) {
        console.info(`enter promise doInit`);
        let t6 = { i: false };
        try {
            await this.initSession(keyAlias, this.initOptions, t6)
                .then((data) => {
                console.info(`promise: doInit success, data = ${JSON.stringify(data)}`);
                this.handle = data.handle;
            })
                .catch((error) => {
                if (t6.i) {
                    throw error;
                }
                else {
                    console.error(`promise: doInit failed` + error);
                }
            });
        }
        catch (error) {
            console.error(`promise: doInit input arg invalid` + error);
        }
    }
    async publicUpdateFunc() {
        console.info(`enter promise doUpdate`);
        let q6 = { i: false };
        try {
            await this.updateSession(this.handle, this.initOptions, q6)
                .then((data) => {
                console.info(`promise: doUpdate success, data = ${JSON.stringify(data)}`);
            })
                .catch((error) => {
                if (q6.i) {
                    throw error;
                }
                else {
                    console.error(`promise: doUpdate failed` + error);
                }
            });
        }
        catch (error) {
            console.error(`promise: doUpdate input arg invalid` + error);
        }
    }
    async publicFinishFunc() {
        console.info(`enter promise doFinish`);
        let n6 = { i: false };
        try {
            await this.finishSession(this.handle, this.finishOptions, n6)
                .then((data) => {
                console.info(`promise: doFinish success, data = ${JSON.stringify(data)}`);
            })
                .catch((error) => {
                if (n6.i) {
                    throw error;
                }
                else {
                    console.error(`promise: doFinish failed` + error);
                }
            });
        }
        catch (error) {
            console.error(`promise: doFinish input arg invalid` + error);
        }
    }
    async publicDeleteKeyFunc(keyAlias) {
        console.info(`enter promise deleteKeyItem`);
        let k6 = { i: false };
        let huksOptions = {
            properties: []
        };
        try {
            await this.deleteKeyItem(keyAlias, huksOptions, k6)
                .then((data) => {
                console.info(`promise: deleteKeyItem key success, data = ${JSON.stringify(data)}`);
            })
                .catch((error) => {
                if (k6.i) {
                    throw error;
                }
                else {
                    console.error(`promise: deleteKeyItem failed` + error);
                }
            });
        }
        catch (error) {
            console.error(`promise: deleteKeyItem input arg invalid` + error);
        }
    }
    async initDeriveKey(keyAlias) {
        this.init(keyAlias);
        await this.publicGenKeyFunc(keyAlias);
        await this.publicInitFunc(keyAlias);
        this.initOptions.inData = HuksManager.stringToUint8Array(this.deriveHkdfInData);
        await this.publicUpdateFunc();
        await this.publicFinishFunc();
    }
    getAesEncryptProperties(nonce, iv) {
        let properties = new Array();
        let index = 0;
        properties[index++] = {
            tag: huks.HuksTag.HUKS_TAG_ALGORITHM,
            value: huks.HuksKeyAlg.HUKS_ALG_AES
        };
        properties[index++] = {
            tag: huks.HuksTag.HUKS_TAG_KEY_SIZE,
            value: huks.HuksKeySize.HUKS_AES_KEY_SIZE_256
        };
        properties[index++] = {
            tag: huks.HuksTag.HUKS_TAG_PURPOSE,
            value: huks.HuksKeyPurpose.HUKS_KEY_PURPOSE_ENCRYPT
        };
        properties[index++] = {
            tag: huks.HuksTag.HUKS_TAG_PADDING,
            value: huks.HuksKeyPadding.HUKS_PADDING_NONE
        };
        properties[index++] = {
            tag: huks.HuksTag.HUKS_TAG_BLOCK_MODE,
            value: huks.HuksCipherMode.HUKS_MODE_GCM
        };
        properties[index++] = {
            tag: huks.HuksTag.HUKS_TAG_IV,
            value: HuksManager.stringToUint8Array(iv)
        };
        properties[index++] = {
            tag: huks.HuksTag.HUKS_TAG_NONCE,
            value: HuksManager.stringToUint8Array(nonce)
        };
        return properties;
    }
    getAesDecryptProperties(j6, nonce, iv) {
        let properties = new Array();
        let index = 0;
        properties[index++] = {
            tag: huks.HuksTag.HUKS_TAG_ALGORITHM,
            value: huks.HuksKeyAlg.HUKS_ALG_AES
        };
        properties[index++] = {
            tag: huks.HuksTag.HUKS_TAG_KEY_SIZE,
            value: huks.HuksKeySize.HUKS_AES_KEY_SIZE_256
        };
        properties[index++] = {
            tag: huks.HuksTag.HUKS_TAG_PURPOSE,
            value: huks.HuksKeyPurpose.HUKS_KEY_PURPOSE_DECRYPT
        };
        properties[index++] = {
            tag: huks.HuksTag.HUKS_TAG_PADDING,
            value: huks.HuksKeyPadding.HUKS_PADDING_NONE
        };
        properties[index++] = {
            tag: huks.HuksTag.HUKS_TAG_BLOCK_MODE,
            value: huks.HuksCipherMode.HUKS_MODE_GCM
        };
        properties[index++] = {
            tag: huks.HuksTag.HUKS_TAG_NONCE,
            value: HuksManager.stringToUint8Array(nonce)
        };
        properties[index++] = {
            tag: huks.HuksTag.HUKS_TAG_IV,
            value: HuksManager.stringToUint8Array(iv)
        };
        properties[index++] = {
            tag: huks.HuksTag.HUKS_TAG_AE_TAG,
            value: j6.slice(j6.length - 16)
        };
        return properties;
    }
    async encryptData(plainText, keyAlias, nonce, iv) {
        let hasKey = await this.hasKeyAlies(keyAlias);
        if (!hasKey) {
            await this.initDeriveKey(keyAlias);
        }
        let options = {
            properties: this.getAesEncryptProperties(nonce, iv),
            inData: HuksManager.stringToUint8Array(plainText)
        };
        await huks.initSession(keyAlias, options)
            .then((data) => {
            this.handle = data.handle;
        }).catch((error) => {
            console.error(`promise: init EncryptData failed` + error);
        });
        return new Promise((f6, g6) => {
            huks.finishSession(this.handle, options)
                .then((data) => {
                console.info(`promise: encrypt data success, data is ` +
                    HuksManager.uint8ArrayToString(data.outData));
                if (data.outData) {
                    f6(data.outData);
                }
            }).catch((error) => {
                g6(error);
            });
        });
    }
    async decryptData(s5, keyAlias, nonce, iv) {
        if (s5.length === 0) {
            return Promise.resolve(null);
        }
        let t5 = this.getAesDecryptProperties(s5, nonce, iv);
        let options = {
            properties: t5,
            inData: s5.slice(0, s5.length - 16)
        };
        return new Promise((v5, w5) => {
            huks.initSession(keyAlias, options)
                .then((data) => {
                this.handle = data.handle;
                huks.finishSession(this.handle, options)
                    .then((data) => {
                    if (data && data.outData) {
                        let b6 = HuksManager.uint8ArrayToString(data.outData);
                        v5(b6);
                    }
                    else {
                        v5(null);
                    }
                }).catch((error) => {
                    w5(error);
                });
            }).catch((error) => {
                console.error(`promise: init DecryptData failed` + error);
                v5(null);
            });
        });
    }
    async generateKeyItem(keyAlias, huksOptions, n5) {
        return new Promise((p5, q5) => {
            try {
                huks.generateKeyItem(keyAlias, huksOptions, (error, data) => {
                    if (error) {
                        q5(error);
                    }
                    else {
                        p5(data);
                    }
                });
            }
            catch (error) {
                n5.i = true;
                throw error;
            }
        });
    }
    async initSession(keyAlias, huksOptions, i5) {
        return new Promise((k5, l5) => {
            try {
                huks.initSession(keyAlias, huksOptions, (error, data) => {
                    if (error) {
                        l5(error);
                    }
                    else {
                        k5(data);
                    }
                });
            }
            catch (error) {
                i5.i = true;
                throw error;
            }
        });
    }
    async updateSession(handle, huksOptions, d5) {
        return new Promise((f5, g5) => {
            try {
                huks.updateSession(handle, huksOptions, (error, data) => {
                    if (error) {
                        g5(error);
                    }
                    else {
                        f5(data);
                    }
                });
            }
            catch (error) {
                d5.i = true;
                throw error;
            }
        });
    }
    async finishSession(handle, huksOptions, y4) {
        return new Promise((a5, b5) => {
            try {
                huks.finishSession(handle, huksOptions, (error, data) => {
                    if (error) {
                        b5(error);
                    }
                    else {
                        a5(data);
                    }
                });
            }
            catch (error) {
                y4.i = true;
                throw error;
            }
        });
    }
    async deleteKeyItem(keyAlias, huksOptions, t4) {
        return new Promise((v4, w4) => {
            try {
                huks.deleteKeyItem(keyAlias, huksOptions, (error, data) => {
                    if (error) {
                        w4(error);
                    }
                    else {
                        v4(data);
                    }
                });
            }
            catch (error) {
                t4.i = true;
                throw error;
            }
        });
    }
    init(keyAlias) {
        let properties = new Array();
        properties[0] = {
            tag: huks.HuksTag.HUKS_TAG_ALGORITHM,
            value: huks.HuksKeyAlg.HUKS_ALG_AES,
        };
        properties[1] = {
            tag: huks.HuksTag.HUKS_TAG_PURPOSE,
            value: huks.HuksKeyPurpose.HUKS_KEY_PURPOSE_DERIVE,
        };
        properties[2] = {
            tag: huks.HuksTag.HUKS_TAG_DIGEST,
            value: huks.HuksKeyDigest.HUKS_DIGEST_SHA256,
        };
        properties[3] = {
            tag: huks.HuksTag.HUKS_TAG_KEY_SIZE,
            value: huks.HuksKeySize.HUKS_AES_KEY_SIZE_128,
        };
        properties[4] = {
            tag: huks.HuksTag.HUKS_TAG_DERIVED_AGREED_KEY_STORAGE_FLAG,
            value: huks.HuksKeyStorageType.HUKS_STORAGE_ONLY_USED_IN_HUKS,
        };
        this.huksOptions = {
            properties: properties,
            inData: new Uint8Array(new Array())
        };
        let r4 = new Array();
        r4[0] = {
            tag: huks.HuksTag.HUKS_TAG_ALGORITHM,
            value: huks.HuksKeyAlg.HUKS_ALG_HKDF,
        };
        r4[1] = {
            tag: huks.HuksTag.HUKS_TAG_PURPOSE,
            value: huks.HuksKeyPurpose.HUKS_KEY_PURPOSE_DERIVE,
        };
        r4[2] = {
            tag: huks.HuksTag.HUKS_TAG_DIGEST,
            value: huks.HuksKeyDigest.HUKS_DIGEST_SHA256,
        };
        r4[3] = {
            tag: huks.HuksTag.HUKS_TAG_DERIVE_KEY_SIZE,
            value: this.huksKeyDeriveKeySize,
        };
        this.initOptions = {
            properties: r4,
            inData: new Uint8Array(new Array())
        };
        let s4 = new Array();
        s4[0] = {
            tag: huks.HuksTag.HUKS_TAG_DERIVED_AGREED_KEY_STORAGE_FLAG,
            value: huks.HuksKeyStorageType.HUKS_STORAGE_ONLY_USED_IN_HUKS,
        };
        s4[1] = {
            tag: huks.HuksTag.HUKS_TAG_IS_KEY_ALIAS,
            value: true,
        };
        s4[2] = {
            tag: huks.HuksTag.HUKS_TAG_ALGORITHM,
            value: huks.HuksKeyAlg.HUKS_ALG_AES,
        };
        s4[3] = {
            tag: huks.HuksTag.HUKS_TAG_KEY_SIZE,
            value: huks.HuksKeySize.HUKS_AES_KEY_SIZE_256,
        };
        s4[4] = {
            tag: huks.HuksTag.HUKS_TAG_PURPOSE,
            value: huks.HuksKeyPurpose.HUKS_KEY_PURPOSE_ENCRYPT |
                huks.HuksKeyPurpose.HUKS_KEY_PURPOSE_DECRYPT,
        };
        s4[5] = {
            tag: huks.HuksTag.HUKS_TAG_DIGEST,
            value: huks.HuksKeyDigest.HUKS_DIGEST_SHA256,
        };
        s4[6] = {
            tag: huks.HuksTag.HUKS_TAG_KEY_ALIAS,
            value: HuksManager.stringToUint8Array(keyAlias),
        };
        s4[7] = {
            tag: huks.HuksTag.HUKS_TAG_PADDING,
            value: huks.HuksKeyPadding.HUKS_PADDING_NONE,
        };
        s4[8] = {
            tag: huks.HuksTag.HUKS_TAG_BLOCK_MODE,
            value: huks.HuksCipherMode.HUKS_MODE_GCM,
        };
        this.finishOptions = {
            properties: s4,
            inData: new Uint8Array(new Array())
        };
    }
    async hasKeyAlies(m4) {
        let huksOptions = {
            properties: []
        };
        return new Promise((o4, p4) => {
            try {
                huks.hasKeyItem(m4, huksOptions, (error, data) => {
                    if (error) {
                        p4(error);
                    }
                    else {
                        if (data !== null && data.valueOf() !== null) {
                            o4(data.valueOf());
                        }
                    }
                });
            }
            catch (error) {
                p4(error);
            }
        });
    }
}
class l4 {
    constructor() {
        this.i = false;
    }
}
‘rFí≥@ohos.security.huks§../a‘rGó™assertions®external¢id§meta±moduleSideEffects™resolvedByµsyntheticNamedExportsA√Ÿp hvigor_ignore__Applications_DevEco-Studio.app_Contents_sdk_default_openharmony_ets_api_@ohos.security.huks.d.tsA√™oh-resolve¬GA¬Ÿó/Users/wangzhe/DevEcoStudioProjects/LittleGallery/Application/oh_modules/.ohpm/@hw-agconnect+auth@1.0.2/oh_modules/@hw-agconnect/auth/src/main/ets/a.jsA√™oh-resolve¬ê¬ê‘  ‘rHî≤dynamicImportCacheπexportAllDeclarationCacheªexportNamedDeclarationCache´importCacheêêë‘rIñ§type•start£end´declaration™specifiers¶source∂ExportNamedDeclarationÃIÕ=Ü‘rJñ§type•start£end¢id™superClass§body∞ClassDeclarationÃPÕ=Ü‘rKî§type•start£end§name™IdentifierÃVÃa´HuksManager¿‘rLî§type•start£end§body©ClassBodyÃbÕ=Ü‹ ‘rMò§type•start£end¶static®computed£key§kind•value∞MethodDefinitionÃhÕn¬¬K™IdentifierÃhÃs´constructor´constructor‘rNô§type•start£end¢id™expression©generator•async¶params§body≤FunctionExpressionÃsÕn¿¬¬¬êLÆBlockStatementÃvÕnñ‘rOî§type•start£end™expression≥ExpressionStatementÃÄÃ´‘rPñ§type•start£end®operator§left•right¥AssignmentExpressionÃÄÃ™°=‘rQó§type•start£end¶object®property®computed®optional∞MemberExpressionÃÄÃï‘rRì§type•start£endÆThisExpressionÃÄÃÑK™IdentifierÃÖÃï∞deriveHkdfInData¬¬‘rSï§type•start£end•value£rawßLiteralÃòÃ™∞deriveHkdfIndata≤'deriveHkdfIndata'O≥ExpressionStatementÃ¥ÃÃP¥AssignmentExpressionÃ¥ÃÀ°=Q∞MemberExpressionÃ¥ÃøRÆThisExpressionÃ¥Ã∏K™IdentifierÃπÃø¶handle¬¬K™IdentifierÃ¬ÃÀ©undefinedO≥ExpressionStatementÃ’ÃÙP¥AssignmentExpressionÃ’ÃÛ°=Q∞MemberExpressionÃ’ÃÓRÆThisExpressionÃ’ÃŸK™IdentifierÃ⁄ÃÓ¥huksKeyDeriveKeySize¬¬SßLiteralÃÒÃÛ ¢32O≥ExpressionStatementÃ˝ÕP¥AssignmentExpressionÃ˝Õ°=Q∞MemberExpressionÃ˝ÕRÆThisExpressionÃ˝ÕK™IdentifierÕÕ´huksOptions¬¬K™IdentifierÕÕ©undefinedO≥ExpressionStatementÕ#ÕBP¥AssignmentExpressionÕ#ÕA°=Q∞MemberExpressionÕ#Õ5RÆThisExpressionÕ#Õ'K™IdentifierÕ(Õ5≠finishOptions¬¬K™IdentifierÕ8ÕA©undefinedO≥ExpressionStatementÕKÕhP¥AssignmentExpressionÕKÕg°=Q∞MemberExpressionÕKÕ[RÆThisExpressionÕKÕOK™IdentifierÕPÕ[´initOptions¬¬K™IdentifierÕ^Õg©undefinedM∞MethodDefinitionÕsÕﬁ√¬K™IdentifierÕzÕÖ´getKeyAlies¶methodN≤FunctionExpressionÕÖÕﬁ¿¬¬¬êLÆBlockStatementÕàÕﬁë‘rTî§type•start£end®argumentØReturnStatementÕíÕÿ‘rUñ§type•start£end§left®operator•right∞BinaryExpressionÕôÕ◊SßLiteralÕôÕ≤∑agconnect_auth_keyAliesπ'agconnect_auth_keyAlies'°+‘rVñ§type•start£end¶callee©arguments®optionalÆCallExpressionÕµÕ◊Q∞MemberExpressionÕµÕ’VÆCallExpressionÕµÕÀQ∞MemberExpressionÕµÕ…K™IdentifierÕµÕΩ®AuthImplK™IdentifierÕæÕ…´getInstance¬¬ê¬K™IdentifierÕÃÕ’©getRegion¬¬ê¬M∞MethodDefinitionÕ„Õª√¬K™IdentifierÕÍÕ¸≤stringToUint8Array¶methodN≤FunctionExpressionÕ¸Õª¿¬¬¬ëK™IdentifierÕ˝Õ £strLÆBlockStatementÕÕªì‘rWï§type•start£end¨declarations§kind≥VariableDeclarationÕÕ"ë‘rXï§type•start£end¢id§init≤VariableDeclaratorÕÕ!K™IdentifierÕÕ£arr‘rYï§type•start£end¶callee©arguments≠NewExpressionÕÕ!K™IdentifierÕÕ•Arrayê£let‘rZó§type•start£end§init§test¶update§body¨ForStatementÕ+ÕëW≥VariableDeclarationÕ0ÕKíX≤VariableDeclaratorÕ4Õ:K™IdentifierÕ4Õ6¢c7SßLiteralÕ9Õ: °0X≤VariableDeclaratorÕ<ÕKK™IdentifierÕ<Õ>¢d7Q∞MemberExpressionÕAÕKK™IdentifierÕAÕD£strK™IdentifierÕEÕK¶length¬¬£letU∞BinaryExpressionÕMÕTK™IdentifierÕMÕO¢c7°<K™IdentifierÕRÕT¢d7‘r[ñ§type•start£end®operator¶prefix®argument∞UpdateExpressionÕVÕZ¢++√K™IdentifierÕXÕZ¢c7LÆBlockStatementÕ\ÕëëO≥ExpressionStatementÕjÕáVÆCallExpressionÕjÕÜQ∞MemberExpressionÕjÕrK™IdentifierÕjÕm£arrK™IdentifierÕnÕr§push¬¬ëVÆCallExpressionÕsÕÖQ∞MemberExpressionÕsÕÅK™IdentifierÕsÕv£strK™IdentifierÕwÕÅ™charCodeAt¬¬ëK™IdentifierÕÇÕÑ¢c7¬¬TØReturnStatementÕöÕµY≠NewExpressionÕ°Õ¥K™IdentifierÕ•ÕØ™Uint8ArrayëK™IdentifierÕ∞Õ≥£arrM∞MethodDefinitionÕ¿Õw√¬K™IdentifierÕ«ÕŸ≤uint8ArrayToString¶methodN≤FunctionExpressionÕŸÕw¿¬¬¬ëK™IdentifierÕ⁄Õ‹¢z6LÆBlockStatementÕﬁÕwìW≥VariableDeclarationÕËÕÙëX≤VariableDeclaratorÕÏÕÛK™IdentifierÕÏÕÓ¢a7SßLiteralÕÒÕÛ†¢''£letZ¨ForStatementÕ˝Õ^W≥VariableDeclarationÕÕëX≤VariableDeclaratorÕÕK™IdentifierÕÕ¢b7SßLiteralÕÕ °0£letU∞BinaryExpressionÕÕK™IdentifierÕÕ¢b7°<Q∞MemberExpressionÕÕK™IdentifierÕÕ¢z6K™IdentifierÕÕ¶length¬¬[∞UpdateExpressionÕÕ"¢++¬K™IdentifierÕÕ ¢b7LÆBlockStatementÕ$Õ^ëO≥ExpressionStatementÕ2ÕTP¥AssignmentExpressionÕ2ÕS¢+=K™IdentifierÕ2Õ4¢a7VÆCallExpressionÕ8ÕSQ∞MemberExpressionÕ8ÕKK™IdentifierÕ8Õ>¶StringK™IdentifierÕ?ÕK¨fromCharCode¬¬ëQ∞MemberExpressionÕLÕRK™IdentifierÕLÕN¢z6K™IdentifierÕOÕQ¢b7√¬¬TØReturnStatementÕgÕqK™IdentifierÕnÕp¢a7M∞MethodDefinitionÕ|ÕY¬¬K™IdentifierÕÇÕí∞publicGenKeyFunc¶methodN≤FunctionExpressionÕíÕY¿¬¬√ëK™IdentifierÕìÕõ®keyAliasLÆBlockStatementÕùÕYìO≥ExpressionStatementÕßÕ’VÆCallExpressionÕßÕ‘Q∞MemberExpressionÕßÕ≥K™IdentifierÕßÕÆßconsoleK™IdentifierÕØÕ≥§info¬¬ë‘r\ï§type•start£end´expressions¶quasisØTemplateLiteralÕ¥Õ”êë‘r]ï§type•start£end•value§tailØTemplateElementÕµÕ“‘r^í£raw¶cookedΩenter promise generateKeyItemΩenter promise generateKeyItem√¬W≥VariableDeclarationÕﬁÕÙëX≤VariableDeclaratorÕ‚ÕÛK™IdentifierÕ‚Õ‰¢w6‘r_î§type•start£end™properties∞ObjectExpressionÕÁÕÛë‘r`ô§type•start£end¶method©shorthand®computed£key•value§kind®PropertyÕÈÕÒ¬¬¬K™IdentifierÕÈÕÍ°iSßLiteralÕÏÕÒ¬•false§init£let‘rañ§type•start£end•blockßhandler©finalizer¨TryStatementÕ˝ÕSLÆBlockStatementÕÕ‡ëO≥ExpressionStatementÕÕ÷TØAwaitExpressionÕÕ’VÆCallExpressionÕÕ’Q∞MemberExpressionÕÕÛVÆCallExpressionÕÕ‹Q∞MemberExpressionÕÕ_VÆCallExpressionÕÕIQ∞MemberExpressionÕÕ)RÆThisExpressionÕÕK™IdentifierÕÕ)ØgenerateKeyItem¬¬ìK™IdentifierÕ*Õ2®keyAliasQ∞MemberExpressionÕ4ÕDRÆThisExpressionÕ4Õ8K™IdentifierÕ9ÕD´huksOptions¬¬K™IdentifierÕFÕH¢w6¬K™IdentifierÕ[Õ_§then¬¬ëN∑ArrowFunctionExpressionÕ`Õ€¿¬¬¬ëK™IdentifierÕaÕe§dataLÆBlockStatementÕjÕ€ëO≥ExpressionStatementÕ|ÕÕVÆCallExpressionÕ|ÕÃQ∞MemberExpressionÕ|ÕàK™IdentifierÕ|ÕÉßconsoleK™IdentifierÕÑÕà§info¬¬ë\ØTemplateLiteralÕâÕÀëVÆCallExpressionÕµÕ…Q∞MemberExpressionÕµÕ√K™IdentifierÕµÕπ§JSONK™IdentifierÕ∫Õ√©stringify¬¬ëK™IdentifierÕƒÕ»§data¬í]ØTemplateElementÕäÕ≥^Ÿ)promise: generateKeyItem success, data = Ÿ)promise: generateKeyItem success, data = ¬]ØTemplateElementÕ Õ ^††√¬¬K™IdentifierÕÓÕÛ•catch¬¬ëN∑ArrowFunctionExpressionÕÙÕ‘¿¬¬¬ëK™IdentifierÕıÕ˙•errorLÆBlockStatementÕˇÕ‘ë‘rbñ§type•start£end§test™consequent©alternate´IfStatementÕÕ∆Q∞MemberExpressionÕÕK™IdentifierÕÕ¢w6K™IdentifierÕÕ°i¬¬LÆBlockStatementÕÕOëTÆThrowStatementÕ1Õ=K™IdentifierÕ7Õ<•errorLÆBlockStatementÕeÕ∆ëO≥ExpressionStatementÕ{Õ¥VÆCallExpressionÕ{Õ≥Q∞MemberExpressionÕ{ÕàK™IdentifierÕ{ÕÇßconsoleK™IdentifierÕÉÕà•error¬¬ëU∞BinaryExpressionÕâÕ≤\ØTemplateLiteralÕâÕ™êë]ØTemplateElementÕäÕ©^øpromise: generateKeyItem failedøpromise: generateKeyItem failed√°+K™IdentifierÕ≠Õ≤•error¬¬‘rcï§type•start£end•param§body´CatchClauseÕÈÕSK™IdentifierÕÕı•errorLÆBlockStatementÕ˜ÕSëO≥ExpressionStatementÕÕIVÆCallExpressionÕÕHQ∞MemberExpressionÕÕK™IdentifierÕÕßconsoleK™IdentifierÕÕ•error¬¬ëU∞BinaryExpressionÕÕG\ØTemplateLiteralÕÕ?êë]ØTemplateElementÕÕ>^Ÿ*promise: generateKeyItem input arg invalidŸ*promise: generateKeyItem input arg invalid√°+K™IdentifierÕBÕG•error¬¿M∞MethodDefinitionÕ^Õ	<¬¬K™IdentifierÕdÕrÆpublicInitFunc¶methodN≤FunctionExpressionÕrÕ	<¿¬¬√ëK™IdentifierÕsÕ{®keyAliasLÆBlockStatementÕ}Õ	<ìO≥ExpressionStatementÕáÕ¨VÆCallExpressionÕáÕ´Q∞MemberExpressionÕáÕìK™IdentifierÕáÕéßconsoleK™IdentifierÕèÕì§info¬¬ë\ØTemplateLiteralÕîÕ™êë]ØTemplateElementÕïÕ©^¥enter promise doInit¥enter promise doInit√¬W≥VariableDeclarationÕµÕÀëX≤VariableDeclaratorÕπÕ K™IdentifierÕπÕª¢t6_∞ObjectExpressionÕæÕ ë`®PropertyÕ¿Õ»¬¬¬K™IdentifierÕ¿Õ¡°iSßLiteralÕ√Õ»¬•false§init£leta¨TryStatementÕ‘Õ	6LÆBlockStatementÕÿÕÃëO≥ExpressionStatementÕÊÕ¬TØAwaitExpressionÕÊÕ¡VÆCallExpressionÕÏÕ¡Q∞MemberExpressionÕÏÕËVÆCallExpressionÕÏÕ—Q∞MemberExpressionÕÏÕ2VÆCallExpressionÕÏÕQ∞MemberExpressionÕÏÕ¸RÆThisExpressionÕÏÕK™IdentifierÕÒÕ¸´initSession¬¬ìK™IdentifierÕ˝Õ®keyAliasQ∞MemberExpressionÕÕRÆThisExpressionÕÕK™IdentifierÕÕ´initOptions¬¬K™IdentifierÕÕ¢t6¬K™IdentifierÕ.Õ2§then¬¬ëN∑ArrowFunctionExpressionÕ3Õ–¿¬¬¬ëK™IdentifierÕ4Õ8§dataLÆBlockStatementÕ=Õ–íO≥ExpressionStatementÕOÕóVÆCallExpressionÕOÕñQ∞MemberExpressionÕOÕ[K™IdentifierÕOÕVßconsoleK™IdentifierÕWÕ[§info¬¬ë\ØTemplateLiteralÕ\ÕïëVÆCallExpressionÕÕìQ∞MemberExpressionÕÕçK™IdentifierÕÕÉ§JSONK™IdentifierÕÑÕç©stringify¬¬ëK™IdentifierÕéÕí§data¬í]ØTemplateElementÕ]Õ}^Ÿ promise: doInit success, data = Ÿ promise: doInit success, data = ¬]ØTemplateElementÕîÕî^††√¬O≥ExpressionStatementÕ®Õ¬P¥AssignmentExpressionÕ®Õ¡°=Q∞MemberExpressionÕ®Õ≥RÆThisExpressionÕ®Õ¨K™IdentifierÕ≠Õ≥¶handle¬¬Q∞MemberExpressionÕ∂Õ¡K™IdentifierÕ∂Õ∫§dataK™IdentifierÕªÕ¡¶handle¬¬¬K™IdentifierÕ„ÕË•catch¬¬ëN∑ArrowFunctionExpressionÕÈÕ¿¿¬¬¬ëK™IdentifierÕÍÕÔ•errorLÆBlockStatementÕÙÕ¿ëb´IfStatementÕÕ≤Q∞MemberExpressionÕ
ÕK™IdentifierÕ
Õ¢t6K™IdentifierÕÕ°i¬¬LÆBlockStatementÕÕDëTÆThrowStatementÕ&Õ2K™IdentifierÕ,Õ1•errorLÆBlockStatementÕZÕ≤ëO≥ExpressionStatementÕpÕ†VÆCallExpressionÕpÕüQ∞MemberExpressionÕpÕ}K™IdentifierÕpÕwßconsoleK™IdentifierÕxÕ}•error¬¬ëU∞BinaryExpressionÕ~Õû\ØTemplateLiteralÕ~Õñêë]ØTemplateElementÕÕï^∂promise: doInit failed∂promise: doInit failed√°+K™IdentifierÕôÕû•error¬¬c´CatchClauseÕ’Õ	6K™IdentifierÕ‹Õ·•errorLÆBlockStatementÕ„Õ	6ëO≥ExpressionStatementÕÒÕ	,VÆCallExpressionÕÒÕ	+Q∞MemberExpressionÕÒÕ˛K™IdentifierÕÒÕ¯ßconsoleK™IdentifierÕ˘Õ˛•error¬¬ëU∞BinaryExpressionÕˇÕ	*\ØTemplateLiteralÕˇÕ	"êë]ØTemplateElementÕ	 Õ	!^Ÿ!promise: doInit input arg invalidŸ!promise: doInit input arg invalid√°+K™IdentifierÕ	%Õ	*•error¬¿M∞MethodDefinitionÕ	AÕ˚¬¬K™IdentifierÕ	GÕ	W∞publicUpdateFunc¶methodN≤FunctionExpressionÕ	WÕ˚¿¬¬√êLÆBlockStatementÕ	ZÕ˚ìO≥ExpressionStatementÕ	dÕ	ãVÆCallExpressionÕ	dÕ	äQ∞MemberExpressionÕ	dÕ	pK™IdentifierÕ	dÕ	kßconsoleK™IdentifierÕ	lÕ	p§info¬¬ë\ØTemplateLiteralÕ	qÕ	âêë]ØTemplateElementÕ	rÕ	à^∂enter promise doUpdate∂enter promise doUpdate√¬W≥VariableDeclarationÕ	îÕ	™ëX≤VariableDeclaratorÕ	òÕ	©K™IdentifierÕ	òÕ	ö¢q6_∞ObjectExpressionÕ	ùÕ	©ë`®PropertyÕ	üÕ	ß¬¬¬K™IdentifierÕ	üÕ	†°iSßLiteralÕ	¢Õ	ß¬•false§init£leta¨TryStatementÕ	≥ÕıLÆBlockStatementÕ	∑ÕâëO≥ExpressionStatementÕ	≈ÕTØAwaitExpressionÕ	≈Õ~VÆCallExpressionÕ	ÀÕ~Q∞MemberExpressionÕ	ÀÕ
£VÆCallExpressionÕ	ÀÕ
åQ∞MemberExpressionÕ	ÀÕ
VÆCallExpressionÕ	ÀÕ
 Q∞MemberExpressionÕ	ÀÕ	›RÆThisExpressionÕ	ÀÕ	œK™IdentifierÕ	–Õ	›≠updateSession¬¬ìQ∞MemberExpressionÕ	ﬁÕ	ÈRÆThisExpressionÕ	ﬁÕ	‚K™IdentifierÕ	„Õ	È¶handle¬¬Q∞MemberExpressionÕ	ÎÕ	˚RÆThisExpressionÕ	ÎÕ	ÔK™IdentifierÕ	Õ	˚´initOptions¬¬K™IdentifierÕ	˝Õ	ˇ¢q6¬K™IdentifierÕ
Õ
§then¬¬ëN∑ArrowFunctionExpressionÕ
Õ
ã¿¬¬¬ëK™IdentifierÕ
Õ
§dataLÆBlockStatementÕ
!Õ
ãëO≥ExpressionStatementÕ
3Õ
}VÆCallExpressionÕ
3Õ
|Q∞MemberExpressionÕ
3Õ
?K™IdentifierÕ
3Õ
:ßconsoleK™IdentifierÕ
;Õ
?§info¬¬ë\ØTemplateLiteralÕ
@Õ
{ëVÆCallExpressionÕ
eÕ
yQ∞MemberExpressionÕ
eÕ
sK™IdentifierÕ
eÕ
i§JSONK™IdentifierÕ
jÕ
s©stringify¬¬ëK™IdentifierÕ
tÕ
x§data¬í]ØTemplateElementÕ
AÕ
c^Ÿ"promise: doUpdate success, data = Ÿ"promise: doUpdate success, data = ¬]ØTemplateElementÕ
zÕ
z^††√¬¬K™IdentifierÕ
ûÕ
£•catch¬¬ëN∑ArrowFunctionExpressionÕ
§Õ}¿¬¬¬ëK™IdentifierÕ
•Õ
™•errorLÆBlockStatementÕ
ØÕ}ëb´IfStatementÕ
¡ÕoQ∞MemberExpressionÕ
≈Õ
…K™IdentifierÕ
≈Õ
«¢q6K™IdentifierÕ
»Õ
…°i¬¬LÆBlockStatementÕ
ÀÕ
ˇëTÆThrowStatementÕ
·Õ
ÌK™IdentifierÕ
ÁÕ
Ï•errorLÆBlockStatementÕÕoëO≥ExpressionStatementÕ+Õ]VÆCallExpressionÕ+Õ\Q∞MemberExpressionÕ+Õ8K™IdentifierÕ+Õ2ßconsoleK™IdentifierÕ3Õ8•error¬¬ëU∞BinaryExpressionÕ9Õ[\ØTemplateLiteralÕ9ÕSêë]ØTemplateElementÕ:ÕR^∏promise: doUpdate failed∏promise: doUpdate failed√°+K™IdentifierÕVÕ[•error¬¬c´CatchClauseÕíÕıK™IdentifierÕôÕû•errorLÆBlockStatementÕ†ÕıëO≥ExpressionStatementÕÆÕÎVÆCallExpressionÕÆÕÍQ∞MemberExpressionÕÆÕªK™IdentifierÕÆÕµßconsoleK™IdentifierÕ∂Õª•error¬¬ëU∞BinaryExpressionÕºÕÈ\ØTemplateLiteralÕºÕ·êë]ØTemplateElementÕΩÕ‡^Ÿ#promise: doUpdate input arg invalidŸ#promise: doUpdate input arg invalid√°+K™IdentifierÕ‰ÕÈ•error¬¿M∞MethodDefinitionÕ Õº¬¬K™IdentifierÕÕ∞publicFinishFunc¶methodN≤FunctionExpressionÕÕº¿¬¬√êLÆBlockStatementÕÕºìO≥ExpressionStatementÕ#ÕJVÆCallExpressionÕ#ÕIQ∞MemberExpressionÕ#Õ/K™IdentifierÕ#Õ*ßconsoleK™IdentifierÕ+Õ/§info¬¬ë\ØTemplateLiteralÕ0ÕHêë]ØTemplateElementÕ1ÕG^∂enter promise doFinish∂enter promise doFinish√¬W≥VariableDeclarationÕSÕiëX≤VariableDeclaratorÕWÕhK™IdentifierÕWÕY¢n6_∞ObjectExpressionÕ\Õhë`®PropertyÕ^Õf¬¬¬K™IdentifierÕ^Õ_°iSßLiteralÕaÕf¬•false§init£leta¨TryStatementÕrÕ∂LÆBlockStatementÕvÕJëO≥ExpressionStatementÕÑÕ@TØAwaitExpressionÕÑÕ?VÆCallExpressionÕäÕ?Q∞MemberExpressionÕäÕdVÆCallExpressionÕäÕMQ∞MemberExpressionÕäÕ◊VÆCallExpressionÕäÕ¡Q∞MemberExpressionÕäÕúRÆThisExpressionÕäÕéK™IdentifierÕèÕú≠finishSession¬¬ìQ∞MemberExpressionÕùÕ®RÆThisExpressionÕùÕ°K™IdentifierÕ¢Õ®¶handle¬¬Q∞MemberExpressionÕ™ÕºRÆThisExpressionÕ™ÕÆK™IdentifierÕØÕº≠finishOptions¬¬K™IdentifierÕæÕ¿¢n6¬K™IdentifierÕ”Õ◊§then¬¬ëN∑ArrowFunctionExpressionÕÿÕL¿¬¬¬ëK™IdentifierÕŸÕ›§dataLÆBlockStatementÕ‚ÕLëO≥ExpressionStatementÕÙÕ>VÆCallExpressionÕÙÕ=Q∞MemberExpressionÕÙÕ K™IdentifierÕÙÕ˚ßconsoleK™IdentifierÕ¸Õ §info¬¬ë\ØTemplateLiteralÕÕ<ëVÆCallExpressionÕ&Õ:Q∞MemberExpressionÕ&Õ4K™IdentifierÕ&Õ*§JSONK™IdentifierÕ+Õ4©stringify¬¬ëK™IdentifierÕ5Õ9§data¬í]ØTemplateElementÕÕ$^Ÿ"promise: doFinish success, data = Ÿ"promise: doFinish success, data = ¬]ØTemplateElementÕ;Õ;^††√¬¬K™IdentifierÕ_Õd•catch¬¬ëN∑ArrowFunctionExpressionÕeÕ>¿¬¬¬ëK™IdentifierÕfÕk•errorLÆBlockStatementÕpÕ>ëb´IfStatementÕÇÕ0Q∞MemberExpressionÕÜÕäK™IdentifierÕÜÕà¢n6K™IdentifierÕâÕä°i¬¬LÆBlockStatementÕåÕ¿ëTÆThrowStatementÕ¢ÕÆK™IdentifierÕ®Õ≠•errorLÆBlockStatementÕ÷Õ0ëO≥ExpressionStatementÕÏÕVÆCallExpressionÕÏÕQ∞MemberExpressionÕÏÕ˘K™IdentifierÕÏÕÛßconsoleK™IdentifierÕÙÕ˘•error¬¬ëU∞BinaryExpressionÕ˙Õ\ØTemplateLiteralÕ˙Õêë]ØTemplateElementÕ˚Õ^∏promise: doFinish failed∏promise: doFinish failed√°+K™IdentifierÕÕ•error¬¬c´CatchClauseÕSÕ∂K™IdentifierÕZÕ_•errorLÆBlockStatementÕaÕ∂ëO≥ExpressionStatementÕoÕ¨VÆCallExpressionÕoÕ´Q∞MemberExpressionÕoÕ|K™IdentifierÕoÕvßconsoleK™IdentifierÕwÕ|•error¬¬ëU∞BinaryExpressionÕ}Õ™\ØTemplateLiteralÕ}Õ¢êë]ØTemplateElementÕ~Õ°^Ÿ#promise: doFinish input arg invalidŸ#promise: doFinish input arg invalid√°+K™IdentifierÕ•Õ™•error¬¿M∞MethodDefinitionÕ¡Õÿ¬¬K™IdentifierÕ«Õ⁄≥publicDeleteKeyFunc¶methodN≤FunctionExpressionÕ⁄Õÿ¿¬¬√ëK™IdentifierÕ€Õ„®keyAliasLÆBlockStatementÕÂÕÿîO≥ExpressionStatementÕÔÕVÆCallExpressionÕÔÕQ∞MemberExpressionÕÔÕ˚K™IdentifierÕÔÕˆßconsoleK™IdentifierÕ˜Õ˚§info¬¬ë\ØTemplateLiteralÕ¸Õêë]ØTemplateElementÕ˝Õ^ªenter promise deleteKeyItemªenter promise deleteKeyItem√¬W≥VariableDeclarationÕ$Õ:ëX≤VariableDeclaratorÕ(Õ9K™IdentifierÕ(Õ*¢k6_∞ObjectExpressionÕ-Õ9ë`®PropertyÕ/Õ7¬¬¬K™IdentifierÕ/Õ0°iSßLiteralÕ2Õ7¬•false§init£letW≥VariableDeclarationÕCÕ|ëX≤VariableDeclaratorÕGÕ{K™IdentifierÕGÕR´huksOptions_∞ObjectExpressionÕUÕ{ë`®PropertyÕcÕq¬¬¬K™IdentifierÕcÕm™properties‘rdî§type•start£end®elementsØArrayExpressionÕoÕqê§init£leta¨TryStatementÕÖÕ“LÆBlockStatementÕâÕaëO≥ExpressionStatementÕóÕWTØAwaitExpressionÕóÕVVÆCallExpressionÕùÕVQ∞MemberExpressionÕùÕvVÆCallExpressionÕùÕ_Q∞MemberExpressionÕùÕ‡VÆCallExpressionÕùÕ Q∞MemberExpressionÕùÕØRÆThisExpressionÕùÕ°K™IdentifierÕ¢ÕØ≠deleteKeyItem¬¬ìK™IdentifierÕ∞Õ∏®keyAliasK™IdentifierÕ∫Õ≈´huksOptionsK™IdentifierÕ«Õ…¢k6¬K™IdentifierÕ‹Õ‡§then¬¬ëN∑ArrowFunctionExpressionÕ·Õ^¿¬¬¬ëK™IdentifierÕ‚ÕÊ§dataLÆBlockStatementÕÎÕ^ëO≥ExpressionStatementÕ˝ÕPVÆCallExpressionÕ˝ÕOQ∞MemberExpressionÕ˝Õ	K™IdentifierÕ˝ÕßconsoleK™IdentifierÕÕ	§info¬¬ë\ØTemplateLiteralÕ
ÕNëVÆCallExpressionÕ8ÕLQ∞MemberExpressionÕ8ÕFK™IdentifierÕ8Õ<§JSONK™IdentifierÕ=ÕF©stringify¬¬ëK™IdentifierÕGÕK§data¬í]ØTemplateElementÕÕ6^Ÿ+promise: deleteKeyItem key success, data = Ÿ+promise: deleteKeyItem key success, data = ¬]ØTemplateElementÕMÕM^††√¬¬K™IdentifierÕqÕv•catch¬¬ëN∑ArrowFunctionExpressionÕwÕU¿¬¬¬ëK™IdentifierÕxÕ}•errorLÆBlockStatementÕÇÕUëb´IfStatementÕîÕGQ∞MemberExpressionÕòÕúK™IdentifierÕòÕö¢k6K™IdentifierÕõÕú°i¬¬LÆBlockStatementÕûÕ“ëTÆThrowStatementÕ¥Õ¿K™IdentifierÕ∫Õø•errorLÆBlockStatementÕËÕGëO≥ExpressionStatementÕ˛Õ5VÆCallExpressionÕ˛Õ4Q∞MemberExpressionÕ˛ÕK™IdentifierÕ˛ÕßconsoleK™IdentifierÕÕ•error¬¬ëU∞BinaryExpressionÕÕ3\ØTemplateLiteralÕÕ+êë]ØTemplateElementÕÕ*^Ωpromise: deleteKeyItem failedΩpromise: deleteKeyItem failed√°+K™IdentifierÕ.Õ3•error¬¬c´CatchClauseÕjÕ“K™IdentifierÕqÕv•errorLÆBlockStatementÕxÕ“ëO≥ExpressionStatementÕÜÕ»VÆCallExpressionÕÜÕ«Q∞MemberExpressionÕÜÕìK™IdentifierÕÜÕçßconsoleK™IdentifierÕéÕì•error¬¬ëU∞BinaryExpressionÕîÕ∆\ØTemplateLiteralÕîÕæêë]ØTemplateElementÕïÕΩ^Ÿ(promise: deleteKeyItem input arg invalidŸ(promise: deleteKeyItem input arg invalid√°+K™IdentifierÕ¡Õ∆•error¬¿M∞MethodDefinitionÕ›Õ"¬¬K™IdentifierÕ„Õ≠initDeriveKey¶methodN≤FunctionExpressionÕÕ"¿¬¬√ëK™IdentifierÕÒÕ˘®keyAliasLÆBlockStatementÕ˚Õ"ñO≥ExpressionStatementÕÕVÆCallExpressionÕÕQ∞MemberExpressionÕÕRÆThisExpressionÕÕ	K™IdentifierÕ
Õ§init¬¬ëK™IdentifierÕÕ®keyAlias¬O≥ExpressionStatementÕ"ÕHTØAwaitExpressionÕ"ÕGVÆCallExpressionÕ(ÕGQ∞MemberExpressionÕ(Õ=RÆThisExpressionÕ(Õ,K™IdentifierÕ-Õ=∞publicGenKeyFunc¬¬ëK™IdentifierÕ>ÕF®keyAlias¬O≥ExpressionStatementÕQÕuTØAwaitExpressionÕQÕtVÆCallExpressionÕWÕtQ∞MemberExpressionÕWÕjRÆThisExpressionÕWÕ[K™IdentifierÕ\ÕjÆpublicInitFunc¬¬ëK™IdentifierÕkÕs®keyAlias¬O≥ExpressionStatementÕ~ÕŒP¥AssignmentExpressionÕ~ÕÕ°=Q∞MemberExpressionÕ~ÕïQ∞MemberExpressionÕ~ÕéRÆThisExpressionÕ~ÕÇK™IdentifierÕÉÕé´initOptions¬¬K™IdentifierÕèÕï¶inData¬¬VÆCallExpressionÕòÕÕQ∞MemberExpressionÕòÕ∂K™IdentifierÕòÕ£´HuksManagerK™IdentifierÕ§Õ∂≤stringToUint8Array¬¬ëQ∞MemberExpressionÕ∑ÕÃRÆThisExpressionÕ∑ÕªK™IdentifierÕºÕÃ∞deriveHkdfInData¬¬¬O≥ExpressionStatementÕ◊ÕıTØAwaitExpressionÕ◊ÕÙVÆCallExpressionÕ›ÕÙQ∞MemberExpressionÕ›ÕÚRÆThisExpressionÕ›Õ·K™IdentifierÕ‚ÕÚ∞publicUpdateFunc¬¬ê¬O≥ExpressionStatementÕ˛ÕTØAwaitExpressionÕ˛ÕVÆCallExpressionÕÕQ∞MemberExpressionÕÕRÆThisExpressionÕÕK™IdentifierÕ	Õ∞publicFinishFunc¬¬ê¬M∞MethodDefinitionÕ'Õ¨¬¬K™IdentifierÕ'Õ>∑getAesEncryptProperties¶methodN≤FunctionExpressionÕ>Õ¨¿¬¬¬íK™IdentifierÕ?ÕD•nonceK™IdentifierÕFÕH¢ivLÆBlockStatementÕJÕ¨öW≥VariableDeclarationÕTÕqëX≤VariableDeclaratorÕXÕpK™IdentifierÕXÕb™propertiesY≠NewExpressionÕeÕpK™IdentifierÕiÕn•Arrayê£letW≥VariableDeclarationÕzÕàëX≤VariableDeclaratorÕ~ÕáK™IdentifierÕ~ÕÉ•indexSßLiteralÕÜÕá °0£letO≥ExpressionStatementÕëÕP¥AssignmentExpressionÕëÕ°=Q∞MemberExpressionÕëÕ§K™IdentifierÕëÕõ™properties[∞UpdateExpressionÕúÕ£¢++¬K™IdentifierÕúÕ°•index√¬_∞ObjectExpressionÕßÕí`®PropertyÕµÕŸ¬¬¬K™IdentifierÕµÕ∏£tagQ∞MemberExpressionÕ∫ÕŸQ∞MemberExpressionÕ∫Õ∆K™IdentifierÕ∫Õæ§huksK™IdentifierÕøÕ∆ßHuksTag¬¬K™IdentifierÕ«ÕŸ≤HUKS_TAG_ALGORITHM¬¬§init`®PropertyÕÁÕ
¬¬¬K™IdentifierÕÁÕÏ•valueQ∞MemberExpressionÕÓÕ
Q∞MemberExpressionÕÓÕ˝K™IdentifierÕÓÕÚ§huksK™IdentifierÕÛÕ˝™HuksKeyAlg¬¬K™IdentifierÕ˛Õ
¨HUKS_ALG_AES¬¬§initO≥ExpressionStatementÕÕ´P¥AssignmentExpressionÕÕ™°=Q∞MemberExpressionÕÕ1K™IdentifierÕÕ(™properties[∞UpdateExpressionÕ)Õ0¢++¬K™IdentifierÕ)Õ.•index√¬_∞ObjectExpressionÕ4Õ™í`®PropertyÕBÕe¬¬¬K™IdentifierÕBÕE£tagQ∞MemberExpressionÕGÕeQ∞MemberExpressionÕGÕSK™IdentifierÕGÕK§huksK™IdentifierÕLÕSßHuksTag¬¬K™IdentifierÕTÕe±HUKS_TAG_KEY_SIZE¬¬§init`®PropertyÕsÕ†¬¬¬K™IdentifierÕsÕx•valueQ∞MemberExpressionÕzÕ†Q∞MemberExpressionÕzÕäK™IdentifierÕzÕ~§huksK™IdentifierÕÕä´HuksKeySize¬¬K™IdentifierÕãÕ†µHUKS_AES_KEY_SIZE_256¬¬§initO≥ExpressionStatementÕ¥ÕFP¥AssignmentExpressionÕ¥ÕE°=Q∞MemberExpressionÕ¥Õ«K™IdentifierÕ¥Õæ™properties[∞UpdateExpressionÕøÕ∆¢++¬K™IdentifierÕøÕƒ•index√¬_∞ObjectExpressionÕ ÕEí`®PropertyÕÿÕ˙¬¬¬K™IdentifierÕÿÕ€£tagQ∞MemberExpressionÕ›Õ˙Q∞MemberExpressionÕ›ÕÈK™IdentifierÕ›Õ·§huksK™IdentifierÕ‚ÕÈßHuksTag¬¬K™IdentifierÕÍÕ˙∞HUKS_TAG_PURPOSE¬¬§init`®PropertyÕÕ;¬¬¬K™IdentifierÕÕ•valueQ∞MemberExpressionÕÕ;Q∞MemberExpressionÕÕ"K™IdentifierÕÕ§huksK™IdentifierÕÕ"ÆHuksKeyPurpose¬¬K™IdentifierÕ#Õ;∏HUKS_KEY_PURPOSE_ENCRYPT¬¬§initO≥ExpressionStatementÕOÕ⁄P¥AssignmentExpressionÕOÕŸ°=Q∞MemberExpressionÕOÕbK™IdentifierÕOÕY™properties[∞UpdateExpressionÕZÕa¢++¬K™IdentifierÕZÕ_•index√¬_∞ObjectExpressionÕeÕŸí`®PropertyÕsÕï¬¬¬K™IdentifierÕsÕv£tagQ∞MemberExpressionÕxÕïQ∞MemberExpressionÕxÕÑK™IdentifierÕxÕ|§huksK™IdentifierÕ}ÕÑßHuksTag¬¬K™IdentifierÕÖÕï∞HUKS_TAG_PADDING¬¬§init`®PropertyÕ£Õœ¬¬¬K™IdentifierÕ£Õ®•valueQ∞MemberExpressionÕ™ÕœQ∞MemberExpressionÕ™ÕΩK™IdentifierÕ™ÕÆ§huksK™IdentifierÕØÕΩÆHuksKeyPadding¬¬K™IdentifierÕæÕœ±HUKS_PADDING_NONE¬¬§initO≥ExpressionStatementÕ„ÕmP¥AssignmentExpressionÕ„Õl°=Q∞MemberExpressionÕ„ÕˆK™IdentifierÕ„ÕÌ™properties[∞UpdateExpressionÕÓÕı¢++¬K™IdentifierÕÓÕÛ•index√¬_∞ObjectExpressionÕ˘Õlí`®PropertyÕÕ,¬¬¬K™IdentifierÕÕ
£tagQ∞MemberExpressionÕÕ,Q∞MemberExpressionÕÕK™IdentifierÕÕ§huksK™IdentifierÕÕßHuksTag¬¬K™IdentifierÕÕ,≥HUKS_TAG_BLOCK_MODE¬¬§init`®PropertyÕ:Õb¬¬¬K™IdentifierÕ:Õ?•valueQ∞MemberExpressionÕAÕbQ∞MemberExpressionÕAÕTK™IdentifierÕAÕE§huksK™IdentifierÕFÕTÆHuksCipherMode¬¬K™IdentifierÕUÕb≠HUKS_MODE_GCM¬¬§initO≥ExpressionStatementÕvÕ˘P¥AssignmentExpressionÕvÕ¯°=Q∞MemberExpressionÕvÕâK™IdentifierÕvÕÄ™properties[∞UpdateExpressionÕÅÕà¢++¬K™IdentifierÕÅÕÜ•index√¬_∞ObjectExpressionÕåÕ¯í`®PropertyÕöÕ∑¬¬¬K™IdentifierÕöÕù£tagQ∞MemberExpressionÕüÕ∑Q∞MemberExpressionÕüÕ´K™IdentifierÕüÕ£§huksK™IdentifierÕ§Õ´ßHuksTag¬¬K™IdentifierÕ¨Õ∑´HUKS_TAG_IV¬¬§init`®PropertyÕ≈ÕÓ¬¬¬K™IdentifierÕ≈Õ •valueVÆCallExpressionÕÃÕÓQ∞MemberExpressionÕÃÕÍK™IdentifierÕÃÕ◊´HuksManagerK™IdentifierÕÿÕÍ≤stringToUint8Array¬¬ëK™IdentifierÕÎÕÌ¢iv¬§initO≥ExpressionStatementÕÕãP¥AssignmentExpressionÕÕä°=Q∞MemberExpressionÕÕK™IdentifierÕÕ™properties[∞UpdateExpressionÕÕ¢++¬K™IdentifierÕÕ•index√¬_∞ObjectExpressionÕÕäí`®PropertyÕ&ÕF¬¬¬K™IdentifierÕ&Õ)£tagQ∞MemberExpressionÕ+ÕFQ∞MemberExpressionÕ+Õ7K™IdentifierÕ+Õ/§huksK™IdentifierÕ0Õ7ßHuksTag¬¬K™IdentifierÕ8ÕFÆHUKS_TAG_NONCE¬¬§init`®PropertyÕTÕÄ¬¬¬K™IdentifierÕTÕY•valueVÆCallExpressionÕ[ÕÄQ∞MemberExpressionÕ[ÕyK™IdentifierÕ[Õf´HuksManagerK™IdentifierÕgÕy≤stringToUint8Array¬¬ëK™IdentifierÕzÕ•nonce¬§initTØReturnStatementÕîÕ¶K™IdentifierÕõÕ•™propertiesM∞MethodDefinitionÕ±Õ¿¬¬K™IdentifierÕ±Õ»∑getAesDecryptProperties¶methodN≤FunctionExpressionÕ»Õ¿¿¬¬¬ìK™IdentifierÕ…ÕÀ¢j6K™IdentifierÕÕÕ“•nonceK™IdentifierÕ‘Õ÷¢ivLÆBlockStatementÕÿÕ¿õW≥VariableDeclarationÕ‚ÕˇëX≤VariableDeclaratorÕÊÕ˛K™IdentifierÕÊÕ™propertiesY≠NewExpressionÕÛÕ˛K™IdentifierÕ˜Õ¸•Arrayê£letW≥VariableDeclarationÕÕëX≤VariableDeclaratorÕÕK™IdentifierÕÕ•indexSßLiteralÕÕ °0£letO≥ExpressionStatementÕÕ£P¥AssignmentExpressionÕÕ¢°=Q∞MemberExpressionÕÕ2K™IdentifierÕÕ)™properties[∞UpdateExpressionÕ*Õ1¢++¬K™IdentifierÕ*Õ/•index√¬_∞ObjectExpressionÕ5Õ¢í`®PropertyÕCÕg¬¬¬K™IdentifierÕCÕF£tagQ∞MemberExpressionÕHÕgQ∞MemberExpressionÕHÕTK™IdentifierÕHÕL§huksK™IdentifierÕMÕTßHuksTag¬¬K™IdentifierÕUÕg≤HUKS_TAG_ALGORITHM¬¬§init`®PropertyÕuÕò¬¬¬K™IdentifierÕuÕz•valueQ∞MemberExpressionÕ|ÕòQ∞MemberExpressionÕ|ÕãK™IdentifierÕ|ÕÄ§huksK™IdentifierÕÅÕã™HuksKeyAlg¬¬K™IdentifierÕåÕò¨HUKS_ALG_AES¬¬§initO≥ExpressionStatementÕ¨Õ9P¥AssignmentExpressionÕ¨Õ8°=Q∞MemberExpressionÕ¨ÕøK™IdentifierÕ¨Õ∂™properties[∞UpdateExpressionÕ∑Õæ¢++¬K™IdentifierÕ∑Õº•index√¬_∞ObjectExpressionÕ¬Õ8í`®PropertyÕ–ÕÛ¬¬¬K™IdentifierÕ–Õ”£tagQ∞MemberExpressionÕ’ÕÛQ∞MemberExpressionÕ’Õ·K™IdentifierÕ’ÕŸ§huksK™IdentifierÕ⁄Õ·ßHuksTag¬¬K™IdentifierÕ‚ÕÛ±HUKS_TAG_KEY_SIZE¬¬§init`®PropertyÕÕ.¬¬¬K™IdentifierÕÕ•valueQ∞MemberExpressionÕÕ.Q∞MemberExpressionÕÕK™IdentifierÕÕ§huksK™IdentifierÕÕ´HuksKeySize¬¬K™IdentifierÕÕ.µHUKS_AES_KEY_SIZE_256¬¬§initO≥ExpressionStatementÕBÕ‘P¥AssignmentExpressionÕBÕ”°=Q∞MemberExpressionÕBÕUK™IdentifierÕBÕL™properties[∞UpdateExpressionÕMÕT¢++¬K™IdentifierÕMÕR•index√¬_∞ObjectExpressionÕXÕ”í`®PropertyÕfÕà¬¬¬K™IdentifierÕfÕi£tagQ∞MemberExpressionÕkÕàQ∞MemberExpressionÕkÕwK™IdentifierÕkÕo§huksK™IdentifierÕpÕwßHuksTag¬¬K™IdentifierÕxÕà∞HUKS_TAG_PURPOSE¬¬§init`®PropertyÕñÕ…¬¬¬K™IdentifierÕñÕõ•valueQ∞MemberExpressionÕùÕ…Q∞MemberExpressionÕùÕ∞K™IdentifierÕùÕ°§huksK™IdentifierÕ¢Õ∞ÆHuksKeyPurpose¬¬K™IdentifierÕ±Õ…∏HUKS_KEY_PURPOSE_DECRYPT¬¬§initO≥ExpressionStatementÕ›ÕhP¥AssignmentExpressionÕ›Õg°=Q∞MemberExpressionÕ›ÕK™IdentifierÕ›ÕÁ™properties[∞UpdateExpressionÕËÕÔ¢++¬K™IdentifierÕËÕÌ•index√¬_∞ObjectExpressionÕÛÕgí`®PropertyÕÕ#¬¬¬K™IdentifierÕÕ£tagQ∞MemberExpressionÕÕ#Q∞MemberExpressionÕÕK™IdentifierÕÕ
§huksK™IdentifierÕÕßHuksTag¬¬K™IdentifierÕÕ#∞HUKS_TAG_PADDING¬¬§init`®PropertyÕ1Õ]¬¬¬K™IdentifierÕ1Õ6•valueQ∞MemberExpressionÕ8Õ]Q∞MemberExpressionÕ8ÕKK™IdentifierÕ8Õ<§huksK™IdentifierÕ=ÕKÆHuksKeyPadding¬¬K™IdentifierÕLÕ]±HUKS_PADDING_NONE¬¬§initO≥ExpressionStatementÕqÕ˚P¥AssignmentExpressionÕqÕ˙°=Q∞MemberExpressionÕqÕÑK™IdentifierÕqÕ{™properties[∞UpdateExpressionÕ|ÕÉ¢++¬K™IdentifierÕ|ÕÅ•index√¬_∞ObjectExpressionÕáÕ˙í`®PropertyÕïÕ∫¬¬¬K™IdentifierÕïÕò£tagQ∞MemberExpressionÕöÕ∫Q∞MemberExpressionÕöÕ¶K™IdentifierÕöÕû§huksK™IdentifierÕüÕ¶ßHuksTag¬¬K™IdentifierÕßÕ∫≥HUKS_TAG_BLOCK_MODE¬¬§init`®PropertyÕ»Õ¬¬¬K™IdentifierÕ»ÕÕ•valueQ∞MemberExpressionÕœÕQ∞MemberExpressionÕœÕ‚K™IdentifierÕœÕ”§huksK™IdentifierÕ‘Õ‚ÆHuksCipherMode¬¬K™IdentifierÕ„Õ≠HUKS_MODE_GCM¬¬§initO≥ExpressionStatementÕÕçP¥AssignmentExpressionÕÕå°=Q∞MemberExpressionÕÕK™IdentifierÕÕ™properties[∞UpdateExpressionÕÕ¢++¬K™IdentifierÕÕ•index√¬_∞ObjectExpressionÕÕåí`®PropertyÕ(ÕH¬¬¬K™IdentifierÕ(Õ+£tagQ∞MemberExpressionÕ-ÕHQ∞MemberExpressionÕ-Õ9K™IdentifierÕ-Õ1§huksK™IdentifierÕ2Õ9ßHuksTag¬¬K™IdentifierÕ:ÕHÆHUKS_TAG_NONCE¬¬§init`®PropertyÕVÕÇ¬¬¬K™IdentifierÕVÕ[•valueVÆCallExpressionÕ]ÕÇQ∞MemberExpressionÕ]Õ{K™IdentifierÕ]Õh´HuksManagerK™IdentifierÕiÕ{≤stringToUint8Array¬¬ëK™IdentifierÕ|ÕÅ•nonce¬§initO≥ExpressionStatementÕñÕP¥AssignmentExpressionÕñÕ°=Q∞MemberExpressionÕñÕ©K™IdentifierÕñÕ†™properties[∞UpdateExpressionÕ°Õ®¢++¬K™IdentifierÕ°Õ¶•index√¬_∞ObjectExpressionÕ¨Õí`®PropertyÕ∫Õ◊¬¬¬K™IdentifierÕ∫ÕΩ£tagQ∞MemberExpressionÕøÕ◊Q∞MemberExpressionÕøÕÀK™IdentifierÕøÕ√§huksK™IdentifierÕƒÕÀßHuksTag¬¬K™IdentifierÕÃÕ◊´HUKS_TAG_IV¬¬§init`®PropertyÕÂÕ¬¬¬K™IdentifierÕÂÕÍ•valueVÆCallExpressionÕÏÕQ∞MemberExpressionÕÏÕ
K™IdentifierÕÏÕ˜´HuksManagerK™IdentifierÕ¯Õ
≤stringToUint8Array¬¬ëK™IdentifierÕÕ¢iv¬§initO≥ExpressionStatementÕ"ÕüP¥AssignmentExpressionÕ"Õû°=Q∞MemberExpressionÕ"Õ5K™IdentifierÕ"Õ,™properties[∞UpdateExpressionÕ-Õ4¢++¬K™IdentifierÕ-Õ2•index√¬_∞ObjectExpressionÕ8Õûí`®PropertyÕFÕg¬¬¬K™IdentifierÕFÕI£tagQ∞MemberExpressionÕKÕgQ∞MemberExpressionÕKÕWK™IdentifierÕKÕO§huksK™IdentifierÕPÕWßHuksTag¬¬K™IdentifierÕXÕgØHUKS_TAG_AE_TAG¬¬§init`®PropertyÕuÕî¬¬¬K™IdentifierÕuÕz•valueVÆCallExpressionÕ|ÕîQ∞MemberExpressionÕ|ÕÑK™IdentifierÕ|Õ~¢j6K™IdentifierÕÕÑ•slice¬¬ëU∞BinaryExpressionÕÖÕìQ∞MemberExpressionÕÖÕéK™IdentifierÕÖÕá¢j6K™IdentifierÕàÕé¶length¬¬°-SßLiteralÕëÕì¢16¬§initTØReturnStatementÕ®Õ∫K™IdentifierÕØÕπ™propertiesM∞MethodDefinitionÕ≈Õ —¬¬K™IdentifierÕÀÕ÷´encryptData¶methodN≤FunctionExpressionÕ÷Õ —¿¬¬√îK™IdentifierÕ◊Õ‡©plainTextK™IdentifierÕ‚ÕÍ®keyAliasK™IdentifierÕÏÕÒ•nonceK™IdentifierÕÛÕı¢ivLÆBlockStatementÕ˜Õ —ïW≥VariableDeclarationÕÕ/ëX≤VariableDeclaratorÕÕ.K™IdentifierÕÕ¶hasKeyTØAwaitExpressionÕÕ.VÆCallExpressionÕÕ.Q∞MemberExpressionÕÕ$RÆThisExpressionÕÕK™IdentifierÕÕ$´hasKeyAlies¬¬ëK™IdentifierÕ%Õ-®keyAlias¬£letb´IfStatementÕ8ÕÄ[ØUnaryExpressionÕ<ÕC°!√K™IdentifierÕ=ÕC¶hasKeyLÆBlockStatementÕEÕÄëO≥ExpressionStatementÕSÕvTØAwaitExpressionÕSÕuVÆCallExpressionÕYÕuQ∞MemberExpressionÕYÕkRÆThisExpressionÕYÕ]K™IdentifierÕ^Õk≠initDeriveKey¬¬ëK™IdentifierÕlÕt®keyAlias¬¿W≥VariableDeclarationÕâÕ"ëX≤VariableDeclaratorÕçÕ!K™IdentifierÕçÕîßoptions_∞ObjectExpressionÕóÕ!í`®PropertyÕ•Õÿ¬¬¬K™IdentifierÕ•ÕØ™propertiesVÆCallExpressionÕ±ÕÿQ∞MemberExpressionÕ±ÕÕRÆThisExpressionÕ±ÕµK™IdentifierÕ∂ÕÕ∑getAesEncryptProperties¬¬íK™IdentifierÕŒÕ”•nonceK™IdentifierÕ’Õ◊¢iv¬§init`®PropertyÕÊÕ¬¬¬K™IdentifierÕÊÕÏ¶inDataVÆCallExpressionÕÓÕQ∞MemberExpressionÕÓÕK™IdentifierÕÓÕ˘´HuksManagerK™IdentifierÕ˙Õ≤stringToUint8Array¬¬ëK™IdentifierÕÕ©plainText¬§init£letO≥ExpressionStatementÕ+Õ
TØAwaitExpressionÕ+Õ	VÆCallExpressionÕ1Õ	Q∞MemberExpressionÕ1Õ™VÆCallExpressionÕ1Õ§Q∞MemberExpressionÕ1ÕfVÆCallExpressionÕ1ÕTQ∞MemberExpressionÕ1ÕAK™IdentifierÕ1Õ5§huksK™IdentifierÕ6ÕA´initSession¬¬íK™IdentifierÕBÕJ®keyAliasK™IdentifierÕLÕSßoptions¬K™IdentifierÕbÕf§then¬¬ëN∑ArrowFunctionExpressionÕgÕ£¿¬¬¬ëK™IdentifierÕhÕl§dataLÆBlockStatementÕqÕ£ëO≥ExpressionStatementÕÕôP¥AssignmentExpressionÕÕò°=Q∞MemberExpressionÕÕäRÆThisExpressionÕÕÉK™IdentifierÕÑÕä¶handle¬¬Q∞MemberExpressionÕçÕòK™IdentifierÕçÕë§dataK™IdentifierÕíÕò¶handle¬¬¬K™IdentifierÕ•Õ™•catch¬¬ëN∑ArrowFunctionExpressionÕ´Õ¿¬¬¬ëK™IdentifierÕ¨Õ±•errorLÆBlockStatementÕ∂ÕëO≥ExpressionStatementÕƒÕ˛VÆCallExpressionÕƒÕ˝Q∞MemberExpressionÕƒÕ—K™IdentifierÕƒÕÀßconsoleK™IdentifierÕÃÕ—•error¬¬ëU∞BinaryExpressionÕ“Õ¸\ØTemplateLiteralÕ“ÕÙêë]ØTemplateElementÕ”ÕÛ^Ÿ promise: init EncryptData failedŸ promise: init EncryptData failed√°+K™IdentifierÕ˜Õ¸•error¬¬TØReturnStatementÕÕ ÀY≠NewExpressionÕÕ  K™IdentifierÕÕ%ßPromiseëN∑ArrowFunctionExpressionÕ&Õ …¿¬¬¬íK™IdentifierÕ'Õ)¢f6K™IdentifierÕ+Õ-¢g6LÆBlockStatementÕ2Õ …ëO≥ExpressionStatementÕ@Õ øVÆCallExpressionÕ@Õ æQ∞MemberExpressionÕ@Õ áVÆCallExpressionÕ@Õ ÅQ∞MemberExpressionÕ@Õ~VÆCallExpressionÕ@ÕhQ∞MemberExpressionÕ@ÕRK™IdentifierÕ@ÕD§huksK™IdentifierÕEÕR≠finishSession¬¬íQ∞MemberExpressionÕSÕ^RÆThisExpressionÕSÕWK™IdentifierÕXÕ^¶handle¬¬K™IdentifierÕ`Õgßoptions¬K™IdentifierÕzÕ~§then¬¬ëN∑ArrowFunctionExpressionÕÕ Ä¿¬¬¬ëK™IdentifierÕÄÕÑ§dataLÆBlockStatementÕâÕ ÄíO≥ExpressionStatementÕõÕ VÆCallExpressionÕõÕ Q∞MemberExpressionÕõÕßK™IdentifierÕõÕ¢ßconsoleK™IdentifierÕ£Õß§info¬¬ëU∞BinaryExpressionÕ®Õ \ØTemplateLiteralÕ®Õ—êë]ØTemplateElementÕ©Õ–^Ÿ'promise: encrypt data success, data is Ÿ'promise: encrypt data success, data is √°+VÆCallExpressionÕËÕ Q∞MemberExpressionÕËÕ K™IdentifierÕËÕÛ´HuksManagerK™IdentifierÕÙÕ ≤uint8ArrayToString¬¬ëQ∞MemberExpressionÕ Õ K™IdentifierÕ Õ §dataK™IdentifierÕ Õ ßoutData¬¬¬¬b´IfStatementÕ 'Õ rQ∞MemberExpressionÕ +Õ 7K™IdentifierÕ +Õ /§dataK™IdentifierÕ 0Õ 7ßoutData¬¬LÆBlockStatementÕ 9Õ rëO≥ExpressionStatementÕ OÕ `VÆCallExpressionÕ OÕ _K™IdentifierÕ OÕ Q¢f6ëQ∞MemberExpressionÕ RÕ ^K™IdentifierÕ RÕ V§dataK™IdentifierÕ WÕ ^ßoutData¬¬¬¿¬K™IdentifierÕ ÇÕ á•catch¬¬ëN∑ArrowFunctionExpressionÕ àÕ Ω¿¬¬¬ëK™IdentifierÕ âÕ é•errorLÆBlockStatementÕ ìÕ ΩëO≥ExpressionStatementÕ •Õ ØVÆCallExpressionÕ •Õ ÆK™IdentifierÕ •Õ ß¢g6ëK™IdentifierÕ ®Õ ≠•error¬¬M∞MethodDefinitionÕ ÷Õ%¬¬K™IdentifierÕ ‹Õ Á´decryptData¶methodN≤FunctionExpressionÕ ÁÕ%¿¬¬√îK™IdentifierÕ ËÕ Í¢s5K™IdentifierÕ ÏÕ Ù®keyAliasK™IdentifierÕ ˆÕ ˚•nonceK™IdentifierÕ ˝Õ ˇ¢ivLÆBlockStatementÕ!Õ%îb´IfStatementÕ!Õ!UU∞BinaryExpressionÕ!Õ!Q∞MemberExpressionÕ!Õ!K™IdentifierÕ!Õ!¢s5K™IdentifierÕ!Õ!¶length¬¬£===SßLiteralÕ!Õ! °0LÆBlockStatementÕ! Õ!UëTØReturnStatementÕ!.Õ!KVÆCallExpressionÕ!5Õ!JQ∞MemberExpressionÕ!5Õ!DK™IdentifierÕ!5Õ!<ßPromiseK™IdentifierÕ!=Õ!Dßresolve¬¬ëSßLiteralÕ!EÕ!I¿§null¬¿W≥VariableDeclarationÕ!^Õ!ìëX≤VariableDeclaratorÕ!bÕ!íK™IdentifierÕ!bÕ!d¢t5VÆCallExpressionÕ!gÕ!íQ∞MemberExpressionÕ!gÕ!ÉRÆThisExpressionÕ!gÕ!kK™IdentifierÕ!lÕ!É∑getAesDecryptProperties¬¬ìK™IdentifierÕ!ÑÕ!Ü¢s5K™IdentifierÕ!àÕ!ç•nonceK™IdentifierÕ!èÕ!ë¢iv¬£letW≥VariableDeclarationÕ!úÕ"ëX≤VariableDeclaratorÕ!†Õ"K™IdentifierÕ!†Õ!ßßoptions_∞ObjectExpressionÕ!™Õ"í`®PropertyÕ!∏Õ!∆¬¬¬K™IdentifierÕ!∏Õ!¬™propertiesK™IdentifierÕ!ƒÕ!∆¢t5§init`®PropertyÕ!‘Õ!˜¬¬¬K™IdentifierÕ!‘Õ!⁄¶inDataVÆCallExpressionÕ!‹Õ!˜Q∞MemberExpressionÕ!‹Õ!‰K™IdentifierÕ!‹Õ!ﬁ¢s5K™IdentifierÕ!ﬂÕ!‰•slice¬¬íSßLiteralÕ!ÂÕ!Ê °0U∞BinaryExpressionÕ!ËÕ!ˆQ∞MemberExpressionÕ!ËÕ!ÒK™IdentifierÕ!ËÕ!Í¢s5K™IdentifierÕ!ÎÕ!Ò¶length¬¬°-SßLiteralÕ!ÙÕ!ˆ¢16¬§init£letTØReturnStatementÕ"Õ%Y≠NewExpressionÕ"Õ%
K™IdentifierÕ"Õ"ßPromiseëN∑ArrowFunctionExpressionÕ"Õ%	¿¬¬¬íK™IdentifierÕ"Õ"!¢v5K™IdentifierÕ"#Õ"%¢w5LÆBlockStatementÕ"*Õ%	ëO≥ExpressionStatementÕ"8Õ$ˇVÆCallExpressionÕ"8Õ$˛Q∞MemberExpressionÕ"8Õ$}VÆCallExpressionÕ"8Õ$wQ∞MemberExpressionÕ"8Õ"qVÆCallExpressionÕ"8Õ"[Q∞MemberExpressionÕ"8Õ"HK™IdentifierÕ"8Õ"<§huksK™IdentifierÕ"=Õ"H´initSession¬¬íK™IdentifierÕ"IÕ"Q®keyAliasK™IdentifierÕ"SÕ"Zßoptions¬K™IdentifierÕ"mÕ"q§then¬¬ëN∑ArrowFunctionExpressionÕ"rÕ$v¿¬¬¬ëK™IdentifierÕ"sÕ"w§dataLÆBlockStatementÕ"|Õ$víO≥ExpressionStatementÕ"éÕ"®P¥AssignmentExpressionÕ"éÕ"ß°=Q∞MemberExpressionÕ"éÕ"ôRÆThisExpressionÕ"éÕ"íK™IdentifierÕ"ìÕ"ô¶handle¬¬Q∞MemberExpressionÕ"úÕ"ßK™IdentifierÕ"úÕ"†§dataK™IdentifierÕ"°Õ"ß¶handle¬¬O≥ExpressionStatementÕ"πÕ$hVÆCallExpressionÕ"πÕ$gQ∞MemberExpressionÕ"πÕ$(VÆCallExpressionÕ"πÕ$"Q∞MemberExpressionÕ"πÕ"˚VÆCallExpressionÕ"πÕ"·Q∞MemberExpressionÕ"πÕ"ÀK™IdentifierÕ"πÕ"Ω§huksK™IdentifierÕ"æÕ"À≠finishSession¬¬íQ∞MemberExpressionÕ"ÃÕ"◊RÆThisExpressionÕ"ÃÕ"–K™IdentifierÕ"—Õ"◊¶handle¬¬K™IdentifierÕ"ŸÕ"‡ßoptions¬K™IdentifierÕ"˜Õ"˚§then¬¬ëN∑ArrowFunctionExpressionÕ"¸Õ$!¿¬¬¬ëK™IdentifierÕ"˝Õ#§dataLÆBlockStatementÕ#Õ$!ëb´IfStatementÕ#Õ$U±LogicalExpressionÕ# Õ#4K™IdentifierÕ# Õ#$§data¢&&Q∞MemberExpressionÕ#(Õ#4K™IdentifierÕ#(Õ#,§dataK™IdentifierÕ#-Õ#4ßoutData¬¬LÆBlockStatementÕ#6Õ#ºíW≥VariableDeclarationÕ#PÕ#ÜëX≤VariableDeclaratorÕ#TÕ#ÖK™IdentifierÕ#TÕ#V¢b6VÆCallExpressionÕ#YÕ#ÖQ∞MemberExpressionÕ#YÕ#wK™IdentifierÕ#YÕ#d´HuksManagerK™IdentifierÕ#eÕ#w≤uint8ArrayToString¬¬ëQ∞MemberExpressionÕ#xÕ#ÑK™IdentifierÕ#xÕ#|§dataK™IdentifierÕ#}Õ#ÑßoutData¬¬¬£letO≥ExpressionStatementÕ#üÕ#¶VÆCallExpressionÕ#üÕ#•K™IdentifierÕ#üÕ#°¢v5ëK™IdentifierÕ#¢Õ#§¢b6¬LÆBlockStatementÕ#÷Õ$ëO≥ExpressionStatementÕ#Õ#˘VÆCallExpressionÕ#Õ#¯K™IdentifierÕ#Õ#Ú¢v5ëSßLiteralÕ#ÛÕ#˜¿§null¬¬K™IdentifierÕ$#Õ$(•catch¬¬ëN∑ArrowFunctionExpressionÕ$)Õ$f¿¬¬¬ëK™IdentifierÕ$*Õ$/•errorLÆBlockStatementÕ$4Õ$fëO≥ExpressionStatementÕ$JÕ$TVÆCallExpressionÕ$JÕ$SK™IdentifierÕ$JÕ$L¢w5ëK™IdentifierÕ$MÕ$R•error¬¬¬K™IdentifierÕ$xÕ$}•catch¬¬ëN∑ArrowFunctionExpressionÕ$~Õ$˝¿¬¬¬ëK™IdentifierÕ$Õ$Ñ•errorLÆBlockStatementÕ$âÕ$˝íO≥ExpressionStatementÕ$õÕ$’VÆCallExpressionÕ$õÕ$‘Q∞MemberExpressionÕ$õÕ$®K™IdentifierÕ$õÕ$¢ßconsoleK™IdentifierÕ$£Õ$®•error¬¬ëU∞BinaryExpressionÕ$©Õ$”\ØTemplateLiteralÕ$©Õ$Àêë]ØTemplateElementÕ$™Õ$ ^Ÿ promise: init DecryptData failedŸ promise: init DecryptData failed√°+K™IdentifierÕ$ŒÕ$”•error¬O≥ExpressionStatementÕ$ÊÕ$ÔVÆCallExpressionÕ$ÊÕ$ÓK™IdentifierÕ$ÊÕ$Ë¢v5ëSßLiteralÕ$ÈÕ$Ì¿§null¬¬M∞MethodDefinitionÕ%Õ'¬¬K™IdentifierÕ%Õ%+ØgenerateKeyItem¶methodN≤FunctionExpressionÕ%+Õ'¿¬¬√ìK™IdentifierÕ%,Õ%4®keyAliasK™IdentifierÕ%6Õ%A´huksOptionsK™IdentifierÕ%CÕ%E¢n5LÆBlockStatementÕ%GÕ'ëTØReturnStatementÕ%QÕ'Y≠NewExpressionÕ%XÕ'K™IdentifierÕ%\Õ%cßPromiseëN∑ArrowFunctionExpressionÕ%dÕ'¿¬¬¬íK™IdentifierÕ%eÕ%g¢p5K™IdentifierÕ%iÕ%k¢q5LÆBlockStatementÕ%pÕ'ëa¨TryStatementÕ%~Õ'LÆBlockStatementÕ%ÇÕ&°ëO≥ExpressionStatementÕ%îÕ&ìVÆCallExpressionÕ%îÕ&íQ∞MemberExpressionÕ%îÕ%®K™IdentifierÕ%îÕ%ò§huksK™IdentifierÕ%ôÕ%®ØgenerateKeyItem¬¬ìK™IdentifierÕ%©Õ%±®keyAliasK™IdentifierÕ%≥Õ%æ´huksOptionsN∑ArrowFunctionExpressionÕ%¿Õ&ë¿¬¬¬íK™IdentifierÕ%¡Õ%∆•errorK™IdentifierÕ%»Õ%Ã§dataLÆBlockStatementÕ%—Õ&ëëb´IfStatementÕ%ÁÕ&K™IdentifierÕ%ÎÕ%•errorLÆBlockStatementÕ%ÚÕ&,ëO≥ExpressionStatementÕ&Õ&VÆCallExpressionÕ&Õ&K™IdentifierÕ&Õ&¢q5ëK™IdentifierÕ&Õ&•error¬LÆBlockStatementÕ&FÕ&ëO≥ExpressionStatementÕ&`Õ&iVÆCallExpressionÕ&`Õ&hK™IdentifierÕ&`Õ&b¢p5ëK™IdentifierÕ&cÕ&g§data¬¬c´CatchClauseÕ&ÆÕ'K™IdentifierÕ&µÕ&∫•errorLÆBlockStatementÕ&ºÕ'íO≥ExpressionStatementÕ&ŒÕ&⁄P¥AssignmentExpressionÕ&ŒÕ&Ÿ°=Q∞MemberExpressionÕ&ŒÕ&“K™IdentifierÕ&ŒÕ&–¢n5K™IdentifierÕ&—Õ&“°i¬¬SßLiteralÕ&’Õ&Ÿ√§trueTÆThrowStatementÕ&ÎÕ&˜K™IdentifierÕ&ÒÕ&ˆ•error¿M∞MethodDefinitionÕ'Õ)¬¬K™IdentifierÕ'"Õ'-´initSession¶methodN≤FunctionExpressionÕ'-Õ)¿¬¬√ìK™IdentifierÕ'.Õ'6®keyAliasK™IdentifierÕ'8Õ'C´huksOptionsK™IdentifierÕ'EÕ'G¢i5LÆBlockStatementÕ'IÕ)ëTØReturnStatementÕ'SÕ)Y≠NewExpressionÕ'ZÕ)K™IdentifierÕ'^Õ'eßPromiseëN∑ArrowFunctionExpressionÕ'fÕ)¿¬¬¬íK™IdentifierÕ'gÕ'i¢k5K™IdentifierÕ'kÕ'm¢l5LÆBlockStatementÕ'rÕ)ëa¨TryStatementÕ'ÄÕ)LÆBlockStatementÕ'ÑÕ(üëO≥ExpressionStatementÕ'ñÕ(ëVÆCallExpressionÕ'ñÕ(êQ∞MemberExpressionÕ'ñÕ'¶K™IdentifierÕ'ñÕ'ö§huksK™IdentifierÕ'õÕ'¶´initSession¬¬ìK™IdentifierÕ'ßÕ'Ø®keyAliasK™IdentifierÕ'±Õ'º´huksOptionsN∑ArrowFunctionExpressionÕ'æÕ(è¿¬¬¬íK™IdentifierÕ'øÕ'ƒ•errorK™IdentifierÕ'∆Õ' §dataLÆBlockStatementÕ'œÕ(èëb´IfStatementÕ'ÂÕ(}K™IdentifierÕ'ÈÕ'Ó•errorLÆBlockStatementÕ'Õ(*ëO≥ExpressionStatementÕ(
Õ(VÆCallExpressionÕ(
Õ(K™IdentifierÕ(
Õ(¢l5ëK™IdentifierÕ(Õ(•error¬LÆBlockStatementÕ(DÕ(}ëO≥ExpressionStatementÕ(^Õ(gVÆCallExpressionÕ(^Õ(fK™IdentifierÕ(^Õ(`¢k5ëK™IdentifierÕ(aÕ(e§data¬¬c´CatchClauseÕ(¨Õ)K™IdentifierÕ(≥Õ(∏•errorLÆBlockStatementÕ(∫Õ)íO≥ExpressionStatementÕ(ÃÕ(ÿP¥AssignmentExpressionÕ(ÃÕ(◊°=Q∞MemberExpressionÕ(ÃÕ(–K™IdentifierÕ(ÃÕ(Œ¢i5K™IdentifierÕ(œÕ(–°i¬¬SßLiteralÕ(”Õ(◊√§trueTÆThrowStatementÕ(ÈÕ(ıK™IdentifierÕ(ÔÕ(Ù•error¿M∞MethodDefinitionÕ)Õ+¬¬K™IdentifierÕ) Õ)-≠updateSession¶methodN≤FunctionExpressionÕ)-Õ+¿¬¬√ìK™IdentifierÕ).Õ)4¶handleK™IdentifierÕ)6Õ)A´huksOptionsK™IdentifierÕ)CÕ)E¢d5LÆBlockStatementÕ)GÕ+ëTØReturnStatementÕ)QÕ+Y≠NewExpressionÕ)XÕ+K™IdentifierÕ)\Õ)cßPromiseëN∑ArrowFunctionExpressionÕ)dÕ+¿¬¬¬íK™IdentifierÕ)eÕ)g¢f5K™IdentifierÕ)iÕ)k¢g5LÆBlockStatementÕ)pÕ+ëa¨TryStatementÕ)~Õ+LÆBlockStatementÕ)ÇÕ*ùëO≥ExpressionStatementÕ)îÕ*èVÆCallExpressionÕ)îÕ*éQ∞MemberExpressionÕ)îÕ)¶K™IdentifierÕ)îÕ)ò§huksK™IdentifierÕ)ôÕ)¶≠updateSession¬¬ìK™IdentifierÕ)ßÕ)≠¶handleK™IdentifierÕ)ØÕ)∫´huksOptionsN∑ArrowFunctionExpressionÕ)ºÕ*ç¿¬¬¬íK™IdentifierÕ)ΩÕ)¬•errorK™IdentifierÕ)ƒÕ)»§dataLÆBlockStatementÕ)ÕÕ*çëb´IfStatementÕ)„Õ*{K™IdentifierÕ)ÁÕ)Ï•errorLÆBlockStatementÕ)ÓÕ*(ëO≥ExpressionStatementÕ*Õ*VÆCallExpressionÕ*Õ*K™IdentifierÕ*Õ*
¢g5ëK™IdentifierÕ*Õ*•error¬LÆBlockStatementÕ*BÕ*{ëO≥ExpressionStatementÕ*\Õ*eVÆCallExpressionÕ*\Õ*dK™IdentifierÕ*\Õ*^¢f5ëK™IdentifierÕ*_Õ*c§data¬¬c´CatchClauseÕ*™Õ+K™IdentifierÕ*±Õ*∂•errorLÆBlockStatementÕ*∏Õ+íO≥ExpressionStatementÕ* Õ*÷P¥AssignmentExpressionÕ* Õ*’°=Q∞MemberExpressionÕ* Õ*ŒK™IdentifierÕ* Õ*Ã¢d5K™IdentifierÕ*ÕÕ*Œ°i¬¬SßLiteralÕ*—Õ*’√§trueTÆThrowStatementÕ*ÁÕ*ÛK™IdentifierÕ*ÌÕ*Ú•error¿M∞MethodDefinitionÕ+Õ-¬¬K™IdentifierÕ+Õ++≠finishSession¶methodN≤FunctionExpressionÕ++Õ-¿¬¬√ìK™IdentifierÕ+,Õ+2¶handleK™IdentifierÕ+4Õ+?´huksOptionsK™IdentifierÕ+AÕ+C¢y4LÆBlockStatementÕ+EÕ-ëTØReturnStatementÕ+OÕ-Y≠NewExpressionÕ+VÕ-
K™IdentifierÕ+ZÕ+aßPromiseëN∑ArrowFunctionExpressionÕ+bÕ-	¿¬¬¬íK™IdentifierÕ+cÕ+e¢a5K™IdentifierÕ+gÕ+i¢b5LÆBlockStatementÕ+nÕ-	ëa¨TryStatementÕ+|Õ,ˇLÆBlockStatementÕ+ÄÕ,õëO≥ExpressionStatementÕ+íÕ,çVÆCallExpressionÕ+íÕ,åQ∞MemberExpressionÕ+íÕ+§K™IdentifierÕ+íÕ+ñ§huksK™IdentifierÕ+óÕ+§≠finishSession¬¬ìK™IdentifierÕ+•Õ+´¶handleK™IdentifierÕ+≠Õ+∏´huksOptionsN∑ArrowFunctionExpressionÕ+∫Õ,ã¿¬¬¬íK™IdentifierÕ+ªÕ+¿•errorK™IdentifierÕ+¬Õ+∆§dataLÆBlockStatementÕ+ÀÕ,ãëb´IfStatementÕ+·Õ,yK™IdentifierÕ+ÂÕ+Í•errorLÆBlockStatementÕ+ÏÕ,&ëO≥ExpressionStatementÕ,Õ,VÆCallExpressionÕ,Õ,K™IdentifierÕ,Õ,¢b5ëK™IdentifierÕ,	Õ,•error¬LÆBlockStatementÕ,@Õ,yëO≥ExpressionStatementÕ,ZÕ,cVÆCallExpressionÕ,ZÕ,bK™IdentifierÕ,ZÕ,\¢a5ëK™IdentifierÕ,]Õ,a§data¬¬c´CatchClauseÕ,®Õ,ˇK™IdentifierÕ,ØÕ,¥•errorLÆBlockStatementÕ,∂Õ,ˇíO≥ExpressionStatementÕ,»Õ,‘P¥AssignmentExpressionÕ,»Õ,”°=Q∞MemberExpressionÕ,»Õ,ÃK™IdentifierÕ,»Õ, ¢y4K™IdentifierÕ,ÀÕ,Ã°i¬¬SßLiteralÕ,œÕ,”√§trueTÆThrowStatementÕ,ÂÕ,ÒK™IdentifierÕ,ÎÕ,•error¿M∞MethodDefinitionÕ-Õ/¬¬K™IdentifierÕ-Õ-)≠deleteKeyItem¶methodN≤FunctionExpressionÕ-)Õ/¿¬¬√ìK™IdentifierÕ-*Õ-2®keyAliasK™IdentifierÕ-4Õ-?´huksOptionsK™IdentifierÕ-AÕ-C¢t4LÆBlockStatementÕ-EÕ/ëTØReturnStatementÕ-OÕ/Y≠NewExpressionÕ-VÕ/K™IdentifierÕ-ZÕ-aßPromiseëN∑ArrowFunctionExpressionÕ-bÕ/¿¬¬¬íK™IdentifierÕ-cÕ-e¢v4K™IdentifierÕ-gÕ-i¢w4LÆBlockStatementÕ-nÕ/ëa¨TryStatementÕ-|Õ/LÆBlockStatementÕ-ÄÕ.ùëO≥ExpressionStatementÕ-íÕ.èVÆCallExpressionÕ-íÕ.éQ∞MemberExpressionÕ-íÕ-§K™IdentifierÕ-íÕ-ñ§huksK™IdentifierÕ-óÕ-§≠deleteKeyItem¬¬ìK™IdentifierÕ-•Õ-≠®keyAliasK™IdentifierÕ-ØÕ-∫´huksOptionsN∑ArrowFunctionExpressionÕ-ºÕ.ç¿¬¬¬íK™IdentifierÕ-ΩÕ-¬•errorK™IdentifierÕ-ƒÕ-»§dataLÆBlockStatementÕ-ÕÕ.çëb´IfStatementÕ-„Õ.{K™IdentifierÕ-ÁÕ-Ï•errorLÆBlockStatementÕ-ÓÕ.(ëO≥ExpressionStatementÕ.Õ.VÆCallExpressionÕ.Õ.K™IdentifierÕ.Õ.
¢w4ëK™IdentifierÕ.Õ.•error¬LÆBlockStatementÕ.BÕ.{ëO≥ExpressionStatementÕ.\Õ.eVÆCallExpressionÕ.\Õ.dK™IdentifierÕ.\Õ.^¢v4ëK™IdentifierÕ._Õ.c§data¬¬c´CatchClauseÕ.™Õ/K™IdentifierÕ.±Õ.∂•errorLÆBlockStatementÕ.∏Õ/íO≥ExpressionStatementÕ. Õ.÷P¥AssignmentExpressionÕ. Õ.’°=Q∞MemberExpressionÕ. Õ.ŒK™IdentifierÕ. Õ.Ã¢t4K™IdentifierÕ.ÕÕ.Œ°i¬¬SßLiteralÕ.—Õ.’√§trueTÆThrowStatementÕ.ÁÕ.ÛK™IdentifierÕ.ÌÕ.Ú•error¿M∞MethodDefinitionÕ/Õ;¬¬K™IdentifierÕ/Õ/§init¶methodN≤FunctionExpressionÕ/Õ;¿¬¬¬ëK™IdentifierÕ/Õ/%®keyAliasLÆBlockStatementÕ/'Õ;‹ W≥VariableDeclarationÕ/1Õ/NëX≤VariableDeclaratorÕ/5Õ/MK™IdentifierÕ/5Õ/?™propertiesY≠NewExpressionÕ/BÕ/MK™IdentifierÕ/FÕ/K•Arrayê£letO≥ExpressionStatementÕ/WÕ/÷P¥AssignmentExpressionÕ/WÕ/’°=Q∞MemberExpressionÕ/WÕ/dK™IdentifierÕ/WÕ/a™propertiesSßLiteralÕ/bÕ/c °0√¬_∞ObjectExpressionÕ/gÕ/’í`®PropertyÕ/uÕ/ô¬¬¬K™IdentifierÕ/uÕ/x£tagQ∞MemberExpressionÕ/zÕ/ôQ∞MemberExpressionÕ/zÕ/ÜK™IdentifierÕ/zÕ/~§huksK™IdentifierÕ/Õ/ÜßHuksTag¬¬K™IdentifierÕ/áÕ/ô≤HUKS_TAG_ALGORITHM¬¬§init`®PropertyÕ/ßÕ/ ¬¬¬K™IdentifierÕ/ßÕ/¨•valueQ∞MemberExpressionÕ/ÆÕ/ Q∞MemberExpressionÕ/ÆÕ/ΩK™IdentifierÕ/ÆÕ/≤§huksK™IdentifierÕ/≥Õ/Ω™HuksKeyAlg¬¬K™IdentifierÕ/æÕ/ ¨HUKS_ALG_AES¬¬§initO≥ExpressionStatementÕ/ﬂÕ0kP¥AssignmentExpressionÕ/ﬂÕ0j°=Q∞MemberExpressionÕ/ﬂÕ/ÏK™IdentifierÕ/ﬂÕ/È™propertiesSßLiteralÕ/ÍÕ/Î°1√¬_∞ObjectExpressionÕ/ÔÕ0jí`®PropertyÕ/˝Õ0¬¬¬K™IdentifierÕ/˝Õ0 £tagQ∞MemberExpressionÕ0Õ0Q∞MemberExpressionÕ0Õ0K™IdentifierÕ0Õ0§huksK™IdentifierÕ0Õ0ßHuksTag¬¬K™IdentifierÕ0Õ0∞HUKS_TAG_PURPOSE¬¬§init`®PropertyÕ0-Õ0_¬¬¬K™IdentifierÕ0-Õ02•valueQ∞MemberExpressionÕ04Õ0_Q∞MemberExpressionÕ04Õ0GK™IdentifierÕ04Õ08§huksK™IdentifierÕ09Õ0GÆHuksKeyPurpose¬¬K™IdentifierÕ0HÕ0_∑HUKS_KEY_PURPOSE_DERIVE¬¬§initO≥ExpressionStatementÕ0tÕ0˘P¥AssignmentExpressionÕ0tÕ0¯°=Q∞MemberExpressionÕ0tÕ0ÅK™IdentifierÕ0tÕ0~™propertiesSßLiteralÕ0Õ0Ä°2√¬_∞ObjectExpressionÕ0ÑÕ0¯í`®PropertyÕ0íÕ0≥¬¬¬K™IdentifierÕ0íÕ0ï£tagQ∞MemberExpressionÕ0óÕ0≥Q∞MemberExpressionÕ0óÕ0£K™IdentifierÕ0óÕ0õ§huksK™IdentifierÕ0úÕ0£ßHuksTag¬¬K™IdentifierÕ0§Õ0≥ØHUKS_TAG_DIGEST¬¬§init`®PropertyÕ0¡Õ0Ì¬¬¬K™IdentifierÕ0¡Õ0∆•valueQ∞MemberExpressionÕ0»Õ0ÌQ∞MemberExpressionÕ0»Õ0⁄K™IdentifierÕ0»Õ0Ã§huksK™IdentifierÕ0ÕÕ0⁄≠HuksKeyDigest¬¬K™IdentifierÕ0€Õ0Ì≤HUKS_DIGEST_SHA256¬¬§initO≥ExpressionStatementÕ1Õ1äP¥AssignmentExpressionÕ1Õ1â°=Q∞MemberExpressionÕ1Õ1K™IdentifierÕ1Õ1™propertiesSßLiteralÕ1Õ1°3√¬_∞ObjectExpressionÕ1Õ1âí`®PropertyÕ1 Õ1C¬¬¬K™IdentifierÕ1 Õ1#£tagQ∞MemberExpressionÕ1%Õ1CQ∞MemberExpressionÕ1%Õ11K™IdentifierÕ1%Õ1)§huksK™IdentifierÕ1*Õ11ßHuksTag¬¬K™IdentifierÕ12Õ1C±HUKS_TAG_KEY_SIZE¬¬§init`®PropertyÕ1QÕ1~¬¬¬K™IdentifierÕ1QÕ1V•valueQ∞MemberExpressionÕ1XÕ1~Q∞MemberExpressionÕ1XÕ1hK™IdentifierÕ1XÕ1\§huksK™IdentifierÕ1]Õ1h´HuksKeySize¬¬K™IdentifierÕ1iÕ1~µHUKS_AES_KEY_SIZE_128¬¬§initO≥ExpressionStatementÕ1ìÕ2BP¥AssignmentExpressionÕ1ìÕ2A°=Q∞MemberExpressionÕ1ìÕ1†K™IdentifierÕ1ìÕ1ù™propertiesSßLiteralÕ1ûÕ1ü°4√¬_∞ObjectExpressionÕ1£Õ2Aí`®PropertyÕ1±Õ1Î¬¬¬K™IdentifierÕ1±Õ1¥£tagQ∞MemberExpressionÕ1∂Õ1ÎQ∞MemberExpressionÕ1∂Õ1¬K™IdentifierÕ1∂Õ1∫§huksK™IdentifierÕ1ªÕ1¬ßHuksTag¬¬K™IdentifierÕ1√Õ1ÎŸ(HUKS_TAG_DERIVED_AGREED_KEY_STORAGE_FLAG¬¬§init`®PropertyÕ1˘Õ26¬¬¬K™IdentifierÕ1˘Õ1˛•valueQ∞MemberExpressionÕ2 Õ26Q∞MemberExpressionÕ2 Õ2K™IdentifierÕ2 Õ2§huksK™IdentifierÕ2Õ2≤HuksKeyStorageType¬¬K™IdentifierÕ2Õ26æHUKS_STORAGE_ONLY_USED_IN_HUKS¬¬§initO≥ExpressionStatementÕ2KÕ2æP¥AssignmentExpressionÕ2KÕ2Ω°=Q∞MemberExpressionÕ2KÕ2[RÆThisExpressionÕ2KÕ2OK™IdentifierÕ2PÕ2[´huksOptions¬¬_∞ObjectExpressionÕ2^Õ2Ωí`®PropertyÕ2lÕ2Ç¬¬¬K™IdentifierÕ2lÕ2v™propertiesK™IdentifierÕ2xÕ2Ç™properties§init`®PropertyÕ2êÕ2≥¬¬¬K™IdentifierÕ2êÕ2ñ¶inDataY≠NewExpressionÕ2òÕ2≥K™IdentifierÕ2úÕ2¶™Uint8ArrayëY≠NewExpressionÕ2ßÕ2≤K™IdentifierÕ2´Õ2∞•Arrayê§initW≥VariableDeclarationÕ2«Õ2‹ëX≤VariableDeclaratorÕ2ÀÕ2€K™IdentifierÕ2ÀÕ2Õ¢r4Y≠NewExpressionÕ2–Õ2€K™IdentifierÕ2‘Õ2Ÿ•Arrayê£letO≥ExpressionStatementÕ2ÂÕ3]P¥AssignmentExpressionÕ2ÂÕ3\°=Q∞MemberExpressionÕ2ÂÕ2ÍK™IdentifierÕ2ÂÕ2Á¢r4SßLiteralÕ2ËÕ2È °0√¬_∞ObjectExpressionÕ2ÌÕ3\í`®PropertyÕ2˚Õ3¬¬¬K™IdentifierÕ2˚Õ2˛£tagQ∞MemberExpressionÕ3 Õ3Q∞MemberExpressionÕ3 Õ3K™IdentifierÕ3 Õ3§huksK™IdentifierÕ3Õ3ßHuksTag¬¬K™IdentifierÕ3Õ3≤HUKS_TAG_ALGORITHM¬¬§init`®PropertyÕ3-Õ3Q¬¬¬K™IdentifierÕ3-Õ32•valueQ∞MemberExpressionÕ34Õ3QQ∞MemberExpressionÕ34Õ3CK™IdentifierÕ34Õ38§huksK™IdentifierÕ39Õ3C™HuksKeyAlg¬¬K™IdentifierÕ3DÕ3Q≠HUKS_ALG_HKDF¬¬§initO≥ExpressionStatementÕ3fÕ3ÍP¥AssignmentExpressionÕ3fÕ3È°=Q∞MemberExpressionÕ3fÕ3kK™IdentifierÕ3fÕ3h¢r4SßLiteralÕ3iÕ3j°1√¬_∞ObjectExpressionÕ3nÕ3Èí`®PropertyÕ3|Õ3û¬¬¬K™IdentifierÕ3|Õ3£tagQ∞MemberExpressionÕ3ÅÕ3ûQ∞MemberExpressionÕ3ÅÕ3çK™IdentifierÕ3ÅÕ3Ö§huksK™IdentifierÕ3ÜÕ3çßHuksTag¬¬K™IdentifierÕ3éÕ3û∞HUKS_TAG_PURPOSE¬¬§init`®PropertyÕ3¨Õ3ﬁ¬¬¬K™IdentifierÕ3¨Õ3±•valueQ∞MemberExpressionÕ3≥Õ3ﬁQ∞MemberExpressionÕ3≥Õ3∆K™IdentifierÕ3≥Õ3∑§huksK™IdentifierÕ3∏Õ3∆ÆHuksKeyPurpose¬¬K™IdentifierÕ3«Õ3ﬁ∑HUKS_KEY_PURPOSE_DERIVE¬¬§initO≥ExpressionStatementÕ3ÛÕ4pP¥AssignmentExpressionÕ3ÛÕ4o°=Q∞MemberExpressionÕ3ÛÕ3¯K™IdentifierÕ3ÛÕ3ı¢r4SßLiteralÕ3ˆÕ3˜°2√¬_∞ObjectExpressionÕ3˚Õ4oí`®PropertyÕ4	Õ4*¬¬¬K™IdentifierÕ4	Õ4£tagQ∞MemberExpressionÕ4Õ4*Q∞MemberExpressionÕ4Õ4K™IdentifierÕ4Õ4§huksK™IdentifierÕ4Õ4ßHuksTag¬¬K™IdentifierÕ4Õ4*ØHUKS_TAG_DIGEST¬¬§init`®PropertyÕ48Õ4d¬¬¬K™IdentifierÕ48Õ4=•valueQ∞MemberExpressionÕ4?Õ4dQ∞MemberExpressionÕ4?Õ4QK™IdentifierÕ4?Õ4C§huksK™IdentifierÕ4DÕ4Q≠HuksKeyDigest¬¬K™IdentifierÕ4RÕ4d≤HUKS_DIGEST_SHA256¬¬§initO≥ExpressionStatementÕ4yÕ4ÛP¥AssignmentExpressionÕ4yÕ4Ú°=Q∞MemberExpressionÕ4yÕ4~K™IdentifierÕ4yÕ4{¢r4SßLiteralÕ4|Õ4}°3√¬_∞ObjectExpressionÕ4ÅÕ4Úí`®PropertyÕ4èÕ4π¬¬¬K™IdentifierÕ4èÕ4í£tagQ∞MemberExpressionÕ4îÕ4πQ∞MemberExpressionÕ4îÕ4†K™IdentifierÕ4îÕ4ò§huksK™IdentifierÕ4ôÕ4†ßHuksTag¬¬K™IdentifierÕ4°Õ4π∏HUKS_TAG_DERIVE_KEY_SIZE¬¬§init`®PropertyÕ4«Õ4Á¬¬¬K™IdentifierÕ4«Õ4Ã•valueQ∞MemberExpressionÕ4ŒÕ4ÁRÆThisExpressionÕ4ŒÕ4“K™IdentifierÕ4”Õ4Á¥huksKeyDeriveKeySize¬¬§initO≥ExpressionStatementÕ4¸Õ5gP¥AssignmentExpressionÕ4¸Õ5f°=Q∞MemberExpressionÕ4¸Õ5RÆThisExpressionÕ4¸Õ5 K™IdentifierÕ5Õ5´initOptions¬¬_∞ObjectExpressionÕ5Õ5fí`®PropertyÕ5Õ5+¬¬¬K™IdentifierÕ5Õ5'™propertiesK™IdentifierÕ5)Õ5+¢r4§init`®PropertyÕ59Õ5\¬¬¬K™IdentifierÕ59Õ5?¶inDataY≠NewExpressionÕ5AÕ5\K™IdentifierÕ5EÕ5O™Uint8ArrayëY≠NewExpressionÕ5PÕ5[K™IdentifierÕ5TÕ5Y•Arrayê§initW≥VariableDeclarationÕ5pÕ5ÖëX≤VariableDeclaratorÕ5tÕ5ÑK™IdentifierÕ5tÕ5v¢s4Y≠NewExpressionÕ5yÕ5ÑK™IdentifierÕ5}Õ5Ç•Arrayê£letO≥ExpressionStatementÕ5éÕ65P¥AssignmentExpressionÕ5éÕ64°=Q∞MemberExpressionÕ5éÕ5ìK™IdentifierÕ5éÕ5ê¢s4SßLiteralÕ5ëÕ5í °0√¬_∞ObjectExpressionÕ5ñÕ64í`®PropertyÕ5§Õ5ﬁ¬¬¬K™IdentifierÕ5§Õ5ß£tagQ∞MemberExpressionÕ5©Õ5ﬁQ∞MemberExpressionÕ5©Õ5µK™IdentifierÕ5©Õ5≠§huksK™IdentifierÕ5ÆÕ5µßHuksTag¬¬K™IdentifierÕ5∂Õ5ﬁŸ(HUKS_TAG_DERIVED_AGREED_KEY_STORAGE_FLAG¬¬§init`®PropertyÕ5ÏÕ6)¬¬¬K™IdentifierÕ5ÏÕ5Ò•valueQ∞MemberExpressionÕ5ÛÕ6)Q∞MemberExpressionÕ5ÛÕ6
K™IdentifierÕ5ÛÕ5˜§huksK™IdentifierÕ5¯Õ6
≤HuksKeyStorageType¬¬K™IdentifierÕ6Õ6)æHUKS_STORAGE_ONLY_USED_IN_HUKS¬¬§initO≥ExpressionStatementÕ6>Õ6†P¥AssignmentExpressionÕ6>Õ6ü°=Q∞MemberExpressionÕ6>Õ6CK™IdentifierÕ6>Õ6@¢s4SßLiteralÕ6AÕ6B°1√¬_∞ObjectExpressionÕ6FÕ6üí`®PropertyÕ6TÕ6{¬¬¬K™IdentifierÕ6TÕ6W£tagQ∞MemberExpressionÕ6YÕ6{Q∞MemberExpressionÕ6YÕ6eK™IdentifierÕ6YÕ6]§huksK™IdentifierÕ6^Õ6eßHuksTag¬¬K™IdentifierÕ6fÕ6{µHUKS_TAG_IS_KEY_ALIAS¬¬§init`®PropertyÕ6âÕ6î¬¬¬K™IdentifierÕ6âÕ6é•valueSßLiteralÕ6êÕ6î√§true§initO≥ExpressionStatementÕ6©Õ7 P¥AssignmentExpressionÕ6©Õ7°=Q∞MemberExpressionÕ6©Õ6ÆK™IdentifierÕ6©Õ6´¢s4SßLiteralÕ6¨Õ6≠°2√¬_∞ObjectExpressionÕ6±Õ7í`®PropertyÕ6øÕ6„¬¬¬K™IdentifierÕ6øÕ6¬£tagQ∞MemberExpressionÕ6ƒÕ6„Q∞MemberExpressionÕ6ƒÕ6–K™IdentifierÕ6ƒÕ6»§huksK™IdentifierÕ6…Õ6–ßHuksTag¬¬K™IdentifierÕ6—Õ6„≤HUKS_TAG_ALGORITHM¬¬§init`®PropertyÕ6ÒÕ7¬¬¬K™IdentifierÕ6ÒÕ6ˆ•valueQ∞MemberExpressionÕ6¯Õ7Q∞MemberExpressionÕ6¯Õ7K™IdentifierÕ6¯Õ6¸§huksK™IdentifierÕ6˝Õ7™HuksKeyAlg¬¬K™IdentifierÕ7Õ7¨HUKS_ALG_AES¬¬§initO≥ExpressionStatementÕ7)Õ7©P¥AssignmentExpressionÕ7)Õ7®°=Q∞MemberExpressionÕ7)Õ7.K™IdentifierÕ7)Õ7+¢s4SßLiteralÕ7,Õ7-°3√¬_∞ObjectExpressionÕ71Õ7®í`®PropertyÕ7?Õ7b¬¬¬K™IdentifierÕ7?Õ7B£tagQ∞MemberExpressionÕ7DÕ7bQ∞MemberExpressionÕ7DÕ7PK™IdentifierÕ7DÕ7H§huksK™IdentifierÕ7IÕ7PßHuksTag¬¬K™IdentifierÕ7QÕ7b±HUKS_TAG_KEY_SIZE¬¬§init`®PropertyÕ7pÕ7ù¬¬¬K™IdentifierÕ7pÕ7u•valueQ∞MemberExpressionÕ7wÕ7ùQ∞MemberExpressionÕ7wÕ7áK™IdentifierÕ7wÕ7{§huksK™IdentifierÕ7|Õ7á´HuksKeySize¬¬K™IdentifierÕ7àÕ7ùµHUKS_AES_KEY_SIZE_256¬¬§initO≥ExpressionStatementÕ7≤Õ8vP¥AssignmentExpressionÕ7≤Õ8u°=Q∞MemberExpressionÕ7≤Õ7∑K™IdentifierÕ7≤Õ7¥¢s4SßLiteralÕ7µÕ7∂°4√¬_∞ObjectExpressionÕ7∫Õ8uí`®PropertyÕ7»Õ7Í¬¬¬K™IdentifierÕ7»Õ7À£tagQ∞MemberExpressionÕ7ÕÕ7ÍQ∞MemberExpressionÕ7ÕÕ7ŸK™IdentifierÕ7ÕÕ7—§huksK™IdentifierÕ7“Õ7ŸßHuksTag¬¬K™IdentifierÕ7⁄Õ7Í∞HUKS_TAG_PURPOSE¬¬§init`®PropertyÕ7¯Õ8j¬¬¬K™IdentifierÕ7¯Õ7˝•valueU∞BinaryExpressionÕ7ˇÕ8jQ∞MemberExpressionÕ7ˇÕ8+Q∞MemberExpressionÕ7ˇÕ8K™IdentifierÕ7ˇÕ8§huksK™IdentifierÕ8Õ8ÆHuksKeyPurpose¬¬K™IdentifierÕ8Õ8+∏HUKS_KEY_PURPOSE_ENCRYPT¬¬°|Q∞MemberExpressionÕ8>Õ8jQ∞MemberExpressionÕ8>Õ8QK™IdentifierÕ8>Õ8B§huksK™IdentifierÕ8CÕ8QÆHuksKeyPurpose¬¬K™IdentifierÕ8RÕ8j∏HUKS_KEY_PURPOSE_DECRYPT¬¬§initO≥ExpressionStatementÕ8Õ8¸P¥AssignmentExpressionÕ8Õ8˚°=Q∞MemberExpressionÕ8Õ8ÑK™IdentifierÕ8Õ8Å¢s4SßLiteralÕ8ÇÕ8É°5√¬_∞ObjectExpressionÕ8áÕ8˚í`®PropertyÕ8ïÕ8∂¬¬¬K™IdentifierÕ8ïÕ8ò£tagQ∞MemberExpressionÕ8öÕ8∂Q∞MemberExpressionÕ8öÕ8¶K™IdentifierÕ8öÕ8û§huksK™IdentifierÕ8üÕ8¶ßHuksTag¬¬K™IdentifierÕ8ßÕ8∂ØHUKS_TAG_DIGEST¬¬§init`®PropertyÕ8ƒÕ8¬¬¬K™IdentifierÕ8ƒÕ8…•valueQ∞MemberExpressionÕ8ÀÕ8Q∞MemberExpressionÕ8ÀÕ8›K™IdentifierÕ8ÀÕ8œ§huksK™IdentifierÕ8–Õ8›≠HuksKeyDigest¬¬K™IdentifierÕ8ﬁÕ8≤HUKS_DIGEST_SHA256¬¬§initO≥ExpressionStatementÕ9Õ9àP¥AssignmentExpressionÕ9Õ9á°=Q∞MemberExpressionÕ9Õ9
K™IdentifierÕ9Õ9¢s4SßLiteralÕ9Õ9	°6√¬_∞ObjectExpressionÕ9Õ9áí`®PropertyÕ9Õ9?¬¬¬K™IdentifierÕ9Õ9£tagQ∞MemberExpressionÕ9 Õ9?Q∞MemberExpressionÕ9 Õ9,K™IdentifierÕ9 Õ9$§huksK™IdentifierÕ9%Õ9,ßHuksTag¬¬K™IdentifierÕ9-Õ9?≤HUKS_TAG_KEY_ALIAS¬¬§init`®PropertyÕ9MÕ9|¬¬¬K™IdentifierÕ9MÕ9R•valueVÆCallExpressionÕ9TÕ9|Q∞MemberExpressionÕ9TÕ9rK™IdentifierÕ9TÕ9_´HuksManagerK™IdentifierÕ9`Õ9r≤stringToUint8Array¬¬ëK™IdentifierÕ9sÕ9{®keyAlias¬§initO≥ExpressionStatementÕ9ëÕ:P¥AssignmentExpressionÕ9ëÕ:°=Q∞MemberExpressionÕ9ëÕ9ñK™IdentifierÕ9ëÕ9ì¢s4SßLiteralÕ9îÕ9ï°7√¬_∞ObjectExpressionÕ9ôÕ:í`®PropertyÕ9ßÕ9…¬¬¬K™IdentifierÕ9ßÕ9™£tagQ∞MemberExpressionÕ9¨Õ9…Q∞MemberExpressionÕ9¨Õ9∏K™IdentifierÕ9¨Õ9∞§huksK™IdentifierÕ9±Õ9∏ßHuksTag¬¬K™IdentifierÕ9πÕ9…∞HUKS_TAG_PADDING¬¬§init`®PropertyÕ9◊Õ:¬¬¬K™IdentifierÕ9◊Õ9‹•valueQ∞MemberExpressionÕ9ﬁÕ:Q∞MemberExpressionÕ9ﬁÕ9ÒK™IdentifierÕ9ﬁÕ9‚§huksK™IdentifierÕ9„Õ9ÒÆHuksKeyPadding¬¬K™IdentifierÕ9ÚÕ:±HUKS_PADDING_NONE¬¬§initO≥ExpressionStatementÕ:Õ:ïP¥AssignmentExpressionÕ:Õ:î°=Q∞MemberExpressionÕ:Õ:K™IdentifierÕ:Õ:¢s4SßLiteralÕ:Õ:°8√¬_∞ObjectExpressionÕ: Õ:îí`®PropertyÕ:.Õ:S¬¬¬K™IdentifierÕ:.Õ:1£tagQ∞MemberExpressionÕ:3Õ:SQ∞MemberExpressionÕ:3Õ:?K™IdentifierÕ:3Õ:7§huksK™IdentifierÕ:8Õ:?ßHuksTag¬¬K™IdentifierÕ:@Õ:S≥HUKS_TAG_BLOCK_MODE¬¬§init`®PropertyÕ:aÕ:â¬¬¬K™IdentifierÕ:aÕ:f•valueQ∞MemberExpressionÕ:hÕ:âQ∞MemberExpressionÕ:hÕ:{K™IdentifierÕ:hÕ:l§huksK™IdentifierÕ:mÕ:{ÆHuksCipherMode¬¬K™IdentifierÕ:|Õ:â≠HUKS_MODE_GCM¬¬§initO≥ExpressionStatementÕ:ûÕ;P¥AssignmentExpressionÕ:ûÕ;
°=Q∞MemberExpressionÕ:ûÕ:∞RÆThisExpressionÕ:ûÕ:¢K™IdentifierÕ:£Õ:∞≠finishOptions¬¬_∞ObjectExpressionÕ:≥Õ;
í`®PropertyÕ:¡Õ:œ¬¬¬K™IdentifierÕ:¡Õ:À™propertiesK™IdentifierÕ:ÕÕ:œ¢s4§init`®PropertyÕ:›Õ; ¬¬¬K™IdentifierÕ:›Õ:„¶inDataY≠NewExpressionÕ:ÂÕ; K™IdentifierÕ:ÈÕ:Û™Uint8ArrayëY≠NewExpressionÕ:ÙÕ:ˇK™IdentifierÕ:¯Õ:˝•Arrayê§initM∞MethodDefinitionÕ;Õ=Ñ¬¬K™IdentifierÕ;Õ;'´hasKeyAlies¶methodN≤FunctionExpressionÕ;'Õ=Ñ¿¬¬√ëK™IdentifierÕ;(Õ;*¢m4LÆBlockStatementÕ;,Õ=ÑíW≥VariableDeclarationÕ;6Õ;oëX≤VariableDeclaratorÕ;:Õ;nK™IdentifierÕ;:Õ;E´huksOptions_∞ObjectExpressionÕ;HÕ;në`®PropertyÕ;VÕ;d¬¬¬K™IdentifierÕ;VÕ;`™propertiesdØArrayExpressionÕ;bÕ;dê§init£letTØReturnStatementÕ;xÕ=~Y≠NewExpressionÕ;Õ=}K™IdentifierÕ;ÉÕ;äßPromiseëN∑ArrowFunctionExpressionÕ;ãÕ=|¿¬¬¬íK™IdentifierÕ;åÕ;é¢o4K™IdentifierÕ;êÕ;í¢p4LÆBlockStatementÕ;óÕ=|ëa¨TryStatementÕ;•Õ=rLÆBlockStatementÕ;©Õ=-ëO≥ExpressionStatementÕ;ªÕ=VÆCallExpressionÕ;ªÕ=Q∞MemberExpressionÕ;ªÕ; K™IdentifierÕ;ªÕ;ø§huksK™IdentifierÕ;¿Õ; ™hasKeyItem¬¬ìK™IdentifierÕ;ÀÕ;Õ¢m4K™IdentifierÕ;œÕ;⁄´huksOptionsN∑ArrowFunctionExpressionÕ;‹Õ=¿¬¬¬íK™IdentifierÕ;›Õ;‚•errorK™IdentifierÕ;‰Õ;Ë§dataLÆBlockStatementÕ;ÌÕ=ëb´IfStatementÕ<Õ=K™IdentifierÕ<Õ<•errorLÆBlockStatementÕ<Õ<HëO≥ExpressionStatementÕ<(Õ<2VÆCallExpressionÕ<(Õ<1K™IdentifierÕ<(Õ<*¢p4ëK™IdentifierÕ<+Õ<0•error¬LÆBlockStatementÕ<bÕ=ëb´IfStatementÕ<|Õ<ıU±LogicalExpressionÕ<ÄÕ<®U∞BinaryExpressionÕ<ÄÕ<çK™IdentifierÕ<ÄÕ<Ñ§data£!==SßLiteralÕ<âÕ<ç¿§null¢&&U∞BinaryExpressionÕ<ëÕ<®VÆCallExpressionÕ<ëÕ<üQ∞MemberExpressionÕ<ëÕ<ùK™IdentifierÕ<ëÕ<ï§dataK™IdentifierÕ<ñÕ<ùßvalueOf¬¬ê¬£!==SßLiteralÕ<§Õ<®¿§nullLÆBlockStatementÕ<™Õ<ıëO≥ExpressionStatementÕ<»Õ<€VÆCallExpressionÕ<»Õ<⁄K™IdentifierÕ<»Õ< ¢o4ëVÆCallExpressionÕ<ÀÕ<ŸQ∞MemberExpressionÕ<ÀÕ<◊K™IdentifierÕ<ÀÕ<œ§dataK™IdentifierÕ<–Õ<◊ßvalueOf¬¬ê¬¬¿¬c´CatchClauseÕ=:Õ=rK™IdentifierÕ=AÕ=F•errorLÆBlockStatementÕ=HÕ=rëO≥ExpressionStatementÕ=ZÕ=dVÆCallExpressionÕ=ZÕ=cK™IdentifierÕ=ZÕ=\¢p4ëK™IdentifierÕ=]Õ=b•error¬¿ê¿í‘reï§type•start£end™specifiers¶source±ImportDeclaration 'ë‘rfî§type•start£end•local∂ImportDefaultSpecifierK™Identifier§huksSßLiteral&≥@ohos.security.huksµ"@ohos.security.huks"e±ImportDeclaration(ÃHë‘rgï§type•start£end®imported•localØImportSpecifier19K™Identifier19®AuthImplK™Identifier19®AuthImplSßLiteralÃAÃG§../a¶"../a"